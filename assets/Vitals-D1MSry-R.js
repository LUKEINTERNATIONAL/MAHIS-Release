import{R as z,r as E,c as I,d as Q,ae as Z,bU as J,w as q,a as K,E as A,e as X,f as j,l as x,z as C,k as ee,A as te,F as ae,O as re}from"./vendor-8nEYVyB7.js";import{i as f,u as G,aL as D,P as H,b7 as F,Y as L,H as P,Q as V,aZ as _,x as S,B as ie,aG as W,aH as ne,y,k as se,t as oe,_ as le}from"./index-7qwbP5UI.js";import{l as U}from"./lodash-Dt8AsbQm.js";import{P as ue}from"./previousVitals-BuJOkgeo.js";import{s as ce,E as pe}from"./encounter_type-lroHHjb_.js";import{v as ve}from"./group_validation-DJ5Q4Z77.js";import{c as de}from"./SvgDynamicColor-BtXmdsK-.js";import{u as me}from"./VitalsStore-B2mcqbfC.js";import{f as ge}from"./formatServerData-DY5RXAMO.js";import"./apexcharts-BZW0LBrS.js";import"./app_encounter_service-DR5HCXoD.js";const k=[{isFinishBtn:!1,validationStatus:"",sectionHeader:"Height and weight",actionBtn:"Finish and Save",data:{rowData:[{colData:[{inputHeader:"Height*",unit:"cm",icon:f.height,value:"",name:"Height (cm)",required:!0,eventType:"input",alertsErrorMassage:"",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"vitalsHeight"},{inputHeader:"Weight*",unit:"kg",icon:f.weight,value:"",name:"Weight",required:!0,eventType:"input",alertsErrorMassage:"",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"vitalsWeight"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"bmi",index:""}],previousView:{name:"vitals"}},{sectionHeader:"Blood pressure",data:{rowData:[{colData:[{inputHeader:"Systolic Pressure",unit:"mmHg",icon:f.systolicPressure,value:"",name:"Systolic",required:!0,eventType:"input",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsSystolicPressure"},{inputHeader:"Diastolic pressure",unit:"mmHg",icon:f.diastolicPressure,value:"",name:"Diastolic",required:!0,eventType:"input",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsDiastolicPressure"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"bp",index:""}],previousView:{name:"vitals"}},{sectionHeader:"Temperature and rates",data:{rowData:[{colData:[{inputHeader:"Temperature",unit:"C",icon:f.temprature,value:"",name:"Temperature",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsTemperature"},{inputHeader:"Pulse rate",unit:"BMP",icon:f.pulse,value:"",name:"Pulse",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsPulseRate"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"temp",index:""},{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"pulse",index:""}]},{sectionHeader:"null",data:{rowData:[{colData:[{inputHeader:"Respiratory rate",unit:"BMP",icon:f.respiratory,value:"",name:"Respiratory rate",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsRespiratoryRate"},{inputHeader:"Oxygen saturation",unit:"%",icon:f.oxgenStaturation,value:"",name:"SAO2",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsOxygenSaturation"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"respiratory",index:""},{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"oxygen",index:""}]}],fe=z("NCDVitalsStore",{state:()=>({vitals:[...k],current_patient:{}}),actions:{setVitals(c){this.vitals=c},getInitialVitals(c){var d;return(d=this.current_patient)!=null&&d.ID&&this.current_patient.ID!==c?U.cloneDeep(k):U.cloneDeep(k)},setCurrentPatient(c){this.current_patient=c}},persist:!0});function De(){const c=E({}),d=E({});let o=E({});const B=G(),m=I(()=>B.patient),N=me();o=I(()=>N.vitals);const T=async()=>{var n,t;const e=["Height (cm)","Weight","Systolic","Diastolic","Temperature","Pulse","SAO2","Respiratory rate"],a=P.getAgeInYears((t=(n=m.value)==null?void 0:n.personInformation)==null?void 0:t.birthdate),r=e.map(async i=>{const l=await V.getFirstObsDatetime(m.value.patientID,i);l&&P.toStandardHisFormat(l)==P.sessionDate()?(i=="Weight"&&_(o.value,"Height And Weight Not Done","displayNone",!0),i=="Systolic"&&_(o.value,"Blood Pressure Not Done","displayNone",!0),i=="Pulse"&&_(o.value,"Pulse Rate Not Done","displayNone",!0),i=="Respiratory rate"&&_(o.value,"Respiratory rate Not Done","displayNone",!0),S(o.value,i,"value",await V.getFirstValueNumber(m.value.patientID,i,P.sessionDate())),S(o.value,i,"disabled",!0)):S(o.value,i,"value",""),i==="Respiratory rate"&&a<=5&&(S(o.value,i,"required",!0),S(o.value,i,"inputHeader","Respiratory rate*"))});await Promise.all(r)},p=async(e,a)=>{var r,n,t,i,l,u,h,w;(n=(r=m.value)==null?void 0:r.personInformation)!=null&&n.gender&&((i=(t=m.value)==null?void 0:t.personInformation)!=null&&i.birthdate)&&D.vitalsHeight(e)==null&&D.vitalsWeight(a)==null?c.value=await L.getBMI(parseInt(a),parseInt(e),(u=(l=m.value)==null?void 0:l.personInformation)==null?void 0:u.gender,P.calculateAge((w=(h=m.value)==null?void 0:h.personInformation)==null?void 0:w.birthdate,P.sessionDate())):c.value={},await g()},g=async()=>{var a,r,n,t,i,l;if(!o.value[0])return;const e=(r=(a=c.value)==null?void 0:a.color)!=null?r:[];R("bmi","BMI "+((t=(n=c.value)==null?void 0:n.index)!=null?t:""),"",{colors:e,value:(l=(i=c.value)==null?void 0:i.result)!=null?l:""},L.iconBMI(e))},s=async(e,a)=>{var n,t,i,l;d.value=b(e,a),D.vitalsSystolic(e)==null&&D.vitalsDiastolic(a)==null||(d.value={});const r=(t=(n=d.value)==null?void 0:n.colors)!=null?t:[];R("bp",e+"/"+a,"mmHg",{colors:r,value:(l=(i=d.value)==null?void 0:i.value)!=null?l:""},de(r))},R=async(e,a,r,n,t="")=>{var u,h;if(!a)return;const i=a+" "+r,l=(u=n==null?void 0:n.colors)!=null?u:[];F(o.value,e,"icon",t||""),F(o.value,e,"textColor",l[1]),F(o.value,e,"index",i),F(o.value,e,"backgroundColor",l[0]),F(o.value,e,"value",(h=n==null?void 0:n.value)!=null?h:"")},b=(e,a)=>{if(e&&a){let r,n,t,i;const u=new H().getAge();return u<1?(r=75,n=100,t=50,i=70):u>=1&&u<6?(r=80,n=110,t=50,i=80):u>=6&&u<13?(r=85,n=120,t=55,i=80):u>=13&&u<18?(r=95,n=140,t=60,i=90):(r=100,n=130,t=60,i=90),e<r&&a<t?{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low BP "}:e>=r&&e<=n&&a>=t&&a<=i?{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal BP "}:e>140&&a>90?{colors:["#FECDCA","#B42318","#FDA19B"],value:"High BP"}:e<r?{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low BP (Using Systolic Only)"}:e>=r&&e<=n?{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal BP (Using Systolic Only)"}:{colors:["#FECDCA","#B42318","#FDA19B"],value:"High BP (Using Systolic Only)"}}return{}};return{BMI:c,BPStatus:d,vitalsData:o,patient:m,setTodayVitals:T,setBMI:p,updateBMI:g,updateBP:s,updateRate:R,getBloodPressureStatus:b,getTemperatureStatus:e=>{if(e&&D.vitalsTemperature(e)==null){let a,r;const t=new H().getAge();if(t<=1)a=35.5,r=37.4;else if(t>=1&&t<=18)a=35.5,r=37.4;else if(t>=19&&t<=64)a=35.5,r=37.4;else if(t>=65)a=35.5,r=37.4;else return{};if(e<a)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low Temperature "};if(e>=a&&e<=r)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal Temperature "};if(e>r)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High Temperature "}}return{}},getPulseRateStatus:e=>{if(D.vitalsPulseRate(e)==null){let a,r;const t=new H().getAge();if(t<=.25)a=100,r=160;else if(t>=.25&&t<=1)a=80,r=120;else if(t>=1&&t<=2)a=80,r=120;else if(t>=6&&t<=12)a=70,r=100;else if(t>=13&&t<=18)a=55,r=90;else if(t>=18)a=60,r=100;else return{};if(e<a)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low Pulse Rate "};if(e>=a&&e<=r)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal Pulse Rate "};if(e>r)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High Pulse Rate "}}return{}},getOxygenSaturationStatus:e=>{if(e&&D.vitalsOxygenSaturation(e)==null){if(e<95)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low oxygen saturation"};if(e>=95&&e<=100)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal oxygen saturation"}}return{}},getRespiratoryRateStatus:e=>{if(D.vitalsRespiratoryRate(e)==null){let a,r;const t=new H().getAge();if(t<=1)a=30,r=60;else if(t>=1&&t<3)a=24,r=40;else if(t>=3&&t<=6)a=22,r=34;else if(t>=6&&t<=12)a=18,r=30;else if(t>=12&&t<=18)a=12,r=16;else if(t>=19)a=12,r=20;else return{};if(e<a)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low respiratory rate"};if(e>=a&&e<=r)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal respiratory rate"};if(e>r)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High respiratory rate"}}return{}}}}const ye={class:"ion-padding",slot:"content"},Se=Q({__name:"Vitals",setup(c,{expose:d}){const o=G(),B=fe();Z();const m=J(),N=E(),T=E({}),p=De(),g=I(()=>o.patient),s=I(()=>B.vitals);q(()=>m.path,async()=>{T.value=s.value},{deep:!0}),q(()=>g.value.ID,async(v,e)=>{v!==e&&(b(),R(),await O())});const R=()=>{B.current_patient.ID!=g.value.ID&&(b(),B.setCurrentPatient(g.value))},b=()=>{B.setVitals(B.getInitialVitals(g.value.ID))},O=async()=>{const v=await V.getFirstValueNumber(g.value.patientID,"Height (cm)"),e=await V.getFirstObsDatetime(g.value.patientID,"Height (cm)"),a=new H;v&&(re(e).diff(a.getBirthdate(),"year")<18||a.getAge()<18||(S(s.value,"Height (cm)","disabled",!0),S(s.value,"Height (cm)","value",v),S(s.value,"Height (cm)","buildConceptIgnore",!0),W(s.value,"Height (cm)","displayNone",!0),ne(s.value,"Height Not Done","displayNone",!0),W(s.value,"Height (cm)","value","")))},M=async()=>{const v=y(s.value,"Height (cm)","value"),e=y(s.value,"Weight","value"),a=y(s.value,"Systolic","value"),r=y(s.value,"Diastolic","value"),n=y(s.value,"Temperature","value"),t=y(s.value,"Pulse","value"),i=y(s.value,"Respiratory rate","value"),l=y(s.value,"SAO2","value");await p.setBMI(v,e),await p.updateBP(a,r);const u=p.getPulseRateStatus(t);await p.updateRate("pulse",t," BMP",u,4);const h=p.getTemperatureStatus(n);p.updateRate("temp",n,"Â°C",h,4);const w=p.getRespiratoryRateStatus(i);p.updateRate("respiratory",i,"BMP",w,6);const $=p.getOxygenSaturationStatus(l);p.updateRate("oxygen",l,"%",$,6)};return K(async()=>{b(),T.value=s.value,await O()}),d({onSubmit:async()=>{const v=await ge(s.value);return await ve(s.value)&&v.length>0?(await ce(g.value.patientID,pe.VITALS,v),se("Vitals saved successful"),!0):(oe("Please fill all required fields before submitting"),!1)}}),(v,e)=>{const a=A("ion-label"),r=A("ion-item"),n=A("ion-accordion"),t=A("ion-accordion-group"),i=A("ion-row");return j(),X(ae,null,[x(ie,{contentData:s.value,"onUpdate:inputValue":e[0]||(e[0]=l=>M())},null,8,["contentData"]),x(i,null,{default:C(()=>[x(t,{ref_key:"accordionGroup",ref:N,class:"previousView"},{default:C(()=>[x(n,{value:"first","toggle-icon-slot":"start",style:{"border-radius":"10px","background-color":"#fff"}},{default:C(()=>[x(r,{slot:"header",color:"light"},{default:C(()=>[x(a,{class:"previousLabel"},{default:C(()=>e[1]||(e[1]=[te("Previous measurements")])),_:1,__:[1]})]),_:1}),ee("div",ye,[x(ue)])]),_:1})]),_:1},512)]),_:1})],64)}}}),Te=le(Se,[["__scopeId","data-v-24c5f37c"]]);export{Te as default};
