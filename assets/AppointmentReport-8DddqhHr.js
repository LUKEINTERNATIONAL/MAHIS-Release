import{l as o,R as l}from"./report_service-ByZpHQux.js";import{g as m,b as c,p as u,t as d,e as f,i as b,c as _}from"./index-EBUpS4L5.js";import{d as h,r as w,E as g,f as R}from"./vendor-BZmhsiOO.js";import"./lodash-Dt8AsbQm.js";import"./apexcharts-qhsxYq_s.js";import"./chartjs-DNDlIUTq.js";import"./barcode-qrcode-reader-B_Xr9wLp.js";const C=h({__name:"AppointmentReport",setup(y){const e=w([]),n=[m()],s=[{path:"arv_number",label:"ARV Number",preSort:u,initialSort:!0},{path:"given_name",label:"First name",exportable:!1},{path:"family_name",label:"Last name",exportable:!1},{path:"gender",label:"Gender",formatter:d},{path:"birthdate",label:"Date of Birth",formatter:f}];async function p({date:a}){var r;await o.show();const t=new l;try{e.value=(r=await t.getReport("programs/".concat(t.programId,"/scheduled_appointments"),{date:b(a)}))!=null?r:[]}catch(i){_("Unable to load report data"),console.error(i)}await o.hide()}return(a,t)=>(R(),g(c,{title:"Clinic Appointments Report","report-type":"Clinic",columns:s,"row-action-buttons":n,rows:e.value,"use-date-filter":"","use-secure-export":"",onGenerate:p},null,8,["rows"]))}});export{C as default};
