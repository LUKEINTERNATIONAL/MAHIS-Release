import{d as ee,ar as G,cw as De,U as Be,T as Le,as as Ae,ac as xe,G as Ne,S as He,a9 as le,cz as ot,X as rt,a1 as $e,a2 as Ve,E as D,e as F,f as R,k as y,l as r,z as S,F as Ee,L as lt,B as ct,a0 as dt,a3 as ut,m as q,A as Q,r as _,c as K,a as ce,n as pt,au as mt,cl as gt,b2 as H,w as $,y as Te,u as U,dE as ht,i as E,bG as vt,v as W,af as ft}from"./vendor-CDoWWVkO.js";import{D as de,aw as bt,H as B,S as L,m as oe,i as v,F as yt,ax as Y,a6 as St,l as Ce,j as We,ay as A,az as re,aA as wt,aB as _t,aC as Dt,aD as Z,u as ue,_ as ze,aE as Tt,B as Ct,aF as Ot,x as M,aG as te,ar as w,as as Rt,g as It,t as kt,P as Pt,z as Je,a8 as Oe,aH as Re,aI as Mt,a1 as Ft,c as Bt,aJ as Lt,f as At,K as xt,d as Nt,T as Ht,y as $t,aK as X,aL as Vt,aM as Et,N as Ie}from"./index-BA_QeeDc.js";import{D as Wt}from"./DemographicBar-DGK1AQJD.js";import{u as ie,D as zt,C as Jt,T as Ut}from"./TreatmentPlan-BUrXErSm.js";import{D as Ue}from"./DashBox-D0ObTJY4.js";import{B as qt}from"./BasicForm-BF7y4AhA.js";import{S as Gt,L as Kt,a as jt,P as Xt,u as ke,E as Qt,_ as Yt,b as Zt}from"./lab_order-BYlT-otp.js";import{a as ea}from"./userService-K2bLOxuU.js";import{v as Pe}from"./group_validation-DsHoIK3r.js";import{_ as ta}from"./RiskAssessment.vue_vue_type_script_setup_true_lang-BjyEEV-c.js";import{u as aa,N as na,M as sa,s as ia,a as oa,c as ra,b as la}from"./NextAppointment-hZqvwE12.js";import{l as Me}from"./lodash-Dt8AsbQm.js";import{a as Fe,b as ca}from"./formatServerData-BIRHO8DE.js";import{C as da}from"./Registration-B4XUvi0n.js";import{u as ua}from"./usePatientProfile-DlJ-wJuV.js";import"./apexcharts-BHjAlFBS.js";import"./previousDiagnosis-yUVWPCQf.js";import"./drug_service-CXKst7qj.js";import"./DateInputField-DPSejvEW.js";import"./drug_prescription_service-CgXpdMLM.js";import"./ncd_appointment_service-CU1v0oYz.js";import"./useLocation-BuPNOKSG.js";import"./useExposeFromStandardForm-FW92qusl.js";import"./vaccines_service-Si5n2uqx.js";import"./sms_service-XAwdsA1u.js";import"./EIRreportsStore-D4dBuI91.js";import"./Export-B8-W4eaU.js";import"./Outcome-CsKO-AJM.js";const pa=ee({name:"Menu",components:{CheckInConfirmationModal:bt,IonContent:le,IonHeader:He,IonItem:Ne,IonList:xe,IonMenu:Ae,IonTitle:Le,IonToolbar:Be,DynamicButton:de,DashBox:Ue,LabModal:jt,LabViewResultsModal:Kt,SendToLabConfirmationModal:Gt,DataTable:De},computed:{...G(ue,["patient"]),...G(ke,["labResults"]),...G(Z,["investigations"]),...G(Ce,["patientsWaitingForVitals","patientsWaitingForConsultation","patientsWaitingForLab","patientsWaitingForDispensation"]),hasEnterResults(){return this.listOrders.some(t=>t.btn&&t.btn.includes("enter_results"))}},props:{propOrders:{default:[]}},data(){return{tableData:[],options:{responsive:!0,select:!1,layout:{topStart:"buttons",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,buttons:[{text:" <b>+ Add other tests </b>",className:"add-test text-white",action:async()=>{await this.openEnterResultModal()}}]},header:["Lab Test","Specimen","Accession Number","Order Date","Result","Action"],iconsContent:v,valueNumericArray:[],obsDatetime:[],graphIcon:Dt(["#006401"]),listIcon:_t(["#636363"]),displayGraph:!0,sendToLabModalOpen:!1,orders:[],userRoles:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],listOrders:[],listResults:[],hasPatientsWaitingForLab:!1,labResultsContent:"",listHeaderOrders:"",service:"",openModal:!1,openResultsModal:!1,series:[{name:"",data:[]}]}},setup(){return{checkmark:Ve,pulseOutline:$e}},async mounted(){await this.updateInvestigationWizard(),await this.setListData(),this.$nextTick(()=>{const t=this.$refs.dataTable.dt;t.columns.adjust().draw(),t.on("click",".result-btn",n=>{const e=n.target.getAttribute("data-id");this.openResultsForm(JSON.parse(e))}),t.on("click",".view-btn",n=>{const e=n.target.getAttribute("data-id");this.viewLabOrder(JSON.parse(e))}),t.on("click",".delete-btn",n=>{const e=n.target.getAttribute("data-id");this.voidLabOrder(JSON.parse(e),n)}),t.on("click",".order-btn",n=>{const e=n.target.getAttribute("data-id");this.saveTest(JSON.parse(e))})}),this.orders=this.propOrders,this.service=new wt(this.patient.patientID),this.userRoles=await L.getUserRoles()},watch:{$route:{async handler(){await this.setListData()},deep:!0},patient:{async handler(){await this.setListData()},deep:!0}},methods:{async closeModal(){this.openModal=!1,await this.setListData()},async saveTest(t){const n=[{concept_id:await A.getConceptID(t.name,!0),name:t.name,specimen:t.specimen,reason:"Routine",specimenConcept:await A.getConceptID(t.specimen,!0)}];let s=(await re.buildLabOrders("",n))[0];s.order_date=s.date,s.specimen.name=await A.getConceptName(s.specimen.concept_id),s.tests[0].name=await A.getConceptName(s.tests[0].concept_id),this.patient.labOrders.unsaved.push(s),await Y(this.patient)},async openEnterResultModal(){await We(Qt,{class:"lab-results-modal"},!0,{title:"name"}),await this.setListData()},toggleSendToLabModal(){this.sendToLabModalOpen=!this.sendToLabModalOpen},async fetchPatientLabStageData(){const t=await ea(),n=t?t.code:null;if(n){const e=await St.getPatientList("LAB",n);await Ce().refresh(n),this.patient.patientID&&(this.hasPatientsWaitingForLab=e.some(s=>s.patient_id===this.patient.patientID))}},async updateInvestigationWizard(){var n,e,s,a,l;if(!((n=this.patient)!=null&&n.labOrders)||(this.orders=[...(s=(e=this.patient)==null?void 0:e.labOrders)==null?void 0:s.saved,...(l=(a=this.patient)==null?void 0:a.labOrders)==null?void 0:l.unsaved],!this.orders))return;const t=await this.orders.filter(i=>B.toStandardHisFormat(B.sessionDate())===B.toStandardHisFormat(i.order_date));t.length>0?this.investigations[0].selectedData=t:this.investigations[0].selectedData=""},dismiss(){rt.dismiss()},async voidLabOrder(t,n){var s,a,l;if(await yt("Do you want to delete ".concat(t.tests[0].name," ?"),n)){const i=JSON.parse(JSON.stringify(this.patient));i.labOrders.saved.some(m=>{var u,g;return m.order_date===t.order_date&&((u=m==null?void 0:m.tests[0])==null?void 0:u.name)==((g=t==null?void 0:t.tests[0])==null?void 0:g.name)})?(i.labOrders.saved=this.removeTestByNameAndDate(i.labOrders.saved,t.tests[0].name,t.order_date),(l=(a=(s=i.labOrders)!=null?s:i.labOrders={}).voided)!=null||(a.voided=[]),i.labOrders.voided.push({orderId:t.id,reason:"Mistake entry"})):i.labOrders.unsaved=this.removeTestByNameAndDate(i.labOrders.unsaved,t.tests[0].name,t.date),await Y(i)}await this.setListData()},removeTestByNameAndDate(t,n,e){return t.filter(s=>(s.order_date===e&&(s.tests=s.tests.filter(a=>a.name!==n)),s.tests.length>0))},async openResultsForm(t){let n;L.getUseIndexDBStatus()||L.getModsStatus()?any=await oe("testResultIndicators",{whereClause:{test_type_id:t.concept_id}}):n=await Xt.getTestIndicatorsWithID(t.concept_id);const e=[t,{validationStatus:"",data:{rowData:[{colData:[]}]}}];n.forEach(a=>{let l={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:""};if(a.name=="RBS"&&(l={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),a.name=="FBS"&&(l={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),a.name=="MRDT"||a.name=="Tuberculosis program"||a.name=="Vdrl"||a.name=="Hepatitis B"||a.name=="Lam"||a.name=="CrAg"||a.name=="CD4 count"||a.name=="Leukocytes"||a.name=="Protein"||a.name=="Nitrite"||a.name=="Urine Ketones"||a.name=="HIV test"){let i=[];(a.name=="MRDT"||a.name=="Vdrl"||a.name=="Hepatitis B"||a.name=="CrAg"||a.name=="Lam")&&(i=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),a.name=="Tuberculosis program"&&(i=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),a.name=="CD4 count"&&(i=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(a.name=="Leukocytes"||a.name=="Protein"||a.name=="Nitrite"||a.name=="Ketones"||a.name=="Urine Ketones")&&(i=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),a.name=="HIV test"&&(i=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),l={inputHeader:a.name,icon:v.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:i,id:a.concept_id,idName:"district_id"}}e[1].data.rowData[0].colData.push(l)}),ke().setLabResults(e),this.openModal=!0,this.orders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async viewLabOrder(t){this.labResultsContent=t,this.openResultsModal=!0},async setListData(){if(!this.patient.labOrders)return;this.orders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const t=this.generateListItems(this.orders,"order"),n=[["FBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"FBS",specimen:"Blood"}),"'>Order Test</button> ")],["HbA1c","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"HbA1c",specimen:"Blood"}),"'>Order Test</button> ")],["RBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"RBS",specimen:"Blood"}),"'>Order Test</button> ")]],e=n.filter(l=>!t.some(i=>i[0]===l[0])),s=t.filter(l=>n.some(i=>i[0]===l[0])),a=t.filter(l=>!s.some(i=>i[0]===l[0]));this.tableData=[...s,...e,...a],await this.updateInvestigationWizard(),De.use(ot)},generateListItems(t,n){return t.length>0?t.flatMap(e=>e.tests.flatMap(s=>{var m,u,g,T;const a='<button class="btn btn-outline-success btn-sm result-btn" data-id=\''.concat(JSON.stringify(s),"'>Enter Result</button> "),l='<button class="btn btn-outline-secondary btn-sm attach-btn" data-id=\''.concat(JSON.stringify(s),"'>").concat(this.iconsContent.attach2,"</button>"),i='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(s),"'>").concat(this.iconsContent.view2,"</button> ");let d=a+l;((m=s==null?void 0:s.result)==null?void 0:m.length)==1?d=(s==null?void 0:s.result)!=null?((u=s==null?void 0:s.result[0])==null?void 0:u.value_modifier)+((g=s==null?void 0:s.result[0])==null?void 0:g.value):null:((T=s==null?void 0:s.result)==null?void 0:T.length)>1&&(s==null||s.result,d=i);let p="";return e!=null&&e.accession_number?p='<button class="btn btn-outline-secondary btn-sm" data-id=\''.concat(JSON.stringify(e),"'>").concat(this.iconsContent.print2,"</button>"):d="",[[s==null?void 0:s.name,e==null?void 0:e.specimen.name,(e==null?void 0:e.accession_number)||"",B.toStandardHisFormat(e==null?void 0:e.order_date),d,p+'\n                                <button class="btn btn-outline-danger btn-sm delete-btn" data-id=\''.concat(JSON.stringify(e),"'>").concat(this.iconsContent.delete2,"</button>\n                                ")]]})):[]}}}),ma={class:"container"},ga={class:"table-responsive"};function ha(t,n,e,s,a,l){const i=D("DataTable"),d=D("LabViewResultsModal"),p=D("LabModal");return R(),F("div",ma,[y("div",ga,[r(i,{ref:"dataTable",options:t.options,data:t.tableData,class:"display nowrap",width:"100%"},{default:S(()=>[y("thead",null,[y("tr",null,[(R(!0),F(Ee,null,lt(t.header,m=>(R(),F("th",{key:m},ct(m),1))),128))])])]),_:1},8,["options","data"])]),r(d,{popoverOpen:t.openResultsModal,content:t.labResultsContent,onCloseModal:n[0]||(n[0]=m=>t.openResultsModal=!1)},null,8,["popoverOpen","content"]),r(p,{popoverOpen:t.openModal,onSaved:t.closeModal,onCloseModal:n[1]||(n[1]=m=>t.openModal=!1)},null,8,["popoverOpen","onSaved"])])}const va=ze(pa,[["render",ha],["__scopeId","data-v-449f8b95"]]),fa=ee({name:"Menu",mixins:[Yt],components:{IonContent:le,IonHeader:He,IonItem:Ne,IonList:xe,IonMenu:Ae,IonTitle:Le,IonToolbar:Be,IonInput:ut,IonPopover:dt,DashBox:Ue,SelectionPopover:Ot,BasicInputField:Ct,BasicForm:qt,List:Tt,DynamicButton:de,labOrderResults:va},data(){return{segmentContent:"Lab Investigations",iconsContent:v,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:Ve,pulseOutline:$e}},computed:{...G(Z,["investigations"]),...G(ue,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var t;(t=this.patient)!=null&&t.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(t){this.segmentContent=t},async getTests(){let t;L.getUseIndexDBStatus()&&L.getModsStatus()?t=await oe("testTypes"):t=await re.getTestTypes(),M(this.investigations,"test","multiSelectData",t)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var n;if(!((n=this.patient)!=null&&n.labOrders))return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const t=await this.labOrders.filter(e=>B.toStandardHisFormat(B.sessionDate())===B.toStandardHisFormat(e.order_date));t.length>0?this.investigations[0].selectedData=t:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),Z().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return Pe(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(M(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(M(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){Pe(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(t,n){for(let e of n)for(let s of e.tests)if(s.name===t)return!0;return!1},async saveTest(){await new Zt().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await A.getConceptID(this.inputFields[1].value.name,!0)}]),M(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(t){if(t.inputHeader=="Test"&&this.checkTest(),M(this.investigations,"specimen","alertsErrorMassage",""),t.inputHeader=="Test"&&t.value){let n;L.getUseIndexDBStatus()&&L.getModsStatus()?n=await oe("specimens"):n=await re.getSpecimens("",1e3),this.specimen=await A.getConceptSet(t.value.name,"",{names:n.map(e=>e.name)}),this.specimen.length==1?(M(this.investigations,"specimen","value",this.specimen[0]),M(this.investigations,"specimen","disabled",!0)):(M(this.investigations,"specimen","value",""),M(this.investigations,"specimen","disabled",!1)),M(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(t){return await this.labOrders.filter(n=>n.name.toLowerCase().includes(t.toLowerCase()))},async filterSpecimen(t){var n;return(n=this.specimen[0])!=null&&n.name&&t?await this.specimen.filter(e=>e==null?void 0:e.name.toLowerCase().includes(t.toLowerCase())):[]},setTest(t){this.selectedText=t.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=t.name:this.investigations[0].data.rowData[0].colData[1].value=t.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),ba={class:"background"},ya={key:0},Sa={key:1},wa={key:2},_a={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},Da={key:3},Ta={key:4};function Ca(t,n,e,s,a,l){const i=D("ion-label"),d=D("ion-segment-button"),p=D("ion-segment"),m=D("VisitsHistory"),u=D("labOrderResults");return R(),F("div",ba,[r(p,{value:t.segmentContent,style:{"margin-top":"5px"}},{default:S(()=>[r(d,{value:"Lab Investigations",onClick:n[0]||(n[0]=g=>t.setSegmentContent("Lab Investigations"))},{default:S(()=>[r(i,null,{default:S(()=>n[3]||(n[3]=[Q("Lab Investigations")])),_:1,__:[3]})]),_:1}),r(d,{value:"Radiology Investigation",onClick:n[1]||(n[1]=g=>t.setSegmentContent("Radiology Investigation"))},{default:S(()=>[r(i,null,{default:S(()=>n[4]||(n[4]=[Q("Radiology Investigation")])),_:1,__:[4]})]),_:1}),r(d,{value:"Other Investigation",onClick:n[2]||(n[2]=g=>t.setSegmentContent("Other Investigation"))},{default:S(()=>[r(i,null,{default:S(()=>n[5]||(n[5]=[Q("Other Investigation")])),_:1,__:[5]})]),_:1})]),_:1},8,["value"]),t.segmentContent=="Radiology Investigation"?(R(),F("div",ya,[r(m)])):q("",!0),t.segmentContent=="Other Investigation"?(R(),F("div",Sa)):q("",!0),t.segmentContent=="Lab Investigations"?(R(),F("div",wa,[y("div",_a,[y("span",null,[r(u,{propOrders:t.labOrders},null,8,["propOrders"])])])])):q("",!0),t.segmentContent=="Radiology Investigation"?(R(),F("div",Da)):q("",!0),t.segmentContent=="Other Investigation"?(R(),F("div",Ta)):q("",!0)])}const Oa=ze(fa,[["render",Ca],["__scopeId","data-v-db5a3e37"]]),Ra=()=>{const t=te(),n=_(""),e=async()=>{n.value=await t.checkHeight()},s=K(()=>[{componentType:"Heading",name:"Height and weight",grid:{s:"3"}},{componentType:"inputField",name:"height",header:"Height",unit:"cm",type:"number",icon:v.height,value:n.value||"",grid:{s:"4.5"},validation:a=>w.vitalsHeight(a),disabled:a=>a["Check height not done"]||n.value},{componentType:"inputField",name:"weight",header:"Weight",unit:"kg",icon:v.weight,type:"number",grid:{s:"4.5"},validation:a=>w.vitalsWeight(a),disabled:a=>a["Check weight not done"]},{grid:{s:"3"}},{componentType:"Alert",condition:async a=>w.vitalsWeight(a.weight)==null&&w.vitalsHeight(a.height)==null?await t.setBMI(a.height,a.weight):!1,grid:{s:"9"}},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check height not done",type:"single",label:"Height not done",value:"",grid:{s:"4.5"},disabled:a=>n.value},{componentType:"checkboxField",name:"Check weight not done",type:"single",label:"Weight not done",grid:{s:"4.5"}},{grid:{s:"3"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"height",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:v.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:a=>!a||a.length===0?"Please select at least one option":null,condition:a=>a["Check height not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Weight",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:v.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:a=>!a||a.length===0?"Please select at least one option":null,condition:a=>a["Check weight not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}]);return{height:n,loadHeight:e,heightWeightFormSection:s}},Ia=()=>{const t=te();return{bloodPressureFormSection:K(()=>[{componentType:"Heading",name:"Blood pressure",grid:{s:"3"}},{componentType:"inputField",name:"Systolic",header:"Systolic Pressure",unit:"mmHg",type:"number",icon:v.systolicPressure,grid:{s:"4.5"},validation:e=>w.vitalsSystolic(e),disabled:e=>e["Check blood pressure not done"]},{componentType:"inputField",name:"Diastolic",header:"Diastolic pressure",unit:"mmHg",icon:v.diastolicPressure,type:"number",grid:{s:"4.5"},validation:e=>w.vitalsDiastolic(e),disabled:e=>e["Check blood pressure not done"]},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>w.vitalsSystolic(e.Systolic)==null&&w.vitalsDiastolic(e.Diastolic)==null?await t.updateBP(e.Systolic,e.Diastolic):!1},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check blood pressure not done",type:"single",label:"Blood pressure not done",value:"",grid:{s:"4.5"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Blood Pressure",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:v.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check blood pressure not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}])}},ka=()=>{const t=te();return{temperaturePulseRateForm:K(()=>[{componentType:"Heading",name:"Temperature and rates",grid:{s:"3"}},{componentType:"inputField",name:"Temperature",header:"Temperature",unit:"°C",type:"number",icon:v.temprature,grid:{s:"4.5"},validation:e=>w.vitalsTemperature(e),disabled:e=>e["Check temperature not done"]},{componentType:"inputField",name:"Pulse",header:"Pulse rate",unit:"BMP",icon:v.pulse,type:"number",grid:{s:"4.5"},validation:e=>w.vitalsPulseRate(e),disabled:e=>e["Check pulse rate not done"]},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(w.vitalsTemperature(e.Temperature)==null){const s=t.getTemperatureStatus(e.Temperature);return await t.updateRate("temp",e.Temperature,"°C",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(w.vitalsPulseRate(e.Pulse)==null){const s=t.getPulseRateStatus(e.Pulse);return await t.updateRate("pulse",e.Pulse,"BMP",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check temperature not done",type:"single",label:"Temperature not done",grid:{s:"4.5"}},{componentType:"checkboxField",name:"Check pulse rate not done",type:"single",label:"Pulse not done",grid:{s:"4.5"}},{grid:{s:"3"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Temperature",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:v.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check temperature not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Pulse",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:v.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check pulse rate not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}])}},Pa=()=>{const t=te();return{respiratoryRateOxygenForm:K(()=>[{grid:{s:"3"}},{componentType:"inputField",name:"Respiratory rate",header:"Respiratory rate",unit:"BMP",icon:v.respiratory,type:"number",grid:{s:"4.5"},validation:e=>w.vitalsRespiratoryRate(e),disabled:e=>e["Check respiratory rate not done"]},{componentType:"inputField",name:"SAO2",header:"Oxygen saturation",unit:"%",icon:v.oxgenStaturation,type:"number",grid:{s:"4.5"},validation:e=>w.vitalsOxygenSaturation(e),disabled:e=>e["Check oxygen saturation not done"]},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(w.vitalsRespiratoryRate(e["Respiratory rate"])==null){const s=t.getRespiratoryRateStatus(e["Respiratory rate"]);return await t.updateRate("respiratory",e["Respiratory rate"],"BMP",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(w.vitalsOxygenSaturation(e.SAO2)==null){const s=t.getOxygenSaturationStatus(e.SAO2);return await t.updateRate("oxygen",e.SAO2,"%",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check respiratory rate not done",type:"single",label:"Respiratory rate not done",grid:{s:"4.5"}},{componentType:"checkboxField",name:"Check oxygen saturation not done",type:"single",label:"Oxygen saturation not done",value:"",grid:{s:"4.5"}},{grid:{s:"3"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Respiratory rate",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:v.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check respiratory rate not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0},{componentType:"multiSelectInputField",header:"Specify Reason",name:"SAO2",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:v.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check oxygen saturation not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}])}},Ma={class:"ion-padding",slot:"content"},Fa=ee({__name:"Vitals",setup(t,{expose:n}){const e=Ra(),s=Ia(),a=ka(),l=Pa(),i=_(null),d=async()=>{if(!i.value){console.error("Form reference is not available");return}const u=i.value.getFormValues(),{newVitals:g,vitalsReasons:T}=await p(u);if(!g.length&&!T.length||i.value.validateForm()){kt("Vitals not saved");return}const I=new Pt().getObj();I.vitals.unsaved.push(...g,...T),await Y(I),i.value.resetForm(),Je("Vitals saved successful")},p=async u=>{const g=[],T=[];for(const[I,C]of Object.entries(u))typeof C=="string"&&C||typeof C=="number"?g.push(await Oe.buildValueNumber(I,parseInt(String(C)))):C!=null&&C.name&&T.push(await Oe.buildValueText(I,C.name));return{newVitals:g,vitalsReasons:T}};ce(async()=>{await e.loadHeight()});const m=K(()=>[...e.heightWeightFormSection.value,{grid:{s:"3"}},{grid:{s:"9"},componentType:"Dashes"},...s.bloodPressureFormSection.value,{grid:{s:"3"}},{grid:{s:"9"},componentType:"Dashes"},...a.temperaturePulseRateForm.value,...l.respiratoryRateOxygenForm.value]);return n({validateForm:()=>{var u;return(u=i.value)==null?void 0:u.validateForm()},onSubmit:d}),(u,g)=>{const T=D("ion-label"),I=D("ion-item"),C=D("ion-accordion"),z=D("ion-accordion-group"),ae=D("ion-row");return R(),F(Ee,null,[r(Rt,{formData:m.value,ref_key:"formRef",ref:i},null,8,["formData"]),r(ae,null,{default:S(()=>[r(z,{ref:"accordionGroup",class:"previousView"},{default:S(()=>[r(C,{value:"first","toggle-icon-slot":"start",style:{"border-radius":"10px","background-color":"#fff"}},{default:S(()=>[r(I,{slot:"header",color:"light"},{default:S(()=>[r(T,{class:"previousLabel"},{default:S(()=>g[0]||(g[0]=[Q("Previous measurements")])),_:1,__:[0]})]),_:1}),y("div",Ma,[r(It)])]),_:1})]),_:1},512)]),_:1})],64)}}}),Ba=t=>{const n=_(""),e=(i,d)=>{i%1===0&&(n.value=i)},s=()=>{n.value===0&&console.log("First Tab"),console.log("All Tabs")},a=i=>{const d=document.getElementsByClassName("form-wizard-vue");if(!d.length)return;const p=d[0].getElementsByClassName("fw-body-list");if(!p.length)return;const m=p[0].querySelector(".fw-custom-title");m&&m.remove();const u=document.createElement("li");u.className="fw-custom-title",u.textContent=i||t,u.style.cssText="\n            text-align: center;\n            font-weight: 700;\n            font-size: 18px;\n            flex-grow: 0.08;\n            padding: 10px 0;\n        ",p[0].insertBefore(u,p[0].firstChild)},l=()=>{pt(()=>{const i=document.querySelector(".fw-footer-left .fw-btn");if(console.log("🚀 ~ changeBtnIconPosition ~ button:",i),!i)return;const d=i.querySelector("span"),p=i.querySelector("i");!d||!p||(i.removeChild(d),i.removeChild(p),i.appendChild(p),i.appendChild(d))})};return ce(()=>{a()}),{currentTabIndex:n,onChangeCurrentTab:e,onTabBeforeChange:s,changeBtnIconPosition:l,addHeaderAboveList:a}},La={style:{width:"88vw",margin:"0 auto","margin-top":"10px"}},Aa={class:"back_profile"},pn=ee({__name:"ConsultationPlan",setup(t,{expose:n}){const{onTabBeforeChange:e,onChangeCurrentTab:s,currentTabIndex:a}=Ba("Consultation Plan"),{printVisitSummary:l}=ua(),i=mt(),d=gt();_([]),_([]),_(!1);const p=_(!0),m=Re(),u=ue(),g=Z(),T=Mt(),I=Ft(),C=aa(),z=Bt();Lt();const ae=At(),qe=ie(),Ge=xt(),{patient:k}=H(u),{vitals:Ke}=H(m),{investigations:je}=H(g),{diagnosis:Xe}=H(T),{substance:Qe}=H(ae),{selectedNCDMedicationList:pe}=H(C),{FootScreening:Ye,visualScreening:Ze,cvScreening:et}=H(qe),{sessionDate:me}=H(Ge),{apiStatus:xa}=H(Nt()),tt=()=>{i.push("patientProfile")},ne=()=>z.NCDActivities.map(o=>({title:o,icon:""})),f=_(ne()),ge=_(null),he=_(null),ve=_(null),fe=_(null),be=_(null),ye=_(null),Se=_(null),V=()=>{var h;if(!f.value||f.value.length===0)return console.log("Tabs not yet initialized"),null;const o=a.value>=0&&a.value<f.value.length?a.value:0;switch((h=f.value[o])==null?void 0:h.title){case"Vital Signs":return"Vitals";case"Risk Assessment":return"RiskAssessment";case"Investigations":return"Investigations";case"Diagnosis":return"DiagnosisComponent";case"Complications Screening":return"ComplicationsScreening";case"Treatment Plan":return"TreatmentPlan";case"Next Appointment":return"NextAppointment";default:if(z.NCDActivities.length>0)switch(z.NCDActivities[0]){case"Vital Signs":return"Vitals";case"Risk Assessment":return"RiskAssessment";case"Investigations":return"Investigations";case"Diagnosis":return"DiagnosisComponent";case"Complications Screening":return"ComplicationsScreening";case"Treatment Plan":return"TreatmentPlan";case"Next Appointment":return"NextAppointment"}return null}},se=()=>{p.value=!1,setTimeout(()=>{a.value=0,p.value=!0},0)},we=()=>{const o=Re();o.setVitals(o.getInitialVitals(k.value.ID))},x=async()=>{var h,P;const o=$t(me.value,"sessionDate","value")||B.sessionDate(),c=X("vitals");for(let b=0;b<f.value.length;b++){const N=f.value[b];if(N.title==="Vital Signs")f.value[b].icon=j(o,c)?"check":"";else if(N.title==="Risk Assessment"){const O=X("substanceAbuse");f.value[b].icon=j(o,O)?"check":""}else if(N.title==="Investigations"){const O=(P=(h=k==null?void 0:k.value)==null?void 0:h.labOrders)==null?void 0:P.saved,J=O==null?void 0:O.filter(it=>B.toStandardHisFormat(o)===B.toStandardHisFormat(it.order_date));f.value[b].icon=(J==null?void 0:J.length)>0?"check":""}else if(N.title==="Diagnosis"){const O=X("diagnosis");f.value[b].icon=j(o,O)?"check":""}else if(N.title==="Complications Screening"){const O=X("screening");f.value[b].icon=j(o,O)?"check":""}else N.title==="Treatment Plan"&&(pe.value.length>0?f.value[b].icon=sa()?"check":"":f.value[b].icon="")}},j=(o,c)=>{const h=new Date(o);return h.setHours(0,0,0,0),c.some(P=>{const b=new Date(P.obs_datetime);return b.setHours(0,0,0,0),b.getTime()===h.getTime()})},at=async()=>{var b,N,O,J;const o=[],c=await Fe(Ze.value),h=await ca(Ye.value),P=await Fe(et.value);c.length>0&&o.push({concept_id:await A.getConceptID("Visual acuity",!0),value_text:"visual acuity test",obs_datetime:A.getSessionDate(),child:c}),h.length>0&&o.push({concept_id:await A.getConceptID("Foot check",!0),value_text:"foot screening",obs_datetime:A.getSessionDate(),child:h}),P.length>0&&o.push(...P),o.length>0&&((J=(O=(N=(b=k.value).screening)!=null?N:b.screening={}).unsaved)!=null||(O.unsaved=[]),k.value.screening.unsaved.push(...o),Je("Complications saved successfully"))},nt=async()=>{L.getUserID(),k.value.patientID;const o=Et();if(!Me.isEmpty(o.selectedMedicalAllergiesList)){const c=Ie(),h=o.selectedMedicalAllergiesList.map(P=>({concept_id:985,obs_datetime:L.getSessionDate(),value_coded:P.concept_id,location_id:c.facilityLocation.code}));ia(h),o.clearSelectedMedicalAllergiesList()}if(!Me.isEmpty(I.nonPharmalogicalTherapyAndOtherNotes)){const c=Ie(),h=[{concept_id:2688,obs_datetime:L.getSessionDate(),value_text:I.nonPharmalogicalTherapyAndOtherNotes,location_id:c.facilityLocation.code}];await oa(h)}await ra(),await la().saveNonPharmaTherapyPatientData()},_e=async()=>{const o=[{ref:ge,name:"Vitals"},{ref:he,name:"Risk Assessment"},{ref:ve,name:"Investigations"},{ref:fe,name:"Diagnosis"},{ref:be,name:"Complications Screening"},{ref:ye,name:"Treatment Plan"},{ref:Se,name:"Next Appointment"}];for(const c of o)if(c.ref.value&&typeof c.ref.value.onSubmit=="function")try{await c.ref.value.onSubmit()}catch(h){console.error("Error calling ".concat(c.name," onSubmit:"),h)}else console.log("".concat(c.name," component ref not available or no onSubmit method"));await nt(),await at(),await Vt(),await Y(k.value),await st(),i.push("patientProfile")},st=async()=>{await We(da,{class:"small-confirm-modal "})!=="dismiss"&&await l()};return ce(async()=>{if(z.NCDActivities.length===0){i.push("patientProfile");return}ie().resetScreening(),f.value=ne(),await x(),(a.value===void 0||a.value<0)&&(a.value=0,console.log("Setting initial tab index to 0"))}),$(Ke,async()=>{await x()},{deep:!0}),$(k,async()=>{ie().resetScreening(),await x()},{deep:!0}),$(me,async()=>{await x()},{deep:!0}),$(je,async()=>{await x()},{deep:!0}),$(Xe,async()=>{await x()},{deep:!0}),$(Qe,async()=>{await x()},{deep:!0}),$(pe,async()=>{await x()},{deep:!0}),$(d,async o=>{se(),we(),f.value=ne()},{deep:!0}),$(k,async(o,c)=>{o.ID!=c.ID&&(se(),we())},{deep:!0}),n({saveData:_e,markWizard:x,refreshWizard:se}),(o,c)=>(R(),Te(U(ft),null,{default:S(()=>[r(Ht),r(U(le),{fullscreen:!0},{default:S(()=>[r(Wt),y("div",La,[p.value?(R(),Te(U(ht),{key:0,ref:"wizard","vertical-tabs":"","navigable-tabs":"","scrollable-tabs":"",startIndex:0,doneButton:{text:"Finish",icon:"check",hideText:!1,hideIcon:!1,disabled:!1},"custom-tabs":f.value,beforeChange:U(e),onChange:U(s),"onComplete:wizard":c[1]||(c[1]=h=>_e())},{default:S(()=>[y("div",null,[y("div",Aa,[r(de,{name:"Back to profile",iconSlot:"start",fill:"clear",icon:U(vt),"font-weight":"600",onClick:c[0]||(c[0]=h=>tt())},null,8,["icon"])])]),E(y("div",null,[r(Fa,{ref_key:"vitalsRef",ref:ge},null,512)],512),[[W,V()=="Vitals"]]),E(y("div",null,[r(ta,{ref_key:"riskAssessmentRef",ref:he},null,512)],512),[[W,V()=="RiskAssessment"]]),E(y("div",null,[r(Oa,{ref_key:"investigationsRef",ref:ve},null,512)],512),[[W,V()=="Investigations"]]),E(y("div",null,[r(zt,{ref_key:"diagnosisRef",ref:fe},null,512)],512),[[W,V()=="DiagnosisComponent"]]),E(y("div",null,[r(Jt,{ref_key:"complicationsRef",ref:be},null,512)],512),[[W,V()=="ComplicationsScreening"]]),E(y("div",null,[r(Ut,{ref_key:"treatmentPlanRef",ref:ye},null,512)],512),[[W,V()=="TreatmentPlan"]]),E(y("div",null,[r(na,{ref_key:"nextAppointmentRef",ref:Se},null,512)],512),[[W,V()=="NextAppointment"]])]),_:1},8,["custom-tabs","beforeChange","onChange"])):q("",!0)])]),_:1})]),_:1}))}});export{pn as default};
