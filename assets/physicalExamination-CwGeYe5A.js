import{d as y,aa as u,b4 as C,D as P,G as k,M,J as B,aO as U,bJ as N,aP as z,aN as F,aQ as T,W,U as $,T as O,b8 as H,ba as L,S as G,ad as J,aS as Q,cg as R,E as p,y as Y,f as j,z as A,l as g}from"./vendor-Bx_IVmwz.js";import{z as q,T as K,g as X,S as f,t as d,k as E,H as Z,m as x,bp as V,ai as aa,bu as ta,bt as ea,u as sa,i as ia,_ as na}from"./index-C_B4etN5.js";import{D as ra}from"./DemographicBar-D_lqcGvm.js";import{S as oa}from"./SaveProgressModal-DFFuj7CT.js";import{S as la,d as ca,V as _,y as ma}from"./Stepper-D2EohWRS.js";import{f as s,a as n,d as i}from"./formatServerData-BzcHYZIH.js";import"./lodash-Dt8AsbQm.js";import{A as I}from"./app_encounter_service-CL70yiSF.js";import{B as pa}from"./BasicFooter-B0qq4fFF.js";import{_ as da}from"./SetEncounter.vue_vue_type_script_lang-CSp7qZO4.js";import"./previousVitals-1cNWDbR4.js";import"./apexcharts-DCF7ZiNg.js";import"./SvgDynamicColor-DwhnsNNm.js";import"./patient_complaints_service-CQCce4dr.js";import"./group_validation-r1qGoral.js";import"./lab_order-BBpl-hym.js";import"./ncd_appointment_service-BRxqosQe.js";import"./clinicalDaysStore-M-HMhUX2.js";import"./UpcomingFeature-CAh725jj.js";import"./DatePicker.vue_vue_type_script_setup_true_lang-rvVES3QB.js";import"./vitals_service-DChhh3dw.js";import"./drug_service-BmKDTfg0.js";import"./drug_prescription_service-C5yKBP-Y.js";import"./appointment_service-DIIxf7o3.js";import"./FeatusModal-CGPh80er.js";class ha extends I{constructor(a,e){super(a,95,e)}}class ua extends I{constructor(a,e){super(a,116,e)}}class ga extends I{constructor(a,e){super(a,210,e)}}const fa=y({name:"PhysicalExam",mixins:[ca,da],components:{BasicFooter:pa,IonContent:J,IonHeader:G,IonMenuButton:L,IonPage:H,IonTitle:O,IonToolbar:$,Toolbar:K,ToolbarSearch:q,DemographicBar:ra,IonButton:W,IonCard:T,IonCardContent:F,IonCardHeader:z,IonCardSubtitle:N,IonCardTitle:U,IonAccordion:B,IonAccordionGroup:M,IonItem:k,IonLabel:P,IonModal:C,Stepper:la},data(){return{wizardData:[{title:"Vitals",class:"common_step",checked:!1,disabled:!1,number:1,last_step:""},{title:"Maternal exam",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Abdominal examination",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:""},{title:"Presenting signs for IPV",class:"common_step",checked:"",icon:!1,disabled:!1,number:4,last_step:"last_step"}],StepperData:[{title:"Vitals",component:"",value:"1"},{title:"Maternal exam",component:"MaternalExam",value:"2"},{title:"Abdominal examination",component:"AbdominalExamination",value:"3"},{title:"Presenting signs or conditions for IPV ",component:"PresentingSigns",value:"4"}],isOpen:!1,iconsContent:ia}},computed:{...u(sa,["patient"]),...u(ma,["ANCVitals"]),...u(ea,["respiratory","pallor","breastExam","vaginalInspection","cervicalExam","oedemaPresence"]),...u(V,["fetalAssessment","fetalDetails"]),...u(ta,["presentingSigns"])},mounted(){this.markWizard()},watch:{vitals:{handler(){this.markWizard()},deep:!0},DangerSigns:{handler(){this.markWizard()},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},diagnosis:{handler(){this.markWizard()},deep:!0}},setup(){return{chevronBackOutline:R,checkmark:Q,hasValidationErrors:[]}},methods:{markWizard(){},getSaveFunction(){},deleteDisplayData(t){return t.map(a=>(a==null||delete a.display,a==null?void 0:a.data))},async saveData(){if(await this.validaterowData()){x("Vitals form has errors");return}if(!await V().validate()){x("Abdominal exam section has errors");return}this.saveVitals(),this.saveMaternalExam(),this.saveAbdominalExam(),this.savePresentingSigns(),await this.$router.push("contact"),await aa()},async buildVitals(){return[...await s(this.ANCVitals),...await i(this.ANCVitals)]},async buildMaternalExam(){return[...await n(this.pallor),...await i(this.pallor),...await s(this.pallor),...await n(this.respiratory),...await i(this.respiratory),...await s(this.respiratory),...await i(this.breastExam),...await s(this.breastExam),...await n(this.breastExam),...await i(this.vaginalInspection),...await s(this.vaginalInspection),...await n(this.vaginalInspection),...await i(this.cervicalExam),...await s(this.cervicalExam),...await n(this.cervicalExam),...await i(this.oedemaPresence),...await s(this.oedemaPresence),...await n(this.oedemaPresence)]},async buildAbdominalExam(){return[...await s(this.fetalAssessment),...await n(this.fetalAssessment),...await i(this.fetalAssessment),...await s(this.fetalDetails),...await n(this.fetalDetails),...await i(this.fetalDetails)]},async buildPresentingSigns(){return[...await s(this.presentingSigns),...await n(this.presentingSigns),...await i(this.presentingSigns)]},async saveVitals(){const t=f.getUserID();await new _(this.patient.patientID,t).onFinish(this.ANCVitals)},async validaterowData(){var D,S;const t=f.getUserID(),a=new _(this.patient.patientID,t),e=Z.getAgeInYears((S=(D=this.patient)==null?void 0:D.personInformation)==null?void 0:S.birthdate);this.hasValidationErrors=[];let r=!1;return this.ANCVitals.forEach((l,c)=>{var b;(b=l==null?void 0:l.data)!=null&&b.rowData&&l.data.rowData.forEach((v,m)=>{v.colData.some((w,h)=>{const o=a.validator(w);return w.name==="Respiratory rate"&&e<=5?(o==null?void 0:o.length)>0?(r=!0,this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage=o.flat(1/0)[0]):this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage="":(o==null?void 0:o.length)>0?(r=!0,this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage=o.flat(1/0)[0]):this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage="",!1})})}),this.ANCVitals.validationStatus=!r,r},async saveMaternalExam(){if(this.pallor.length>=0||this.cervicalExam.length>=0||this.vaginalInspection.length>=0||this.breastExam.length>=0){const t=f.getUserID(),a=new ha(this.patient.patientID,t);if(!await a.createEncounter())return d("Unable to create maternal exam encounter");if(!await a.saveObservationList(await this.buildMaternalExam()))return d("Unable to create maternal exam details!");E("Maternal exam details have been created")}console.log(await this.buildMaternalExam())},async saveAbdominalExam(){if(this.fetalAssessment.length>=0||this.fetalDetails.length>=0){const t=f.getUserID(),a=new ua(this.patient.patientID,t);if(!await a.createEncounter())return d("Unable to create abdominal exam encounter");if(!await a.saveObservationList(await this.buildAbdominalExam()))return d("Unable to create abdominal exam details!");E("Abdominal exam details have been created")}console.log(await this.buildAbdominalExam())},async savePresentingSigns(){if(this.presentingSigns.length>=0){const t=f.getUserID(),a=new ga(this.patient.patientID,t);if(!await a.createEncounter())return d("Unable to create presenting signs encounter");if(!await a.saveObservationList(await this.buildPresentingSigns()))return d("Unable to create presenting signs details!");E("Presenting signs details have been created")}console.log(await this.buildPresentingSigns())},openModal(){X(oa)}}});function ba(t,a,e,r,D,S){const l=p("Toolbar"),c=p("DemographicBar"),b=p("Stepper"),v=p("ion-content"),m=p("BasicFooter"),w=p("ion-page");return j(),Y(w,null,{default:A(()=>[g(l),g(v,{fullscreen:!0},{default:A(()=>[g(c),g(b,{stepperTitle:"Physical examination",wizardData:t.wizardData,onUpdateStatus:t.markWizard,StepperData:t.StepperData,backUrl:t.userRoleSettings.url,backBtn:t.userRoleSettings.btnName,getSaveFunction:t.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),g(m,{onFinishBtn:a[0]||(a[0]=h=>t.saveData())})]),_:1})}const La=na(fa,[["render",ba]]);export{La as default};
