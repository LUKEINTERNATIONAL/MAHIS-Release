System.register(["./vendor-legacy-PwJwfeg2.js","./index-legacy-CAqY44sk.js"],(function(e,s){"use strict";var a,t,i,r,d,y,n,D,l,o,u,h;return{setters:[e=>{a=e.R,t=e.c,i=e.aa},e=>{r=e.s,d=e.J,y=e.H,n=e.a3,D=e.u,l=e.a$,o=e.S,u=e.b0,h=e.b1}],execute:function(){e("s",(function(){try{const e=s(),a=JSON.parse(b.value.globalPropertyStore().holidayDatesObj),t=JSON.parse(b.value.globalPropertyStore().maximumNumberOfCForEachDayObj),i=JSON.parse(b.value.globalPropertyStore().weekDaysPropertiesObj);return e.setHolidayDates(a.holidayDates),e.setMaximumNumberOfDaysForEachDay(t.maximumNumberOfDaysForEachDay),e.setAreMondaysDisabled(i.weekDays.areMondaysDisabled),e.setAreTuesdaysDisabled(i.weekDays.areTuesdaysDisabled),e.setAreWednesdaysDisabled(i.weekDays.areWednesdaysDisabled),e.setAreThursdaysDisabled(i.weekDays.areThursdaysDisabled),e.setAreFridaysDisabled(i.weekDays.areFridaysDisabled),e.setAreSaturdaysDisabled(i.weekDays.areSaturdaysDisabled),e.setAreSundaysDisabled(i.weekDays.areSundaysDisabled),!0}catch(e){return!1}}));const s=e("u",a("ClinicalDaysStore",{state:()=>({holidayDates:[],assignedAppointmentsDates:[],maximumNumberOfDaysForEachDay:0,areMondaysDisabled:!1,areTuesdaysDisabled:!1,areWednesdaysDisabled:!1,areThursdaysDisabled:!1,areFridaysDisabled:!1,areSaturdaysDisabled:!1,areSundaysDisabled:!1}),actions:{setHolidayDates(e){this.holidayDates=e},getHolidaydates(){return this.holidayDates},getHolidaydatesDataSize(){return this.holidayDates.length},generateDisabledDates(){const e=new Date(o.getSessionDate());e.setHours(0,0,0,0);const s=this.holidayDates.map((e=>new Date(e)));for(let a=new Date(0);a<e;a.setDate(a.getDate()+1))s.push(new Date(a));return s},getDays(e){const s=new Date("2024-01-01"),a=new Date("2030-12-31"),t=[],i=new Date(s);for(;i<=a;)i.getDay()===e&&t.push(new Date(i)),i.setDate(i.getDate()+1);return t},getAllSaturdays(){return 0==this.areSaturdaysDisabled?this.getDays(6):1==this.areSaturdaysDisabled?[]:void 0},getAllSundays(){return 0==this.areSundaysDisabled?this.getDays(0):1==this.areSundaysDisabled?[]:void 0},getAllMondays(){return 0==this.areMondaysDisabled?this.getDays(1):1==this.areMondaysDisabled?[]:void 0},getAllTuesdays(){return 0==this.areTuesdaysDisabled?this.getDays(2):1==this.areTuesdaysDisabled?[]:void 0},getAllWednesdays(){return 0==this.areWednesdaysDisabled?this.getDays(3):1==this.areWednesdaysDisabled?[]:void 0},getAllThursdays(){return 0==this.areThursdaysDisabled?this.getDays(4):1==this.areThursdaysDisabled?[]:void 0},getAllFridays(){return 0==this.areFridaysDisabled?this.getDays(5):1==this.areFridaysDisabled?[]:void 0},getDisabledDates(){return l(this.getAllMondays(),this.getAllTuesdays(),this.getAllWednesdays(),this.getAllThursdays(),this.getAllFridays(),this.getAllSaturdays(),this.getAllSundays(),this.generateDisabledDates())},getDisabledDates2(){return l(this.getAllMondays(),this.getAllTuesdays(),this.getAllWednesdays(),this.getAllThursdays(),this.getAllFridays(),this.getAllSaturdays(),this.getAllSundays())},setMaximumNumberOfDaysForEachDay(e){this.maximumNumberOfDaysForEachDay=e},getMaximumNumberOfDaysForEachDay(){return this.maximumNumberOfDaysForEachDay},setAreMondaysDisabled(e){this.areMondaysDisabled=e},getAreMondaysDisabled(){return this.areMondaysDisabled},setAreTuesdaysDisabled(e){this.areTuesdaysDisabled=e},getAreTuesdaysDisabled(){return this.areTuesdaysDisabled},setAreWednesdaysDisabled(e){this.areWednesdaysDisabled=e},getAreWednesdaysDisabled(){return this.areWednesdaysDisabled},setAreThursdaysDisabled(e){this.areThursdaysDisabled=e},getAreThursdaysDisabled(){return this.areThursdaysDisabled},setAreFridaysDisabled(e){this.areFridaysDisabled=e},getAreFridaysDisabled(){return this.areFridaysDisabled},setAreSaturdaysDisabled(e){this.areSaturdaysDisabled=e},getAreSaturdaysDisabled(){return this.areSaturdaysDisabled},setAreSundaysDisabled(e){this.areSundaysDisabled=e},getAreSundaysDisabled(){return this.areSundaysDisabled},setsssignedAppointmentsDates(e,s=!1){const a=n.getProgramID(),t=D().getPatient().patient_id;this.assignedAppointmentsDates.length=0,Array.isArray(this.assignedAppointmentsDates)?(this.assignedAppointmentsDates.forEach((e=>{e.markedNextApt=!1})),function(e,s,a,t){return e.some((e=>e.programID===s&&e.patientID===a&&u(new Date(e.date),new Date(t))))}(this.assignedAppointmentsDates,a,t,e)||this.assignedAppointmentsDates.push({programID:a,patientID:t,date:e,markedNextApt:s})):this.assignedAppointmentsDates=[]},getAssignedAppointmentsDates(){return this.assignedAppointmentsDates},getAssignedAppointments(){return Array.isArray(this.assignedAppointmentsDates)?function(e){const s=new Map;return e.forEach((e=>{const a=new Date(e.date).toISOString().split("T")[0];s.has(a)?s.set(a,s.get(a)+1):s.set(a,1)})),Array.from(s,(([e,s])=>({date:e,count:s})))}(this.assignedAppointmentsDates):[]},async setWeekDaysPropertiesObj(){const e=d(),s=r(),a=e.getfacilityLocation().code,t={facility_id:a,weekDays:{areMondaysDisabled:this.areMondaysDisabled,areTuesdaysDisabled:this.areTuesdaysDisabled,areWednesdaysDisabled:this.areWednesdaysDisabled,areThursdaysDisabled:this.areThursdaysDisabled,areFridaysDisabled:this.areFridaysDisabled,areSaturdaysDisabled:this.areSaturdaysDisabled,areSundaysDisabled:this.areSundaysDisabled}},i=JSON.stringify(t);await s.setGlobalProperty("week_days_properties_"+a,`${i}`)},async setMaximumNumberOfDaysForEachDayObj(){const e=d(),s=r(),a=e.getfacilityLocation().code,t={facility_id:a,maximumNumberOfDaysForEachDay:this.maximumNumberOfDaysForEachDay},i=JSON.stringify(t);await s.setGlobalProperty("maximum_number_Of_c_for_each_day_"+a,`${i}`)},async setHolidayDatesObj(){const e=d().getfacilityLocation().code,s=r(),a={facility_id:e,holidayDates:this.holidayDates.map((e=>y.toStandardHisFormat(e)))},t=JSON.stringify(a);await s.setGlobalProperty("holiday_date_"+e,`${t}`)},autoGeneratedDates(){const e=function(){const e=new h;return e.generateFormattedHolidayDates()}(),s=new Set(this.holidayDates);return e.forEach((e=>{s.add(e.date)})),this.holidayDates=Array.from(s),this.holidayDates}},persist:!0})),b=t((()=>i(r,["globalPropertyStore"])))}}}));
