import{d as V,r as u,c_ as x,a as L,y as T,f as p,z as l,l as r,u as i,ad as S,k as o,e as v,m as _,A as y,aw as k,F as I,L as C,G as B,ax as D,D as N,B as R,av as q,ag as A}from"./vendor-DowD5zKn.js";import{P as E,L as G,t as c,k as U}from"./index-Cd6xOYoL.js";import{P as g}from"./patient_type_service-BpmS2uQh.js";const z={key:0,class:"ion-padding"},j=V({__name:"ARTPatientType",setup(M,{expose:F}){const d=u(!1),f=u([]),m=u([]),h=new E,n=new g(h.getID(),-1),e=x({patientType:null,prevType:null,transerFacility:null});async function b(a=""){try{const t=await G.getFacilities({name:a});m.value=t}catch(t){console.error("Error fetching facilities:",t)}}async function P(){var a;if(e.patientType===e.prevType)return!0;if(!e.patientType)return c("Patient type is required"),!1;if(!/new patient/i.test(e.patientType)&&e.patientType!==e.prevType&&!e.transerFacility)return c("Facility is required"),!1;n.setPatientType(e.patientType),n.setLocationName(((a=e.transerFacility)==null?void 0:a.name)||"");try{return await n.save()?(U("Patient type saved successfully"),!0):(c("Failed to save patient type"),!1)}catch(t){return c("Failed to save patient type: ".concat(t)),!1}}return L(()=>{d.value=!0,f.value=g.getPatientTypes(),n.loadPatientType().then(()=>{const a=n.getType();a&&!/n\/a/i.test(a)&&(e.prevType=n.getType(),e.patientType=n.getType())}).finally(()=>{d.value=!1})}),F({onSubmit:P}),(a,t)=>(p(),T(i(A),{style:{height:"65vh"}},{default:l(()=>[r(i(S),null,{default:l(()=>[o("div",null,[t[2]||(t[2]=o("h2",{style:{"font-weight":"bold",margin:"12px"}},[y("Patient Type "),o("span",{style:{color:"red"}},"*")],-1)),r(i(k),{modelValue:e.patientType,"onUpdate:modelValue":t[0]||(t[0]=s=>e.patientType=s)},{default:l(()=>[(p(!0),v(I,null,C(f.value,(s,w)=>(p(),T(i(B),{key:w},{default:l(()=>[r(i(D),{slot:"start",value:s.value},null,8,["value"]),r(i(N),{style:{margin:"10px"}},{default:l(()=>[y(R(s.label),1)]),_:2},1024)]),_:2},1024))),128))]),_:1},8,["modelValue"])]),e.prevType!==e.patientType&&!/new patient/i.test(e.patientType)?(p(),v("div",z,[t[3]||(t[3]=o("h2",{style:{"font-weight":"bold",margin:"12px"}},[y("Facility "),o("span",{style:{color:"red"}},"*")],-1)),r(i(q),{modelValue:e.transerFacility,"onUpdate:modelValue":t[1]||(t[1]=s=>e.transerFacility=s),multiple:!1,taggable:!1,"hide-selected":!0,"close-on-select":!0,openDirection:"bottom",onSearchChange:b,"tag-placeholder":"Find and select facility",placeholder:"Find and select facility",selectLabel:"",label:"name",searchable:!0,"track-by":"code",options:m.value},null,8,["modelValue","options"])])):_("",!0)]),_:1})]),_:1}))}});export{j as _};
