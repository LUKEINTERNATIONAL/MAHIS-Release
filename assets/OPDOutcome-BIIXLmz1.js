import{d as J,ab as Le,G as mt,E as vt,ac as ft,ad as Ve,a2 as Q,I as gt,a7 as _t,bc as Fe,aQ as ht,H as Y,e as h,f as o,k as a,l as n,aR as Ce,r as i,c as W,a as ye,m as S,O as L,J as p,u as r,Q as V,F as Z,ed as rn,ee as cn,ef as un,eg as dn,am as Be,ar as pn,ax as mn,w as de,ao as yt,bO as vn,P as ue,aF as fn,K as $,p as Ae,bB as gn,L as Me,eh as nt,ei as at,b4 as Te,ej as st,ek as ot,cS as it,el as lt,em as rt,en as ct,cX as ut,bN as _n,aq as hn,bV as yn,_ as le,af as je,ae as ve,N as oe,bp as ie,a8 as bn,R as Dn,bh as Ye,a$ as Cn,bj as wn,a6 as Sn,bT as In,bE as kn,a9 as dt}from"./vendor-CwfdTqwT.js";import{bc as He,H as we,af as z,be as bt,bd as Dt,a$ as Ct,u as Se,_ as ce,k as Ee,az as Oe,aA as Re,M as De,N as be,S as he,aS as K,t as re,K as xe,aM as pe,aN as wt,bD as Pn,bE as En,bu as xn,b7 as ge,b9 as _e,bF as Nn,aP as An,P as On,aT as pt,aZ as $n,s as Mn,aH as Pe,n as Tn,br as Ln,aI as Fn,aq as Bn}from"./index-BWB3-Bpq.js";import{l as fe}from"./lodash-NJiRuGo9.js";import{P as Rn}from"./patient_complaints_service-B7J2VLaL.js";import{D as St}from"./DashBox-Cpm5U8Of.js";import{u as Vn}from"./useExposeFromStandardForm-CnoPDanM.js";import{B as Ke}from"./BasicForm-BLKGSL7V.js";import{f as Qe,c as It,a as kt}from"./formatServerData-eLlMEfhk.js";import{A as Hn,P as Un,D as qn,m as Gn}from"./NextAppointment-CPpeaL57.js";import{D as Wn,b as zn}from"./drug_prescription_service-hTZjUMiE.js";import{D as Yn}from"./drug_service-DhGzq3WH.js";import{D as jn,A as Kn,R as Qn,a as Xn}from"./Outcome-CWB32szA.js";const Jn=J({name:"Menu",components:{IonContent:_t,IonHeader:gt,IonItem:Q,IonList:Ve,IonMenu:ft,IonTitle:vt,IonToolbar:mt,List:He},computed:{...Le(Se,["patient"]),...Le(Ct,["presentingComplaints"])},data(){return{valueNumericArray:[],obsDatetime:[],graphIcon:Dt(["#006401"]),listIcon:bt(["#636363"]),displayGraph:!0,orders:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],list:[],series:[{name:"",data:[]}]}},setup(){return{checkmark:ht,pulseOutline:Fe}},watch:{$router:{async handler(){await this.updateList()},immediate:!0,deep:!0},patient:{async handler(){await this.updateList()},deep:!0}},async mounted(){await this.updateList()},methods:{async updateList(){const t=await z.getAll(this.patient.patientID,"Presenting complaint"),s=fe.isEmpty(t)?[]:Promise.all(t.map(async c=>c.value_coded?{name:await z.getConceptName(c.value_coded),obs_date:c.obs_datetime,duration:c.children[0].value_text}:[]));this.setListData(await s)},setListData(t){this.list=[],this.list.push({actionBtn:!1,class:"col_background",header:!0,minHeight:"--min-height: 20px;",containSize:4,display:["Date","Presenting Complains","Duration"]}),t.forEach(s=>{this.list.push({actionBtn:!1,minHeight:"--min-height:20px;",class:"col_background",containSize:4,display:[we.toStandardHisFormat(s.obs_date),s.name,s.duration]})})}}}),Zn={class:"modal_wrapper"};function ea(t,s,c,u,v,d){const _=Y("list");return o(),h("div",Zn,[a("div",null,[n(_,{listData:t.list},null,8,["listData"])])])}const ta=ce(Jn,[["render",ea],["__scopeId","data-v-30434e22"]]),na={key:0},aa={style:{"align-content":"center"}},sa={class:"ion-padding",slot:"content"},oa=J({__name:"PresentingComplaints",setup(t,{expose:s}){const c=Ct(),{presentingComplaints:u}=Ce(c),v=i(Ee),d=i(!0),_=i(!1),B=i(!0),k=i(!1),I=i([]),x=i([]),C=i(),U=W(()=>[{componentType:"multiSelectInputField",header:"Presenting Complaints",name:"PresentingComplaints",trackBy:"concept_id",icon:Ee.search,hideSelected:!0,validation:b=>O(b==null?void 0:b.name,I.value)?"Presenting complaint already added":Oe.required(b),options:x.value,grid:{s:"6"}},{componentType:"inputField",header:"Duration",name:"duration",icon:Ee.time,validation:b=>Oe.isNotEmptyandNumber(b),grid:{s:"6"},unitOptions:[{label:"Hours",value:"Hours"},{label:"Days",value:"Days"},{label:"Weeks",value:"Weeks"},{label:"Months",value:"Months"},{label:"Years",value:"Years"}],unitValidation:b=>!b||b===""?"Please select a unit.":null},{componentType:"inputField",header:"Specify the presenting complaint(s)",name:"Other (specify)",icon:Ee.editPen,validation:b=>O(b,I.value)?"Presenting complaint already added":Oe.required(b),condition:b=>{var P;return((P=b==null?void 0:b.PresentingComplaints)==null?void 0:P.name)==="Other"}},{componentType:"Alert",condition:b=>{var P;return Oe.required((P=b==null?void 0:b.PresentingComplaints)==null?void 0:P.name)!=null},backgroundColor:"lightyellow",textColor:"black",value:"Please search thoroughly for the complaint. If it is not listed, search and select the 'Other' option to specify the complaint.",name:"noMatchAlert"}]),{formRef:l}=Vn(),y=async()=>{x.value=await Rn.getComplaintsList("Presenting complaint"),be(u.value,"PresentingComplaints","multiSelectData",x.value)},A=()=>{d.value=!1,B.value=!1,_.value=!0},w=async()=>{var R,m;const b=(R=l.value)==null?void 0:R.getFormValues();((m=l.value)==null?void 0:m.validateForm())==null&&(M(b),_.value=!1,B.value=!0)},M=b=>{var e;const P=b.duration+" "+b.duration_unit,R=b.PresentingComplaints,m=R.name==="Other"?b["Other (specify)"]:R.name;I.value.push({actionBtn:!0,btn:["delete"],name:m,concept_id:R.concept_id,duration:R.duration,durationUnits:R.duration_unit,display:[m,P],data:[{concept_id:8578,value_coded:R.concept_id,obs_datetime:he.getSessionDate(),child:[{concept_id:R.concept_id,value_text:P,obs_datetime:he.getSessionDate()}]}]}),(e=l.value)==null||e.resetForm(),k.value=!0},O=(b,P)=>P.some(R=>R.name===b),F=b=>{I.value=I.value.filter(P=>P.display[0]!==b.name)},T=async()=>{const b=await z.getObsByEncounterIdAndDate(K.PRESENTING_COMPLAINTS),P=I.value.flatMap(R=>R.data);if(P.length<=0&&b.length<=0)return re("Presenting complaints is required");P.length<=0||(await z.addObsToEncounterPatient(P,K.PRESENTING_COMPLAINTS),xe("Presenting complaints saved successful"),I.value=[])};return ye(async()=>{await y()}),s({onSubmit:T}),(b,P)=>{const R=Y("ion-row"),m=Y("ion-label"),e=Y("ion-accordion"),E=Y("ion-accordion-group");return o(),h(Z,null,[n(St,{status:d.value,content:"No presenting complaints added"},null,8,["status"]),k.value?(o(),h("span",na,[n(He,{listData:I.value,"onClicked:delete":F},null,8,["listData"])])):S("",!0),_.value?(o(),L(R,{key:1},{default:p(()=>[n(Re,{formData:U.value,ref_key:"formRef",ref:l},null,8,["formData"]),a("div",aa,[n(De,{fill:"clear",icon:v.value.plus,iconSlot:"icon-only","onClicked:btn":P[0]||(P[0]=N=>w()),name:"Save"},null,8,["icon"])])]),_:1})):S("",!0),B.value?(o(),L(R,{key:2,style:{"margin-top":"10px"}},{default:p(()=>[n(De,{fill:"clear",icon:v.value.plus,iconSlot:"icon-only","onClicked:btn":P[1]||(P[1]=N=>A()),name:"Add new presenting complaints"},null,8,["icon"])]),_:1})):S("",!0),n(R,null,{default:p(()=>[n(E,{ref_key:"accordionGroup",ref:C,class:"previousView"},{default:p(()=>[n(e,{value:"first","toggle-icon-slot":"start",style:{"border-radius":"10px","background-color":"#fff"}},{default:p(()=>[n(r(Q),{slot:"header",color:"light"},{default:p(()=>[n(m,{class:"previousLabel"},{default:p(()=>[...P[2]||(P[2]=[V("Previous presenting complaints",-1)])]),_:1})]),_:1}),a("div",sa,[n(ta)])]),_:1})]),_:1},512)]),_:1})],64)}}}),ia=ce(oa,[["__scopeId","data-v-a95bcc0f"]]),la=W(()=>[{componentType:"radioButtonField",header:"Eye opening response",name:"Eye opening response",obsValueType:"value_coded",type:"inline",options:[{label:"Spontaneously",value:"Spontaneously"},{label:"To speech",value:"To speech"},{label:"To pain",value:"To pain"},{label:"No response",value:"No response"}]},{componentType:"Dashes"},{componentType:"radioButtonField",header:"Best verbal response",name:"Best verbal response",obsValueType:"value_coded",type:"inline",options:[{label:"Oriented to time, place and person",value:"Oriented to time, place and person"},{label:"Confused",value:"Confused"},{label:"Inappropriate words",value:"Inappropriate words"},{label:"Incomprehensible sounds",value:"Incomprehensible sounds"},{label:"No response",value:"No response"}]},{componentType:"Dashes"},{componentType:"radioButtonField",header:"Best motor response",name:"Best motor response",obsValueType:"value_coded",type:"inline",options:[{label:"Obeys commands",value:"Obeys commands"},{label:"Moves to localised pain",value:"Moves to localised pain"},{label:"Flexion withdrawal from pain",value:"Flexion withdrawal from pain"},{label:"Abnormal flexion (decorticate)",value:"Abnormal flexion (decorticate)"},{label:"Abnormal extension (decerebrate)",value:"Abnormal extension (decerebrate)"},{label:"No response",value:"No response"}]}]),ra=W(()=>[{componentType:"radioButtonField",header:"Eye opening response",name:"Eye opening response",obsValueType:"value_coded",type:"inline",options:[{label:"Directed eye movements",value:"Directed eye movements"},{label:"Not directed",value:"Not directed"}]},{componentType:"Dashes"},{componentType:"radioButtonField",header:"Best verbal response",name:"Best verbal response",obsValueType:"value_coded",type:"inline",options:[{label:"Appropriate cry",value:"Appropriate cry"},{label:"Inappropriate cry or moan",value:"Inappropriate cry or moan"},{label:"No cry",value:"No cry"}]},{componentType:"Dashes"},{componentType:"radioButtonField",header:"Best motor response",name:"Best motor response",obsValueType:"value_coded",type:"inline",options:[{label:"Localizes pain",value:"Localizes pain"},{label:"Withdraws from pain",value:"Withdraws from pain"},{label:"Non specific or no response",value:"Non specific or no response"}]}]),Pt={Spontaneously:4,"To speech":3,"To pain":2,"No response":1},Et={"Oriented to time, place and person":5,Confused:4,"Inappropriate words":3,"Incomprehensible sounds":2,"No response":1},xt={"Obeys commands":6,"Moves to localised pain":5,"Flexion withdrawal from pain":4,"Abnormal flexion (decorticate)":3,"Abnormal extension (decerebrate)":2,"No response":1},Nt={"Not directed":0,"Directed eye movements":1},At={"Non specific or no response":0,"Withdraws from pain":1,"Localizes pain":2},Ot={"No cry":0,"Inappropriate cry or moan":1,"Appropriate cry":2},ca={class:"allergies-container"},ua={key:0,class:"no-allergies"},da={key:1,class:"date-groups"},pa=["onClick"],ma={class:"date-info"},va={class:"date-text"},fa={class:"allergy-count"},ga={class:"card-header"},_a={class:"allergy-type"},ha={class:"card-content"},ya=J({__name:"AllergiesListing",setup(t){const s=Se(),{patient:c}=Ce(s),u=i({}),v={antiviral:/abacavir|lamivudine|lopinavir|ritonavir|zidovudine|efavirenz|tenofovir/i,antibiotic:/penicillin|amoxicillin|cephalexin|azithromycin|ciprofloxacin|doxycycline/i,analgesic:/aspirin|ibuprofen|acetaminophen|morphine|codeine|tramadol/i,cardiac:/metoprolol|lisinopril|amlodipine|atorvastatin|warfarin/i,activated:/activated\s+charcoal/i},d={985:{name:"Drug Allergy",icon:Be,severity:"danger"},7759:{name:"Location/Environmental",icon:mn,severity:"info"},7579:{name:"Medical Condition",icon:pn,severity:"warning"},drug:{name:"Drug Allergy",icon:Be,severity:"danger"},food:{name:"Food Allergy",icon:dn,severity:"danger"},environmental:{name:"Environmental",icon:un,severity:"warning"},contact:{name:"Contact Allergy",icon:cn,severity:"warning"},unknown:{name:"Unknown Allergy",icon:rn,severity:"info"}},_=l=>{const y=l.toLowerCase();return v.antiviral.test(y)?{type:"Antiviral Medication",icon:"shield-outline"}:v.antibiotic.test(y)?{type:"Antibiotic",icon:"bandage-outline"}:v.analgesic.test(y)?{type:"Pain Medication",icon:"fitness-outline"}:v.cardiac.test(y)?{type:"Cardiac Medication",icon:"heart-outline"}:v.activated.test(y)?{type:"Detoxification Agent",icon:"flask-outline"}:{type:"Medication",icon:"medical-outline"}},B=W(()=>{var l,y,A;return((A=(y=(l=c.value)==null?void 0:l.allergies)==null?void 0:y.saved)==null?void 0:A.length)>0}),k=W(()=>B.value?c.value.allergies.saved.map(l=>{var F;const y=((F=l.concept_id)==null?void 0:F.toString())||"unknown",A=d[y]||d.unknown;let w="Unknown",M=null;return l.value_text&&l.value_text!=="Unknown"&&l.value_text!==""?(w=l.value_text,y==="985"&&(M=_(l.value_text))):l.concept_name&&(w=l.concept_name),{...M?{...A,name:M.type,icon:M.icon}:A,displayValue:w,conceptId:l.concept_id,date:l.obs_datetime||l.encounter_datetime,providerId:l.provider_id,locationId:l.location_id,encounterId:l.encounter_id,isDrug:y==="985",raw:l}}):[]),I=W(()=>{const l={};k.value.forEach(w=>{const M=w.date?C(w.date):"Unknown Date";l[M]||(l[M]=[]),l[M].push(w)});const y={};return Object.keys(l).sort((w,M)=>w==="Unknown Date"?1:M==="Unknown Date"?-1:new Date(M).getTime()-new Date(w).getTime()).forEach(w=>{y[w]=l[w]}),y}),x=l=>{u.value[l]=!u.value[l]},C=l=>{if(!l)return"Unknown Date";try{return new Date(l).toISOString().split("T")[0]}catch(y){return"Unknown Date"}},U=l=>{if(l==="Unknown Date")return"Unknown Date";try{const y=new Date(l),A=we.sessionDate(),w=new Date(A),M=new Date(w);M.setDate(M.getDate()-1);const O=y.toDateString(),F=w.toDateString(),T=M.toDateString();return O===F?"Today":O===T?"Yesterday":y.toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"})}catch(y){return l}};return de(()=>I.value,l=>{const y=Object.keys(l);y.length>0&&(u.value[y[0]]=!0)},{immediate:!0}),de(()=>{var l;return(l=c.value)==null?void 0:l.allergies},l=>{console.log("Allergies updated:",l)},{deep:!0}),ye(()=>{var l;console.log("Allergies component mounted",(l=c.value)==null?void 0:l.allergies)}),(l,y)=>{const A=Y("ion-icon"),w=Y("ion-label");return o(),h("div",ca,[n(w,{class:"section-title"},{default:p(()=>[n(A,{icon:r(yt),class:"alert-icon"},null,8,["icon"]),n(w,null,{default:p(()=>[...y[0]||(y[0]=[V("Allergies (Medication, Healthcare items, Environment and Food)",-1)])]),_:1})]),_:1}),B.value?(o(),h("div",da,[(o(!0),h(Z,null,ue(I.value,(M,O)=>(o(),h("div",{key:O,class:"date-group"},[a("div",{class:Ae(["date-header",{expanded:u.value[O]}]),onClick:F=>x(O)},[a("div",ma,[n(A,{icon:r(fn),class:"date-icon"},null,8,["icon"]),a("span",va,$(U(O)),1),a("span",fa,"("+$(M.length)+" "+$(M.length===1?"allergy":"allergies")+")",1)]),n(A,{icon:r(gn),class:Ae(["expand-icon",{rotated:u.value[O]}])},null,8,["icon","class"])],10,pa),a("div",{class:Ae(["allergies-grid",{collapsed:!u.value[O]}])},[(o(!0),h(Z,null,ue(M,(F,T)=>(o(),h("div",{key:T,class:Ae(["allergy-card",F.severity])},[a("div",ga,[n(A,{icon:F.icon,class:"allergy-icon"},null,8,["icon"]),a("span",_a,$(F.name),1)]),a("div",ha,[a("div",{class:Ae(["allergy-value",{"drug-name":F.isDrug}])},$(F.displayValue),3)])],2))),128))],2)]))),128))])):(o(),h("div",ua,[n(A,{icon:r(vn),class:"no-allergies-icon"},null,8,["icon"]),y[1]||(y[1]=a("p",null,"No known allergies",-1))]))])}}}),$t=ce(ya,[["__scopeId","data-v-3b85d83e"]]),ba=J({name:"VisitHistory",components:{AllergiesListing:$t,IonIcon:Me},setup(){const t=wt();return{selectedAllergiesList2:W(()=>t.selectedMedicalAllergiesList),alertCircleOutline:yt,documentTextOutline:yn,femaleOutline:hn,medicalOutline:Be,warningOutline:_n,bodyOutline:nt,eyeOutline:ut,nutritionOutline:ct,fitnessOutline:ot,pulseOutline:Fe,earOutline:rt,happyOutline:lt,manOutline:it,moveOutline:st,addOutline:Te,scanOutline:at}},data(){return{presentingComplaintsWithDuration:[],pastMedicalHistory:[],levelOfConsciousness:{eyeResponse:null,verbalResponse:null,motorResponse:null},pregnancy:{patientPregnant:null,breastFeeding:null},physicalExamCategories:{Eyes:{icon:ut,abnormalities:[],normal:!1},Mouth:{icon:ct,abnormalities:[],normal:!1},Ears:{icon:rt,abnormalities:[],normal:!1},Face:{icon:lt,abnormalities:[],normal:!1},Neck:{icon:it,abnormalities:[],normal:!1},Chest:{icon:ot,abnormalities:[],normal:!1},"Chest Movement":{icon:st,abnormalities:[],normal:!1},"Heart Sounds":{icon:Fe,abnormalities:[],normal:!1},"Breath Sounds":{icon:Te,abnormalities:[],normal:!1},"Added Breath Sounds":{icon:Te,abnormalities:[],normal:!1},"Abdominal Inspection":{icon:at,abnormalities:[],normal:!1},"Genital Examination":{icon:nt,abnormalities:[],normal:!1}}}},computed:{...Le(Se,["patient"]),hasLevelOfConsciousness(){return this.levelOfConsciousness.eyeResponse||this.levelOfConsciousness.verbalResponse||this.levelOfConsciousness.motorResponse},hasPresentingComplaints(){var t;return((t=this.presentingComplaintsWithDuration)==null?void 0:t.length)>0},hasPregnancyData(){return this.pregnancy.patientPregnant||this.pregnancy.breastFeeding},hasPastMedicalHistory(){var t;return((t=this.uniquePastMedicalHistory)==null?void 0:t.length)>0},hasAllergies(){var t,s;return((s=(t=this.selectedAllergiesList2)==null?void 0:t.filter(c=>c.selected))==null?void 0:s.length)>0},hasPhysicalExam(){return Object.values(this.physicalExamCategories).some(t=>t.abnormalities.length>0||t.normal)},uniquePastMedicalHistory(){return[...new Set(this.pastMedicalHistory)]},uniquePresentingComplaints(){return[...new Set(this.presentingComplaintsWithDuration.map(t=>t.name))]},isMinor(){var t,s;return we.getAgeInYears((s=(t=this.patient)==null?void 0:t.personInformation)==null?void 0:s.birthdate)<18},gcsScore(){var B,k,I;if(!this.hasLevelOfConsciousness)return null;const t=this.levelOfConsciousness.eyeResponse,s=this.levelOfConsciousness.motorResponse,c=this.levelOfConsciousness.verbalResponse,u=t&&(B=(this.isMinor?Nt:Pt)[t])!=null?B:0,v=s&&(k=(this.isMinor?At:xt)[s])!=null?k:0,d=c&&(I=(this.isMinor?Ot:Et)[c])!=null?I:0,_=u+v+d;return"(M ".concat(v," V ").concat(d," E ").concat(u,") ").concat(_,"/").concat(this.isMinor?5:15)}},methods:{async updateData(){var t;(t=this.patient)!=null&&t.patientID&&(await this.loadPresentingComplaints(),await this.loadPastMedicalHistory(),await this.loadLevelOfConsciousness(),await this.loadPregnancyStatus(),await this.loadPhysicalExam())},async loadPresentingComplaints(){try{const t=await z.getObsByEncounterIdAndDate(K.PRESENTING_COMPLAINTS);this.presentingComplaintsWithDuration=[];const s=t.filter(c=>c.concept_name==="Presenting complaint");for(const c of s){const u=t.find(d=>d.concept_id===c.value_coded&&d.concept_name!=="Presenting complaint"),v=await pe.getConceptName(c.value_coded);this.presentingComplaintsWithDuration.push({name:v,duration:(u==null?void 0:u.value_text)||"Duration not specified"})}}catch(t){console.error("Error loading presenting complaints:",t)}},async loadPastMedicalHistory(){try{const s=(await z.getObsByEncounterIdAndDate(K.PAST_MEDICAL_HISTORY)).filter(c=>c.concept_name==="Chronic disease");this.pastMedicalHistory=await Promise.all(s.map(async c=>await pe.getConceptName(c.value_coded)))}catch(t){console.error("Error loading past medical history:",t)}},async loadLevelOfConsciousness(){try{const t=await z.getObsByEncounterIdAndDate(K.ASSESSMENT);if(t&&Array.isArray(t)){const s=t.find(v=>v.concept_name==="Eye opening response");this.levelOfConsciousness.eyeResponse=s!=null&&s.value_coded?await pe.getConceptName(s.value_coded):null;const c=t.find(v=>v.concept_name==="Best verbal response");this.levelOfConsciousness.verbalResponse=c!=null&&c.value_coded?await pe.getConceptName(c.value_coded):null;const u=t.find(v=>v.concept_name==="Best motor response");this.levelOfConsciousness.motorResponse=u!=null&&u.value_coded?await pe.getConceptName(u.value_coded):null}}catch(t){console.error("Error loading level of consciousness:",t)}},async loadPregnancyStatus(){try{const t=await z.getObsByEncounterIdAndDate(K.PREGNANCY_STATUS);if(t&&Array.isArray(t)){const s=t.find(u=>u.concept_name==="Patient pregnant");this.pregnancy.patientPregnant=s!=null&&s.value_coded?await pe.getConceptName(s.value_coded):null;const c=t.find(u=>u.concept_name==="Is patient breast feeding?");this.pregnancy.breastFeeding=c!=null&&c.value_coded?await pe.getConceptName(c.value_coded):null}}catch(t){console.error("Error loading pregnancy status:",t)}},async loadPhysicalExam(){var t,s,c;try{const u=await z.getObsByEncounterIdAndDate(K.PHYSICAL_EXAMINATION);Object.values(this.physicalExamCategories).forEach(v=>{v.abnormalities=[],v.normal=!1});for(const v of u){const d=v.concept_name||((c=(s=(t=v.concept)==null?void 0:t.concept_names)==null?void 0:s.find(_=>_.concept_name_type==="FULLY_SPECIFIED"))==null?void 0:c.name);if(d){if(d.includes("normal")||d.includes("Normal")){v.value_coded===1065&&(d.includes("Eyes normal")?this.physicalExamCategories.Eyes.normal=!0:d.includes("Mouth normal")?this.physicalExamCategories.Mouth.normal=!0:d.includes("Ears normal")?this.physicalExamCategories.Ears.normal=!0:d.includes("Face normal")?this.physicalExamCategories.Face.normal=!0:d.includes("Neck normal")?this.physicalExamCategories.Neck.normal=!0:d.includes("Chest inspection normal")?this.physicalExamCategories.Chest.normal=!0:d.includes("Heart sounds normal")?this.physicalExamCategories["Heart Sounds"].normal=!0:d.includes("Breath sounds normal")?this.physicalExamCategories["Breath Sounds"].normal=!0:d.includes("Abdominal inspection normal")?this.physicalExamCategories["Abdominal Inspection"].normal=!0:d.includes("Genital examination normal")&&(this.physicalExamCategories["Genital Examination"].normal=!0));continue}if(v.value_coded){const _=await pe.getConceptName(v.value_coded);d.includes("Abnormality for mouth")?this.physicalExamCategories.Mouth.abnormalities.push(_):d.includes("Abnormality for ears")?this.physicalExamCategories.Ears.abnormalities.push(_):d.includes("Abnormality for face")?this.physicalExamCategories.Face.abnormalities.push(_):d.includes("Breath sounds abnormality")?this.physicalExamCategories["Breath Sounds"].abnormalities.push(_):d.includes("Abnormalities when added")?this.physicalExamCategories["Added Breath Sounds"].abnormalities.push(_):d.includes("Chest movements")?this.physicalExamCategories["Chest Movement"].abnormalities.push(_):d.includes("Genital examination abnormality")?this.physicalExamCategories["Genital Examination"].abnormalities.push(_):d.includes("Vulva inspection abnormalities")&&this.physicalExamCategories["Genital Examination"].abnormalities.push(_)}}}}catch(u){console.error("Error loading physical exam:",u)}}},watch:{patient:{async handler(){await this.updateData()},deep:!0}},async mounted(){await this.updateData()}}),Da={class:"visit-container"},Ca={class:"visit-sections"},wa={key:0,class:"visit-section"},Sa={class:"section-header"},Ia={class:"section-content"},ka={key:0,class:"info-item"},Pa={class:"info-value"},Ea={key:1,class:"info-item"},xa={class:"info-value"},Na={key:2,class:"info-item"},Aa={class:"info-value"},Oa={key:3,class:"info-item"},$a={class:"info-value highlight"},Ma={key:1,class:"visit-section"},Ta={class:"section-header"},La={class:"complaints-container"},Fa={class:"complaint-name"},Ba={class:"complaint-duration"},Ra={key:2,class:"visit-section"},Va={class:"section-header"},Ha={class:"section-content"},Ua={key:0,class:"info-item"},qa={class:"info-value highlight"},Ga={key:1,class:"info-item"},Wa={class:"info-value highlight"},za={key:3,class:"visit-section"},Ya={class:"section-header"},ja={class:"tags-container"},Ka={class:"allergies-section"},Qa={class:"allergies-container"},Xa={key:4,class:"visit-section"},Ja={class:"section-header"},Za={class:"exam-section"},es={key:0,class:"exam-category"},ts={class:"exam-category-header"},ns={class:"exam-items"},as={key:1,class:"exam-item normal"};function ss(t,s,c,u,v,d){const _=Y("ion-icon"),B=Y("AllergiesListing");return o(),h("div",Da,[s[11]||(s[11]=a("div",{class:"visit-header"},[a("h5",null,"Patient's Clinical Assessment Summary")],-1)),a("div",Ca,[t.hasLevelOfConsciousness?(o(),h("div",wa,[a("div",Sa,[n(_,{icon:t.alertCircleOutline,class:"section-icon"},null,8,["icon"]),s[0]||(s[0]=a("h3",null,"Level of Consciousness",-1))]),a("div",Ia,[t.levelOfConsciousness.eyeResponse?(o(),h("div",ka,[s[1]||(s[1]=a("span",{class:"info-label"},"Eye Response:",-1)),a("span",Pa,$(t.levelOfConsciousness.eyeResponse),1)])):S("",!0),t.levelOfConsciousness.verbalResponse?(o(),h("div",Ea,[s[2]||(s[2]=a("span",{class:"info-label"},"Verbal Response:",-1)),a("span",xa,$(t.levelOfConsciousness.verbalResponse),1)])):S("",!0),t.levelOfConsciousness.motorResponse?(o(),h("div",Na,[s[3]||(s[3]=a("span",{class:"info-label"},"Motor Response:",-1)),a("span",Aa,$(t.levelOfConsciousness.motorResponse),1)])):S("",!0),t.gcsScore?(o(),h("div",Oa,[s[4]||(s[4]=a("span",{class:"info-label"},"Score:",-1)),a("span",$a,$(t.gcsScore),1)])):S("",!0)])])):S("",!0),t.hasPresentingComplaints?(o(),h("div",Ma,[a("div",Ta,[n(_,{icon:t.documentTextOutline,class:"section-icon"},null,8,["icon"]),s[5]||(s[5]=a("h3",null,"Presenting Complaints",-1))]),a("div",La,[(o(!0),h(Z,null,ue(t.presentingComplaintsWithDuration,(k,I)=>(o(),h("div",{class:"complaint-item",key:I},[a("div",Fa,$(k.name),1),a("div",Ba,$(k.duration),1)]))),128))])])):S("",!0),t.hasPregnancyData?(o(),h("div",Ra,[a("div",Va,[n(_,{icon:t.femaleOutline,class:"section-icon"},null,8,["icon"]),s[6]||(s[6]=a("h3",null,"Pregnancy Status",-1))]),a("div",Ha,[t.pregnancy.patientPregnant?(o(),h("div",Ua,[s[7]||(s[7]=a("span",{class:"info-label"},"Pregnant:",-1)),a("span",qa,$(t.pregnancy.patientPregnant),1)])):S("",!0),t.pregnancy.breastFeeding?(o(),h("div",Ga,[s[8]||(s[8]=a("span",{class:"info-label"},"Breastfeeding:",-1)),a("span",Wa,$(t.pregnancy.breastFeeding),1)])):S("",!0)])])):S("",!0),t.hasPastMedicalHistory?(o(),h("div",za,[a("div",Ya,[n(_,{icon:t.medicalOutline,class:"section-icon"},null,8,["icon"]),s[9]||(s[9]=a("h3",null,"Medical History",-1))]),a("div",ja,[(o(!0),h(Z,null,ue(t.uniquePastMedicalHistory,(k,I)=>(o(),h("div",{class:"medical-tag",key:I},$(k),1))),128))])])):S("",!0),a("div",Ka,[a("div",Qa,[n(B)])]),t.hasPhysicalExam?(o(),h("div",Xa,[a("div",Ja,[n(_,{icon:t.bodyOutline,class:"section-icon"},null,8,["icon"]),s[10]||(s[10]=a("h3",null,"Physical Examination",-1))]),a("div",Za,[(o(!0),h(Z,null,ue(t.physicalExamCategories,(k,I)=>(o(),h(Z,{key:I},[k.abnormalities.length>0||k.normal?(o(),h("div",es,[a("div",ts,[n(_,{icon:k.icon},null,8,["icon"]),a("h4",null,$(I),1)]),a("div",ns,[k.abnormalities.length>0?(o(!0),h(Z,{key:0},ue(k.abnormalities,(x,C)=>(o(),h("div",{class:"exam-item",key:C},$(x),1))),128)):(o(),h("div",as," Normal examination "))])])):S("",!0)],64))),128))])])):S("",!0)])])}const os=ce(ba,[["render",ss],["__scopeId","data-v-b2ab1221"]]),is={class:"modal_wrapper"},ls=J({__name:"LevelOfConsciousness",setup(t,{expose:s}){var k,I;const c=Se(),{patient:u}=Ce(c),v=i(we.getAgeInYears((I=(k=u==null?void 0:u.value)==null?void 0:k.personInformation)==null?void 0:I.birthdate)),d=i(null),_=W(()=>{var F,T,b,P;const x=((F=d.value)==null?void 0:F.getFormValues())||{},C=x["Eye opening response"]||"",U=x["Best motor response"]||"",l=x["Best verbal response"]||"",y=v.value<18,A=(T=(y?Nt:Pt)[C])!=null?T:0,w=(b=(y?At:xt)[U])!=null?b:0,M=(P=(y?Ot:Et)[l])!=null?P:0,O=A+w+M;return"(M ".concat(w," V ").concat(M," E ").concat(A,") ").concat(O,"/").concat(y?5:15)});return s({onSubmit:async()=>{var C;if(!d.value){console.error("Form reference is not available");return}const x=((C=d.value)==null?void 0:C.getFormValues())||{};x["Eye opening response"]||x["Best motor response"]||x["Best verbal response"]?(await z.buildAddObsToEncounterPatient(x,K.ASSESSMENT),d.value.resetForm(),xe("Level of Consciousness saved successfully")):re(" No level of consciousness data to save ")}}),(x,C)=>(o(),h("div",is,[v.value<18?(o(),L(Re,{key:0,formData:r(ra),ref_key:"formRef",ref:d},null,8,["formData"])):(o(),L(Re,{key:1,formData:r(la),ref_key:"formRef",ref:d},null,8,["formData"])),a("h5",null,$(_.value),1)]))}}),rs={class:"modal_wrapper"},cs=J({__name:"PregnancyBreastfeeding",setup(t,{expose:s}){const c=Pn(),{pregnancy:u}=Ce(c),v=()=>{};return s({onSubmit:async()=>{const _=await Qe(u.value);_.length>0?(await z.addObsToEncounterPatient(_,K.PREGNANCY_STATUS),xe("Pregnancy status saved successfully")):re("No pregnancy status data to save ")}}),(_,B)=>(o(),h("div",rs,[n(Ke,{contentData:r(u),"onUpdate:inputValue":v},null,8,["contentData"])]))}}),us={class:"modal_wrapper"},ds={class:"uniform_columns"},ps=J({__name:"PastMedicalHistory",setup(t,{expose:s}){const c=En(),{pastMedicalHistory:u}=Ce(c),v=i([]);ye(()=>{v.value=c.getInitial(),d()}),de(u,()=>{d()},{deep:!0});const d=()=>{var x;const I=["TB","Chronic Obstructive Pulmonary Disease (COPD)","Asthma","Epilepsy","Previous stroke","Peptic Ulcer Disease (PUD)","Mental disorder","Bleeding disorders","Hypertension","HIV Positive","Diabetes Mellitus"];(x=xn(u.value,"None"))!=null&&x.checked?I.forEach(C=>{ge(u.value,"TB treatment","displayNone",!0),be(u.value,"TB drugs","displayNone",!0),be(u.value,"TB drug start date","displayNone",!0),ge(u.value,"Hypertension medication","displayNone",!0),be(u.value,"Current hypertension treatment regimen","displayNone",!0),ge(u.value,"HIV status","displayNone",!0),be(u.value,"ARV start date","displayNone",!0),ge(u.value,"Diabetes","displayNone",!0),ge(u.value,"Controlled by","displayNone",!0),_e(u.value,C,"checked",!1),_e(u.value,C,"disabled",!0)}):I.forEach(C=>{_e(u.value,C,"disabled",!1)})},_=I=>{be(u.value,"TB drugs","popOverData",{filterData:!0,data:[{name:"Auramine 'O' (C.I. 41000) 50g"},{name:"Bedaquilline 100mg"},{name:"Clofazimine 100mg"},{name:"Clofazimine 50mg"},{name:"Cycloserine 125mg"},{name:"Cycloserine 250mg"},{name:"Delamanid 50mg"},{name:"Ethambutol 100mg"},{name:"Ethambutol 400mg"},{name:"Ethionamide 250mg"},{name:"Isoniazid 100mg "},{name:"Isoniazid 300mg"},{name:"Isoniazid / Rifapentine 300mg / 300mg"},{name:"Levofloxacin 100mg"},{name:"Levofloxacin 250mg"},{name:"Linezolid 600mg"},{name:"Moxifloxacin 400mg"},{name:"Pyrazinamide 400mg"},{name:"Rifabutin 150mg Capsules"},{name:"Rifampicin 150mg/isoniazid 75mg"},{name:"Rifampicin 75mg+INH 50mg dispersible"},{name:"Rifampicin 75mg+INH 50mg+Pyrazinamide 150mg dispersible"},{name:"Rifampicin150mg/Isoniazid75mg/Pyrazinamide 400mg/Ethambutol"}]}),be(u.value,"Current hypertension treatment regimen","popOverData",{filterData:!0,data:[{name:"Captopril 12.5mg"},{name:"Aspirin 75mg"},{name:"Hydrochlorothiazide 25mg"},{name:"Enalapril Meleate 5mg"},{name:"Enalapril Maleate 10mg"}]})},B=async()=>[...await It(u.value),...await Qe(u.value),...await kt(u.value)];return s({onSubmit:async()=>{const I=await B();if(I.length===0){re("No past medical history data to save");return}await z.addObsToEncounterPatient(I,K.PAST_MEDICAL_HISTORY),xe("Past medical history saved successful")}}),(I,x)=>(o(),h("div",us,[a("div",ds,[n(Ke,{contentData:r(u),initialData:v.value,"onUpdate:inputValue":_,"onUpdate:selected":_},null,8,["contentData","initialData"])])]))}}),ms=ce(ps,[["__scopeId","data-v-49fdce72"]]),vs={class:"container"},fs=J({__name:"PhysicalExamination",setup(t,{expose:s}){const c=Nn(),u=Se(),{physicalExam:v}=Ce(c),{patient:d}=Ce(u),_=i([]);ye(()=>{_.value=c.getInitial(),B(),k()}),de(v,()=>{B(),k()},{deep:!0});const B=()=>{An(v.value,"Physical examination")=="No"?ge(v.value,"Reason why physical examination not done","displayNone",!1):(ge(v.value,"Reason why physical examination not done","displayNone",!0),ge(v.value,"Reason why physical examination not done","selectedValue",""))},k=()=>{var U,l;const C=(l=(U=d.value)==null?void 0:U.personInformation)==null?void 0:l.gender;C=="M"&&(_e(v.value,"Vulva examination","disabled",!0),_e(v.value,"Visible bleeding","disabled",!0)),C=="F"&&(_e(v.value,"Urethral meatus abnormal","disabled",!0),_e(v.value,"Scrotal swelling","disabled",!0),_e(v.value,"Tastes swelling","disabled",!0))},I=async()=>[...await It(v.value),...await Qe(v.value),...await kt(v.value)];return s({onSubmit:async()=>{const C=await I();if(C.length===0){re("No physical examination data to save");return}await z.addObsToEncounterPatient(C,K.PHYSICAL_EXAMINATION),xe("Physical examination saved successful")}}),(C,U)=>{const l=Y("ion-card-content"),y=Y("ion-card");return o(),h("div",vs,[n(y,{class:"section"},{default:p(()=>[n(l,null,{default:p(()=>[n(Ke,{contentData:r(v),initialData:_.value},null,8,["contentData","initialData"])]),_:1})]),_:1})])}}}),gs=ce(fs,[["__scopeId","data-v-96d0ce9f"]]),_s={key:0},hs={class:"ion-padding",slot:"content"},ys={class:"nav-buttons"},bs={class:"ion-padding",slot:"content"},Ds={class:"nav-buttons"},Cs={class:"ion-padding",slot:"content"},ws={class:"nav-buttons"},Ss={class:"ion-padding",slot:"content"},Is={class:"nav-buttons"},ks={class:"ion-padding",slot:"content"},Ps={class:"nav-buttons"},Es={class:"ion-padding",slot:"content"},xs={class:"nav-buttons"},Ns=J({__name:"ClinicalAssessment",setup(t,{expose:s}){const c=i("loc"),u=i(0),v=i(!1),d=i(!1),_=new On,B=Se(),k=()=>{u.value++},I=i(null),x=i(null),C=i(null),U=i(null),l=i(null),y=i(null),A=[{id:"loc",label:"Level of consciousness",show:!0},{id:"pc",label:"Presenting complaints",show:!0},{id:"pbs",label:"Pregnancy and breastfeeding status",show:()=>_.isChildBearing()},{id:"pmh",label:"Past medical history",show:!0},{id:"al",label:"Allergies",show:!0},{id:"pe",label:"Physical examination",show:!0}];async function w(){const m=he.getSessionDate(),e=[K.ASSESSMENT,K.PRESENTING_COMPLAINTS,K.PAST_MEDICAL_HISTORY,K.PHYSICAL_EXAMINATION,K.PREGNANCY_STATUS];let E=!1;for(const N of e)try{const j=await z.getObsByEncounterIdAndDate(N);if(j&&j.some(ee=>ee.obs_datetime?we.toStandardHisFormat(ee.obs_datetime)===we.toStandardHisFormat(m):!1)){E=!0;break}}catch(j){console.error("Error checking observations for encounter type ".concat(N,":"),j)}v.value=E}ye(w),de(()=>B.patient,w);const M=W(()=>v.value),O=W(()=>A.filter(m=>typeof m.show=="function"?m.show():m.show)),F=m=>{const e=A.find(E=>E.id===m);return e?typeof e.show=="function"?e.show():e.show:!1},T=m=>O.value.findIndex(e=>e.id===m),b=m=>{const e=T(m);e>0&&(c.value=O.value[e-1].id)},P=m=>{const E=T(m)+1;E<O.value.length?c.value=O.value[E].id:(c.value="",k())};return s({onSubmit:async()=>{const m=[{ref:I,name:"PresentingComplaints"},{ref:x,name:"LevelOfConsciousness"},{ref:C,name:"PastMedicalHistory"},{ref:l,name:"PregnancyBreastfeeding"},{ref:y,name:"PhysicalExamination"}];for(const e of m)if(e.ref.value&&typeof e.ref.value.onSubmit=="function")try{await e.ref.value.onSubmit()}catch(E){console.error("Error calling ".concat(e.name," onSubmit:"),E)}else console.log("".concat(e.name," component ref not available or no onSubmit method"))}}),(m,e)=>{const E=Y("ion-toggle");return o(),h(Z,null,[M.value?(o(),h("div",_s,[n(r(Q),{lines:"none"},{default:p(()=>[n(r(le),null,{default:p(()=>[...e[14]||(e[14]=[V("Switch between Capture Mode and Summary Mode",-1)])]),_:1}),n(E,{checked:d.value,onIonChange:e[0]||(e[0]=N=>d.value=N.detail.checked),slot:"end"},null,8,["checked"])]),_:1}),d.value?S("",!0):(o(),L(os,{key:u.value}))])):S("",!0),!M.value||d.value?(o(),L(r(bn),{key:1,style:{width:"100%"}},{default:p(()=>[n(r(je),{value:c.value,"onUpdate:value":e[13]||(e[13]=N=>c.value=N),ref:"accordionGroup",class:"previousView"},{default:p(()=>[F("loc")?(o(),L(r(ve),{key:0,value:"loc",class:"_card"},{default:p(()=>[n(r(Q),{slot:"header",color:"light"},{default:p(()=>[n(r(le),{class:"previousLabel"},{default:p(()=>[...e[15]||(e[15]=[V("Level of consciousness",-1)])]),_:1})]),_:1}),a("div",hs,[n(ls,{"is-active":c.value==="loc",ref_key:"levelOfConsciousnessFormRef",ref:x,onDataSaved:k},null,8,["is-active"]),a("div",ys,[T("loc")>0?(o(),L(r(oe),{key:0,fill:"outline",onClick:e[1]||(e[1]=ie(N=>b("loc"),["stop"]))},{default:p(()=>[...e[16]||(e[16]=[V(" Back ",-1)])]),_:1})):S("",!0),n(r(oe),{fill:"outline",onClick:e[2]||(e[2]=ie(N=>P("loc"),["stop"]))},{default:p(()=>[V($(T("loc")<O.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):S("",!0),F("pc")?(o(),L(r(ve),{key:1,value:"pc",class:"_card"},{default:p(()=>[n(r(Q),{slot:"header",color:"light"},{default:p(()=>[n(r(le),{class:"previousLabel"},{default:p(()=>[...e[17]||(e[17]=[V("Presenting complaints",-1)])]),_:1})]),_:1}),a("div",bs,[n(ia,{"is-active":c.value==="pc",onDataSaved:k,ref_key:"presentingComplaintsFormRef",ref:I},null,8,["is-active"]),a("div",Ds,[T("pc")>0?(o(),L(r(oe),{key:0,fill:"outline",onClick:e[3]||(e[3]=ie(N=>b("pc"),["stop"]))},{default:p(()=>[...e[18]||(e[18]=[V(" Back ",-1)])]),_:1})):S("",!0),n(r(oe),{fill:"outline",onClick:e[4]||(e[4]=ie(N=>P("pc"),["stop"]))},{default:p(()=>[V($(T("pc")<O.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):S("",!0),F("pbs")?(o(),L(r(ve),{key:2,value:"pbs",class:"_card"},{default:p(()=>[n(r(Q),{slot:"header",color:"light"},{default:p(()=>[n(r(le),{class:"previousLabel"},{default:p(()=>[...e[19]||(e[19]=[V("Pregnancy and breastfeeding status",-1)])]),_:1})]),_:1}),a("div",Cs,[n(cs,{"is-active":c.value==="pbs",ref_key:"pregnancyBreastfeedingFormRef",ref:l,onDataSaved:k},null,8,["is-active"]),a("div",ws,[T("pbs")>0?(o(),L(r(oe),{key:0,fill:"outline",onClick:e[5]||(e[5]=ie(N=>b("pbs"),["stop"]))},{default:p(()=>[...e[20]||(e[20]=[V(" Back ",-1)])]),_:1})):S("",!0),n(r(oe),{fill:"outline",onClick:e[6]||(e[6]=ie(N=>P("pbs"),["stop"]))},{default:p(()=>[V($(T("pbs")<O.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):S("",!0),F("pmh")?(o(),L(r(ve),{key:3,value:"pmh",class:"_card"},{default:p(()=>[n(r(Q),{slot:"header",color:"light"},{default:p(()=>[n(r(le),{class:"previousLabel"},{default:p(()=>[...e[21]||(e[21]=[V("Past medical history",-1)])]),_:1})]),_:1}),a("div",Ss,[n(ms,{"is-active":c.value==="pmh",ref_key:"pastMedicalHistoryFormRef",ref:C,onDataSaved:k},null,8,["is-active"]),a("div",Is,[T("pmh")>0?(o(),L(r(oe),{key:0,fill:"outline",onClick:e[7]||(e[7]=ie(N=>b("pmh"),["stop"]))},{default:p(()=>[...e[22]||(e[22]=[V(" Back ",-1)])]),_:1})):S("",!0),n(r(oe),{fill:"outline",onClick:e[8]||(e[8]=ie(N=>P("pmh"),["stop"]))},{default:p(()=>[V($(T("pmh")<O.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):S("",!0),F("al")?(o(),L(r(ve),{key:4,value:"al",class:"_card"},{default:p(()=>[n(r(Q),{slot:"header",color:"light"},{default:p(()=>[n(r(le),{class:"previousLabel"},{default:p(()=>[...e[23]||(e[23]=[V("Allergies",-1)])]),_:1})]),_:1}),a("div",ks,[n(Hn,{"is-active":c.value==="al",ref_key:"allergiesFormRef",ref:U,onDataSaved:k},null,8,["is-active"]),a("div",Ps,[T("al")>0?(o(),L(r(oe),{key:0,fill:"outline",onClick:e[9]||(e[9]=ie(N=>b("al"),["stop"]))},{default:p(()=>[...e[24]||(e[24]=[V(" Back ",-1)])]),_:1})):S("",!0),n(r(oe),{fill:"outline",onClick:e[10]||(e[10]=ie(N=>P("al"),["stop"]))},{default:p(()=>[V($(T("al")<O.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):S("",!0),F("pe")?(o(),L(r(ve),{key:5,value:"pe",class:"_card"},{default:p(()=>[n(r(Q),{slot:"header",color:"light"},{default:p(()=>[n(r(le),{class:"previousLabel"},{default:p(()=>[...e[25]||(e[25]=[V("Physical examination",-1)])]),_:1})]),_:1}),a("div",Es,[n(gs,{"is-active":c.value==="pe",ref_key:"physicalExaminationFormRef",ref:y,onDataSaved:k},null,8,["is-active"]),a("div",xs,[T("pe")>0?(o(),L(r(oe),{key:0,fill:"outline",onClick:e[11]||(e[11]=ie(N=>b("pe"),["stop"]))},{default:p(()=>[...e[26]||(e[26]=[V(" Back ",-1)])]),_:1})):S("",!0),n(r(oe),{fill:"outline",onClick:e[12]||(e[12]=ie(N=>P("pe"),["stop"]))},{default:p(()=>[V($(T("pe")<O.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):S("",!0)]),_:1},8,["value"])]),_:1})):S("",!0)],64)}}}),Oo=ce(Ns,[["__scopeId","data-v-597092a6"]]);class As extends pt{constructor(s,c){super(s,8,c)}static async getDiagnosis(s="",c=1,u=10){const v=await pe.getConceptID("Qech outpatient diagnosis list");return pt.getJson("diagnosis",{id:v,name:s,page:c,page_size:u})}}const Os=J({name:"Menu",components:{IonContent:_t,IonHeader:gt,IonItem:Q,IonList:Ve,IonMenu:ft,IonTitle:vt,IonToolbar:mt,List:He},computed:{...Le(Se,["patient"])},data(){return{valueNumericArray:[],obsDatetime:[],graphIcon:Dt(["#006401"]),listIcon:bt(["#636363"]),displayGraph:!0,orders:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],list:[],series:[{name:"",data:[]}]}},setup(){return{checkmark:ht,pulseOutline:Fe}},async mounted(){const t=await z.getAll(this.patient.patientID,"Primary diagnosis"),s=await z.getAll(this.patient.patientID,"Secondary diagnosis"),c=await z.getAll(this.patient.patientID,"Attempted/ Differential diagnosis"),u=[...t||[],...s||[],...c||[]],v=fe.isEmpty(u)?[]:Promise.all(u.map(async d=>({name:await z.getConceptName(d.value_coded),obs_date:d.obs_datetime})));this.setListData(await v)},methods:{dismiss(){Dn.dismiss()},handleIcon(){},setActivClass(t){this.activeHeight="",this.activeBMI="",this.activeWeight="",t=="height"?this.activeHeight="_active":t=="weight"?this.activeWeight="_active":t=="BMI"&&(this.activeBMI="_active")},setListData(t){this.list=[],this.list.push({actionBtn:!1,class:"col_background",header:!0,minHeight:"--min-height: 25px;",display:["Date","Diagnosis","Notes"]}),t.forEach(s=>{this.list.push({actionBtn:!1,minHeight:"--min-height: 25px;",class:"col_background",display:[we.toStandardHisFormat(s.obs_date),s.name,""]})})}}}),$s={class:"modal_wrapper"};function Ms(t,s,c,u,v,d){const _=Y("list");return o(),h("div",$s,[a("div",null,[n(_,{listData:t.list},null,8,["listData"])])])}const Ts=ce(Os,[["render",Ms],["__scopeId","data-v-88580898"]]),Ls={class:"custom_card",style:{padding:"10px"}},Fs={key:0},Bs={key:0,style:{color:"red","margin-top":"10px",background:"lightgoldenrodyellow"}},Rs={class:"ion-padding",slot:"content"},Vs=J({__name:"OPDDiagnosis",setup(t,{expose:s}){const c=Ee,u=i(!0),v=i(!1),d=i(!0),_=i(!1),B=i(!0),k=i(""),I=i(""),x=i([]),C=i([]),U=i(),l=i(null);$n();const y=W(()=>C.value.some(m=>m.data.concept_id===6542));de(C,()=>{P()},{deep:!0});const A=W(()=>[{name:"primaryDiagnosis",header:"Primary Diagnosis",componentType:"multiSelectInputField",options:x.value,icon:c.search,onSearchChange:T,validation:Oe.required},{componentType:"checkboxField",label:"Secondary Diagnosis",type:"single",grid:{s:"6"},name:"secondaryDiagnosisCheckbox"},{componentType:"checkboxField",label:"Differential Diagnosis",type:"single",grid:{s:"6"},name:"differentialDiagnosisCheckbox"},{componentType:"Dashes"},{name:"secondaryDiagnosis",header:"Secondary Diagnosis",componentType:"multiSelectInputField",isMultiple:!0,options:x.value,icon:c.search,condition:m=>m==null?void 0:m.secondaryDiagnosisCheckbox,onSearchChange:T,validation:(m,e)=>w(e,"secondaryDiagnosis")},{name:"differentialDiagnosis",header:"Differential Diagnosis",componentType:"multiSelectInputField",options:x.value,icon:c.search,isMultiple:!0,condition:m=>m==null?void 0:m.differentialDiagnosisCheckbox,onSearchChange:T,validation:(m,e)=>w(e,"differentialDiagnosis")}]),w=(m,e)=>{var te,q,Ie;if(!m)return null;const E=(te=m.primaryDiagnosis)==null?void 0:te.name,N=((q=m.secondaryDiagnosis)==null?void 0:q.map(se=>se.name))||[],j=((Ie=m.differentialDiagnosis)==null?void 0:Ie.map(se=>se.name))||[];if(e==="secondaryDiagnosis"&&N.includes(E)||e==="differentialDiagnosis"&&j.includes(E))return"".concat(E," is already the primary diagnosis");const ee=N.find(se=>j.includes(se));return ee?"".concat(ee," cannot be both secondary and differential"):null},M=()=>{I.value="",k.value="",u.value=!1,B.value=!1,v.value=!0},O=async()=>{var m;((m=l.value)==null?void 0:m.validateForm())==null&&(F(),v.value=!1,_.value=!0,B.value=!0,d.value=!1)},F=()=>{var te;const m=[],e=C.value.map(q=>q.name),E=((te=l.value)==null?void 0:te.getFormValues())||{},N=E.primaryDiagnosis||[],j=E.secondaryDiagnosis||[],ee=E.differentialDiagnosis||[];if(N.name&&!e.includes(N.name))if(!C.value.some(Ie=>Ie.data.concept_id===6542))m.push({actionBtn:!0,btn:["delete"],name:N.name,id:N.concept_id,display:[N.name,"Primary diagnosis"],data:{concept_id:6542,value_coded:N.concept_id,obs_datetime:he.getSessionDate()}});else return Mn("Only one primary diagnosis is allowed"),!1;return j&&j.forEach(q=>{e.includes(q.name)||m.push({actionBtn:!0,btn:["delete"],name:q.name,id:q.concept_id,display:[q.name,"Secondary diagnosis"],data:{concept_id:6543,value_coded:q.concept_id,obs_datetime:he.getSessionDate()}})}),ee&&ee.forEach(q=>{e.includes(q.name)||m.push({actionBtn:!0,btn:["delete"],name:q.name,id:q.concept_id,display:[q.name,"Differential diagnosis"],data:{concept_id:10201,value_coded:q.concept_id,obs_datetime:he.getSessionDate()}})}),m.length>0&&(C.value=[...C.value,...m]),!0},T=async m=>{const e=m.trim().toLowerCase()||"";return x.value=await As.getDiagnosis(e,1,15),x.value},b=m=>{const e=C.value,E=m.name,N=e.filter(j=>j.display[0]!==E);C.value=N},P=()=>{C.value.length>0?(_.value=!0,u.value=!1):v.value||(u.value=!0),B.value=!y.value},R=async()=>{if(C.value.length<=0){re("Diagnosis not saved");return}const m=C.value.flatMap(E=>E.data);if(m.length<=0)return re("Diagnosis not saved");const e=await z.addObsToEncounter(m,K.DIAGNOSIS);await z.mergeObsToPatient(e),xe("Diagnosis saved successful"),C.value=[]};return ye(async()=>{P(),await T("")}),s({onSubmit:R}),(m,e)=>{const E=Y("ion-row"),N=Y("ion-label"),j=Y("ion-accordion"),ee=Y("ion-accordion-group");return o(),h(Z,null,[a("div",Ls,[n(St,{status:u.value,content:"No Diagnosis added"},null,8,["status"]),_.value?(o(),h("span",Fs,[n(He,{listData:C.value,"onClicked:delete":b},null,8,["listData"]),y.value?(o(),h("div",Bs," In order to update the diagnosis list, please remove/delete the primary diagnosis only and then re-add or change it along with the secondary and differential diagnoses. ")):S("",!0)])):S("",!0),v.value?(o(),L(E,{key:1},{default:p(()=>{var te;return[a("div",null,[n(Re,{formData:A.value,ref_key:"formRef",ref:l},null,8,["formData"])]),a("div",null,[n(De,{fill:"clear",icon:r(c).plus,iconSlot:"icon-only","onClicked:btn":e[0]||(e[0]=q=>O()),name:"Save",disabled:(te=l.value)==null?void 0:te.validateForm(),class:"ion-margin-top"},null,8,["icon","disabled"])])]}),_:1})):S("",!0),B.value?(o(),L(E,{key:2,style:{"margin-top":"10px"}},{default:p(()=>[n(De,{fill:"clear",icon:r(c).plus,iconSlot:"icon-only","onClicked:btn":e[1]||(e[1]=te=>M()),name:"Add new Diagnosis"},null,8,["icon"])]),_:1})):S("",!0)]),n(E,null,{default:p(()=>[n(ee,{ref_key:"accordionGroup",ref:U,class:"previousView"},{default:p(()=>[n(j,{value:"first","toggle-icon-slot":"start",class:"custom_card"},{default:p(()=>[n(r(Q),{slot:"header",color:"light"},{default:p(()=>[n(N,{class:"previousLabel"},{default:p(()=>[...e[2]||(e[2]=[V("Previous Diagnosis",-1)])]),_:1})]),_:1}),a("div",Rs,[n(Ts)])]),_:1})]),_:1},512)]),_:1})],64)}}}),$o=ce(Vs,[["__scopeId","data-v-a440f286"]]),Hs={class:"allergies-section"},Us={class:"allergies-container"},qs={class:"medication-section"},Gs={class:"medication-content"},Ws={key:0,class:"add-medication-form"},zs={class:"form-group"},Ys={class:"option-label"},js={key:0,class:"error-message"},Ks={class:"form-row"},Qs={class:"form-group"},Xs={key:0,class:"error-message"},Js={class:"form-group"},Zs={key:0,class:"error-message"},eo={class:"form-group"},to={key:0,class:"error-message"},no={class:"action-buttons"},ao={class:"notes-section"},so={class:"notes-content"},oo={class:"notes-input-container"},io={class:"ion-padding",slot:"content"},lo={class:"notes-timeline"},ro={class:"note-date"},co={class:"note-content"},uo={class:"ion-padding",slot:"content"},po={class:"note-date"},mo={class:"note-content"},vo=J({watch:{},name:"xxxComponent"}),fo=J({...vo,setup(t){const s=Ee,c=Wn,u=i(!1),v=i(!1),d=i(!0),_=i(0),B=i(""),k=i(!1),I=i(),x=i(!1),C=i(""),U=i(""),l=i(""),y=i(""),A=i(""),w=i(""),M="Add new medication",O=Pe(),F=wt(),T=W(()=>F.selectedMedicalAllergiesList),b=W(()=>O.selectedMedicalDrugsList),P=W(()=>O.partialOPDdrugList),R=W(()=>O.nonPharmalogicalTherapyAndOtherNotes),m=["first","second","third"],e=i(),E=i(),N=i(),j=i(!1),ee=i(!1),te=i("Show more notes"),q=i(),Ie=i(),se=i(),$e=W(()=>O.editingDrugItem),Mt=i("Select a route"),Ue=i(!1),Tt=i("Select frequency"),qe=i(!1),Lt=i("Select drug"),Ge=i(!1),ne=i(),ae=i(),me=i(),Ne=i([]),Ft=i([{concept_id:11797,name:"Buccal",concept_name_id:null,id:1769},{concept_id:11794,name:"Intradermal",concept_name_id:null,id:6284},{concept_id:11795,name:"Intramuscular (IM)",concept_name_id:null,id:6285},{concept_id:11799,name:"Intraosseous",concept_name_id:null,id:6286},{concept_id:11793,name:"Intravenous (IV)",concept_name_id:null,id:6295},{concept_id:3327,name:"Oral",concept_name_id:null,id:8686},{concept_id:11800,name:"Other method of prescription",concept_name_id:null,id:8920},{concept_id:11792,name:"Rectally",concept_name_id:null,id:10785},{concept_id:11798,name:"Subcutaneous",concept_name_id:null,id:12342},{concept_id:11796,name:"Sublingual",concept_name_id:null,id:12344},{concept_id:11792,name:"Rectally",concept_name_id:null,id:14078},{concept_id:11793,name:"Intravenous (IV)",concept_name_id:null,id:14079},{concept_id:11794,name:"Intradermal",concept_name_id:null,id:14080},{concept_id:11795,name:"Intramuscular (IM)",concept_name_id:null,id:14081},{concept_id:11796,name:"Sublingual",concept_name_id:null,id:14082},{concept_id:11797,name:"Buccal",concept_name_id:null,id:14083},{concept_id:11798,name:"Subcutaneous",concept_name_id:null,id:14084},{concept_id:11799,name:"Intraosseous",concept_name_id:null,id:14085},{concept_id:11800,name:"Other method of prescription",concept_name_id:null,id:14086}]),Bt=W(()=>Ne.value.length?Ne.value:Ft.value);function Rt(g){ne.value=g}async function Vt(){return await zn()}async function Ht(g=5,f=1e3){let D=0;for(;D<g&&(Ne.value=await Vt(),!(Ne.value.length>0));)D++,await new Promise(H=>setTimeout(H,f));Ne.value.length===0&&console.warn("Failed to fetch route list after maximum retries.")}ye(async()=>{const g=new Un,{previousDrugPrescriptions:f,previousClinicalNotes:D,previousDrugAllergies:H}=await g.getPatientEncounters();e.value=f,E.value=Object.entries(D)[0];const[,...G]=Object.entries(D);N.value=G,q.value=Object.entries(H)[0];const[,...X]=Object.entries(H);Ie.value=X,await Ht()}),de(()=>U.value,async g=>{zt()}),de(()=>l.value,async g=>{Xe()});function Ut(){if(fe.isEmpty(ne.value)==!0)return Ue.value=!0,!1;if(fe.isEmpty(ne.value)==!1)return Ue.value=!1,!0}function qt(){if(fe.isEmpty(ae.value)==!0)return qe.value=!0,!1;if(fe.isEmpty(ae.value)==!1)return qe.value=!1,!0}function Gt(){if(fe.isEmpty(me.value)==!0)return Ge.value=!0,!1;if(fe.isEmpty(me.value)==!1)return Ge.value=!1,!0}function Wt(){d.value=!d.value,u.value=!0,k.value=!1,x.value=!1}async function zt(){return et(U.value)?k.value=!1:(B.value="please enter a number",k.value=!0),k.value}async function Xe(){return et(l.value)?x.value=!1:(I.value="please enter a number",x.value=!0),x.value}async function Je(){const g=await Xe(),f=qt(),D=Gt(),H=Ut();return!g&&f==!0&&D==!0&&H==!0}function Yt(g){ae.value=g}async function Ze(){try{const g=()=>se.value.dose_strength!=null&&se.value.dose_strength?Math.trunc(se.value.dose_strength):1;if($e.value!==null){if(!await Je()){re("Please enter correct data values",4e3);return}const D=he.getSessionDate(),H=tt(D,parseInt(l.value));let G=!1;We(se.value)==!0&&(G=!0);const X={drugName:C.value,dose:g(),frequency:ae.value.label,frequency_code:ae.value.code,duration:l.value,prescription:H,drug_id:w.value,units:A.value,route_concept_id:ne.value.concept_id,route_name:ne.value.name,highlightbackground:G},ze=Pe();console.log(ze.setSelectedMedicalDrugsList([X])),ze.editingDrugItem=null,d.value=!0}else{if(!await Je()){re("Please enter correct data values",4e3);return}nn();const D=he.getSessionDate(),H=tt(D,parseInt(l.value));let G=!1;We(se.value)==!0&&(G=!0);const X={drugName:C.value,dose:g(),frequency:ae.value.label,frequency_code:ae.value.code,duration:l.value,prescription:H,drug_id:w.value,units:A.value,route_concept_id:ne.value.concept_id,route_name:ne.value.name,highlightbackground:G};Pe().setSelectedMedicalDrugsList([X])}w.value="",C.value="",U.value="",ae.value=null,l.value="",y.value="",_.value++,me.value=null,ne.value=null}catch(g){console.error("Error saving data:",g)}}async function jt(g){const f=g,G=await Yn.getOfflineOPDDrugs({name:f,page:1,page_size:10});G.map(X=>({label:X.name,value:X.name,other:X})),O.setPartialOPDdrugList(G)}function We(g){const f=[];return T.value.forEach(H=>{H.selected&&f.push(H.concept_id)}),Kt([g],f)==!0?(re("Client is allergic to the selected medication",4e6),!0):!1}function Kt(g,f){try{return g.some(D=>f.includes(D.concept_id))}catch(D){return!1}}function Qt(g){g&&(C.value=g.name,w.value=g.drug_id,A.value=g.units,se.value=g,We(g))}function Xt(g){const f=b.value[g],D=Pe();D.removeDrugById(f.drug_id),D.editingDrugItem=f,w.value="",C.value="",U.value="",ae.value=null,l.value="",y.value="",me.value=null,ne.value=null,w.value=f.drug_id,C.value=f.drugName,U.value=f.dose,ae.value={label:f.frequency,code:f.frequency_code},l.value=f.duration,y.value=f.prescription;const H=P.value.find(G=>G.name===f.drugName);H&&(me.value=H),ne.value={concept_id:f.route_concept_id,name:f.route_name},d.value=!1,_.value++}function Jt(){if($e.value!==null){w.value="",C.value="",U.value="",ae.value=null,l.value="",y.value="",me.value=null,ne.value=null;const g=Pe();g.setSelectedMedicalDrugsList([$e.value]),g.editingDrugItem=null}d.value=!0,_.value++}function Zt(g){b.value.splice(g,1),_.value++,re("you have removed a drug from list",6e3)}function en(g){let f=g.target.value;tn(f)}function tn(g){Pe().setNonPharmalogicalTherapyAndOtherNotes(g)}function et(g){return/^[0-9]+$/.test(g)}function tt(g,f){const D=new Date(g);D.setDate(D.getDate()+f);const H=D.getFullYear(),G=String(D.getMonth()+1).padStart(2,"0"),X=String(D.getDate()).padStart(2,"0");return"".concat(H,"-").concat(G,"-").concat(X)}function nn(){u.value=!1,v.value=!0,d.value=!0}function an(g){m.filter(D=>D!==g.detail.value);const f=g.detail.value;f!==void 0?f=="third"&&(te.value="Show less notes",ee.value=!j.value):(te.value="Show more notes",ee.value=!j.value)}function sn(g){return g[1]}function on(g){(g.key==="Enter"||g.key==="ArrowDown")&&(g.preventDefault(),Ze())}const ke=W(()=>[{showAddItemButton:!0,addItemButton:!0,name:$e.value!==null?"Update":"ADD",fn:Ze},{showAddItemButton:!0,addItemButton:!0,name:"CANCEL",fn:ln}]),ln=async()=>{Tn(Ln,{class:"otherVitalsModal"},!0,{message:"Are you sure you want to cancle?"},{cancel:H=>{},confirm:async H=>{H.detail==!0&&Jt()}})};return(g,f)=>(o(),L(r(Ve),null,{default:p(()=>[a("div",Hs,[a("div",Us,[n($t)])]),a("div",qs,[n(r(Q),{lines:"none",class:"section-header"},{default:p(()=>[n(r(Me),{icon:r(Be),class:"section-icon"},null,8,["icon"]),n(r(le),{class:"section-title",style:{"margin-top":"12px"}},{default:p(()=>[...f[9]||(f[9]=[V("Medication",-1)])]),_:1})]),_:1}),a("div",Gs,[(o(),L(qn,{_selectedMedicalDrugsList:b.value,onEditItem:Xt,onRemoveItem:Zt,key:_.value,class:"medication-list"},null,8,["_selectedMedicalDrugsList"])),d.value?S("",!0):(o(),h("div",Ws,[a("div",zs,[f[10]||(f[10]=a("label",{class:"input-label"},"Medication",-1)),n(r(Ye),{modelValue:me.value,"onUpdate:modelValue":[f[0]||(f[0]=D=>me.value=D),f[1]||(f[1]=D=>Qt(D))],options:P.value,searchable:!0,"close-on-select":!0,"show-labels":!1,placeholder:"Select medication",label:"name","track-by":"drug_id",onSearchChange:f[2]||(f[2]=D=>jt(D))},{option:p(D=>[a("div",Ys,$(D.option.name),1)]),_:1},8,["modelValue","options"]),Ge.value?(o(),h("div",js,$(Lt.value),1)):S("",!0)]),a("div",Ks,[a("div",Qs,[f[11]||(f[11]=a("label",{class:"input-label"},"Route",-1)),n(r(Ye),{modelValue:ne.value,"onUpdate:modelValue":[f[3]||(f[3]=D=>ne.value=D),f[4]||(f[4]=D=>Rt(D))],options:Bt.value,searchable:!0,"close-on-select":!0,"show-labels":!1,placeholder:"Select route",label:"name","track-by":"concept_id",disabled:!1},null,8,["modelValue","options"]),Ue.value?(o(),h("div",Xs,$(Mt.value),1)):S("",!0)]),a("div",Js,[f[12]||(f[12]=a("label",{class:"input-label"},"Frequency",-1)),n(r(Ye),{modelValue:ae.value,"onUpdate:modelValue":[f[5]||(f[5]=D=>ae.value=D),f[6]||(f[6]=D=>Yt(D))],options:r(c),searchable:!0,"close-on-select":!0,"show-labels":!1,placeholder:"Select frequency",label:"label","track-by":"code"},null,8,["modelValue","options"]),qe.value?(o(),h("div",Zs,$(Tt.value),1)):S("",!0)]),a("div",eo,[f[13]||(f[13]=a("label",{class:"input-label"},"Duration (days)",-1)),n(r(Cn),{modelValue:l.value,"onUpdate:modelValue":f[7]||(f[7]=D=>l.value=D),type:"number",inputmode:"numeric",pattern:"[0-9]*",fill:"outline",placeholder:"Enter duration",onKeydown:on},null,8,["modelValue"]),x.value?(o(),h("div",to,$(I.value),1)):S("",!0)])]),a("div",no,[ke.value[0].addItemButton?(o(),L(De,{key:0,name:ke.value[0].name,icon:r(wn),"onClicked:btn":ke.value[0].fn,class:"save-button"},null,8,["name","icon","onClicked:btn"])):S("",!0),ke.value[1].addItemButton?(o(),L(De,{key:1,name:ke.value[1].name,icon:r(Sn),"onClicked:btn":ke.value[1].fn,class:"cancel-button"},null,8,["name","icon","onClicked:btn"])):S("",!0)])])),d.value?(o(),L(De,{key:1,name:M,icon:r(Te),fontWeight:"600","onClicked:btn":Wt,class:"add-new-button"},null,8,["icon"])):S("",!0)])]),a("div",ao,[n(r(Q),{lines:"none",class:"section-header"},{default:p(()=>[n(r(Me),{icon:r(In),class:"section-icon"},null,8,["icon"]),n(r(le),{class:"section-title"},{default:p(()=>[...f[14]||(f[14]=[V("Non-pharmacological therapy and other notes",-1)])]),_:1})]),_:1}),a("div",so,[n(Gn,{class:"intervention-component"}),a("div",oo,[n(r(Q),{class:"notes-input-item"},{default:p(()=>[n(r(Me),{slot:"start",icon:r(s).editPen,class:"edit-icon","aria-hidden":"true"},null,8,["icon"]),n(r(kn),{modelValue:R.value,"onUpdate:modelValue":f[8]||(f[8]=D=>R.value=D),onIonInput:en,placeholder:"Enter notes here...","auto-grow":!0,class:"notes-textarea",fill:"outline",style:{"--padding-start":"16px"}},null,8,["modelValue"])]),_:1})]),n(r(je),{ref:"accordionGroup",class:"previous-notes"},{default:p(()=>[n(r(ve),{value:"fourth","toggle-icon-slot":"start"},{default:p(()=>[n(r(Q),{slot:"header",color:"light",class:"previous-notes-header"},{default:p(()=>[n(r(le),null,{default:p(()=>[...f[15]||(f[15]=[V("Previous visit notes",-1)])]),_:1})]),_:1}),a("div",io,[a("div",lo,[g.index===1?(o(!0),h(Z,{key:0},ue(E.value,(D,H)=>(o(),h("div",{key:H,class:"note-entry"},[(o(!0),h(Z,null,ue(D,(G,X)=>(o(),h("div",{key:X},[a("div",ro,$(G.date),1),a("div",co,$(G.notes),1)]))),128))]))),128)):S("",!0),n(r(je),{onIonChange:an},{default:p(()=>[n(r(ve),{value:"third","toggle-icon-slot":"start"},{default:p(()=>[n(r(Q),{slot:"header",color:"light",class:"show-more-header"},{default:p(()=>[n(r(le),{color:"primary"},{default:p(()=>[V($(te.value),1)]),_:1})]),_:1}),a("div",uo,[(o(!0),h(Z,null,ue(N.value,(D,H)=>(o(),h("div",{key:H,class:"note-entry"},[(o(!0),h(Z,null,ue(sn(D),(G,X)=>(o(),h("div",{key:X},[a("div",po,$(G.date),1),a("div",mo,$(G.notes),1)]))),128))]))),128))])]),_:1})]),_:1})])])]),_:1})]),_:1},512)])])]),_:1}))}}),Mo=ce(fo,[["__scopeId","data-v-928c62f1"]]),go={class:"dash_box"},_o={key:1},ho=J({name:"xxxComponent"}),yo=J({...ho,setup(t){const s=i("No outcome created yet"),c=i(!1),u=i("please select a type");i("Add new outcome"),i(!0);const v=i(!0),d=i(""),_=i(!0),B=i(!1),k=Fn(),I=W(()=>k.outcomes),x=i(!1),C=i(!1),U=i(!1),l=i(!1),y=i(!1);i(null),i(null);const A=i([{name:"Admitted for short stay",selected:!1},{name:"Referred out",selected:!1},{name:"Discharged Home",selected:!1}]),w=[{multi_Selection:!1,show_list_label:!0,unqueId:"qwerty2",name_of_list:"Add new outcome",placeHolder:"Choose one",items:A.value,listUpdatedFN:M,listFilteredFN:()=>{},use_internal_filter:!0,disabled:i(!1)}];function M(m){A.value=m,A.value.forEach(e=>{e.selected==!0&&(d.value=e.name)})}ye(async()=>{F()}),de(()=>d.value,async m=>{x.value==!0?x.value=!1:P()}),de(()=>I.value.length,async m=>{F()});function O(){A.value.forEach(m=>{m.selected=!1}),d.value=""}function F(){I.value.length>0?_.value=!1:I.value.length==0&&B.value==!1&&(_.value=!0)}function T(m){I.value.splice(m,1)}const b=m=>{};async function P(m=!0){const e=d.value;console.log(e),d.value=e;const E=d.value;E==A.value[0].name?U.value=!0:U.value=!1,E==A.value[1].name?(l.value=!0,console.log("show_discharged_options is set to true")):l.value=!1,E==A.value[2].name?(y.value=!0,console.log("show_discharged_options is set to true")):y.value=!1}function R(){C.value=!1,U.value=!1,l.value=!1,y.value=!1,O()}return(m,e)=>{const E=Y("ion-row");return o(),L(r(Ve),null,{default:p(()=>[n(E,null,{default:p(()=>[n(r(dt),null,{default:p(()=>[(o(),L(jn,{key:0,"onUpdate:removeItem":T,"onUpdate:editItem":b,displayData:I.value},null,8,["displayData"]))]),_:1})]),_:1}),_.value?(o(),L(E,{key:0},{default:p(()=>[a("span",go,$(s.value),1)]),_:1})):S("",!0),v.value?(o(),h("div",_o,[n(E,null,{default:p(()=>[n(r(dt),null,{default:p(()=>[n(Bn,{multiSelection:w[0].multi_Selection,show_label:w[0].show_list_label,uniqueId:w[0].unqueId,name_of_list:w[0].name_of_list,choose_place_holder:w[0].placeHolder,"items_-list":w[0].items,use_internal_filter:w[0].use_internal_filter,disabled:w[0].disabled.value,onItemListUpDated:w[0].listUpdatedFN,onItemListFiltered:w[0].listFilteredFN},null,8,["multiSelection","show_label","uniqueId","name_of_list","choose_place_holder","items_-list","use_internal_filter","disabled","onItemListUpDated","onItemListFiltered"]),a("div",null,[c.value?(o(),L(r(le),{key:0,class:"error-label"},{default:p(()=>[V($(u.value),1)]),_:1})):S("",!0)])]),_:1})]),_:1})])):S("",!0),U.value?(o(),L(Kn,{key:2,onDataSaved:R,selected_ward_prop:"",admitted_other_props:""})):S("",!0),l.value?(o(),L(Qn,{key:3,onDataSaved:R,selected_referral_data:"",selected_other_referral_data:""})):S("",!0),y.value?(o(),L(Xn,{key:4,onDataSaved:R,selected_discharged_prop:"",selected_discharged_data:""})):S("",!0)]),_:1})}}}),To=ce(yo,[["__scopeId","data-v-b6576c18"]]);export{Oo as C,$o as O,ia as P,cs as _,Mo as a,To as b,gs as c,ls as d,As as e};
