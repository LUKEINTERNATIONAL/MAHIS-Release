var $t=Object.defineProperty;var Tt=(e,t,n)=>t in e?$t(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var X=(e,t,n)=>Tt(e,typeof t!="symbol"?t+"":t,n);import{d as z,ab as oe,M as at,ac as Ae,aa as st,_ as De,du as ot,dA as it,ad as Be,a2 as he,E as be,G as Pe,a7 as Se,I as Ce,bg as rt,N as Ne,aY as lt,R as ze,H as b,O as ee,f as I,J as l,l as o,k as S,K as x,Q as J,e as L,F as re,P as Ie,aS as G,cl as dt,r as k,c as ie,w as ye,a as Me,u as A,aI as xt,n as Rt,b4 as Ye,cC as Ft,D as Ee,m as Z,b3 as Ht,b0 as ct,bd as Ut,aR as Vt,L as He,a9 as Jt,p as pe,aP as zt,aO as qt,ap as Wt,aM as Gt,a6 as Kt,bp as Yt,bl as jt,bK as Qt,aG as Xt}from"./vendor-DfayhWEV.js";import{M as Oe,aQ as Zt,S as M,q as ce,H as w,aK as Le,K as le,u as q,_ as j,az as je,k as te,O as me,aM as Y,aA as en,t as ne,aF as Ue,v as tn,bd as nn,be as an,bn as sn,W as ut,U as Qe,n as pt,h as on,s as Ve,b1 as rn,bc as ln,B as mt,bm as dn,N as K,aT as ht,af as Re,bo as cn,aV as gt,P as ft,a7 as un,aN as pn,bp as mn,bq as hn,aq as gn,aH as $e,a0 as fn,a_ as ae,A as we,br as vn,d as _n,ax as Fe,D as yn,ay as Dn,y as Xe}from"./index-3VO6Sqm_.js";import{D as bn}from"./DashBox-CzEpg4Ai.js";import{B as W}from"./BasicForm-BLCKWuFB.js";import{u as Je,P as vt,L as Sn}from"./lab_order-CR1VKA7J.js";import{v as Ze}from"./group_validation-PL3YeMEP.js";import{l as _e}from"./lodash-NJiRuGo9.js";import{g as Cn,a as _t,D as se}from"./drug_prescription_service-BH35UMhw.js";import{A as In}from"./ncd_appointment_service-BxHGs7QV.js";import{D as Mn}from"./DateInputField-DCPWAc6d.js";import{D as yt}from"./drug_service-DovCeCPf.js";const On=z({components:{IonButtons:lt,IonButton:Ne,IonModal:rt,IonHeader:Ce,IonContent:Se,IonToolbar:Pe,IonTitle:be,IonItem:he,IonList:Be,IonAvatar:it,IonImg:ot,IonLabel:De,IonPage:st,IonMenu:Ae,BasicForm:W,IonFooter:at,DynamicButton:Oe},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{type:Object,default:{}},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},computed:{...oe(q,["patient"]),...oe(Je,["labResults"])},mounted(){},methods:{dismiss(){ze.dismiss()},async saveResults(){const e=await this.buildResults();this.patient.labOrders.results=[{encounter_id:"",date:w.sessionDate(),measures:e,test_id:this.labResults[0].id}];let t=!1;for(let n=0;n<this.patient.labOrders.unsaved.length;n++)if(this.patient.labOrders.unsaved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.unsaved[n].tests&&this.patient.labOrders.unsaved[n].tests.length>0){this.patient.labOrders.unsaved[n].tests[0].result=e,t=!0;break}if(!t){for(let n=0;n<this.patient.labOrders.saved.length;n++)if(this.patient.labOrders.saved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.saved[n].tests&&this.patient.labOrders.saved[n].tests.length>0){this.patient.labOrders.saved[n].tests[0].result=e;break}}await Le(this.patient),le("Saved successfully"),this.$emit("saved")},async buildResults(){let e=[];return await Promise.all(this.labResults[1].data.rowData[0].colData.map(async t=>{var a;let n;M.getUseIndexDBStatus()||M.getModsStatus()?n=await ce("testResultIndicators",{whereClause:{test_type_id:t.id}}):n=await vt.getTestIndicatorsWithID(t.id),e.push({indicator:{name:(a=n[0])==null?void 0:a.name,concept_id:t.id},value:t.value.name||t.value||"not done",value_modifier:"",value_type:"text"})})),e},async nav(e,t){const n=Je();t=="not_save"?(await Zt(),n.setLabResults(!1)):n.setLabResults(!0),this.dismiss(),this.$router.push(e)}}}),kn={class:"modal_wrapper"},wn={class:"center text_12"};function Nn(e,t,n,a,s,u){const r=b("ion-title"),d=b("ion-button"),m=b("ion-buttons"),h=b("ion-toolbar"),y=b("ion-header"),f=b("basic-form"),v=b("ion-row"),R=b("ion-content"),C=b("DynamicButton"),g=b("ion-footer"),P=b("ion-modal");return I(),ee(P,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[2]||(t[2]=B=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:l(()=>[o(y,null,{default:l(()=>[o(h,null,{default:l(()=>[o(r,null,{default:l(()=>[S("b",null,"Enter lab results for ("+x(e.labResults[0].name)+") test",1)]),_:1}),o(m,{slot:"end"},{default:l(()=>[o(d,{onClick:t[0]||(t[0]=B=>e.$emit("closeModal"))},{default:l(()=>[...t[3]||(t[3]=[J("Close",-1)])]),_:1})]),_:1})]),_:1})]),_:1}),o(R,{class:"ion-padding"},{default:l(()=>[S("div",kn,[S("div",wn,[o(v,null,{default:l(()=>[o(f,{contentData:e.labResults},null,8,["contentData"])]),_:1})])])]),_:1}),o(g,{translucent:!0},{default:l(()=>[o(h,null,{default:l(()=>[o(C,{onClick:t[1]||(t[1]=B=>e.saveResults()),name:"Save",fill:"clear",iconSlot:"icon-only",style:{float:"right"}})]),_:1})]),_:1})]),_:1},8,["is-open","keyboard-close"])}const Ln=j(On,[["render",Nn],["__scopeId","data-v-c688c775"]]),An=z({components:{IonButtons:lt,IonButton:Ne,IonModal:rt,IonHeader:Ce,IonContent:Se,IonToolbar:Pe,IonTitle:be,IonItem:he,IonList:Be,IonAvatar:it,IonImg:ot,IonLabel:De,IonPage:st,IonMenu:Ae,BasicForm:W,IonFooter:at,DynamicButton:Oe},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{default:[]},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},methods:{dismiss(){ze.dismiss()},nav(e,t){this.dismiss(),this.$router.push(e)}}}),Bn={class:"modal_wrapper"},Pn={class:"center text_12"};function En(e,t,n,a,s,u){const r=b("ion-title"),d=b("ion-button"),m=b("ion-buttons"),h=b("ion-toolbar"),y=b("ion-header"),f=b("ion-skeleton-text"),v=b("ion-col"),R=b("ion-row"),C=b("ion-content"),g=b("ion-modal");return I(),ee(g,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[1]||(t[1]=P=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:l(()=>[o(y,null,{default:l(()=>[o(h,null,{default:l(()=>[o(r,null,{default:l(()=>[S("b",null,"Lab results for ("+x(e.content.name)+") test",1)]),_:1}),o(m,{slot:"end"},{default:l(()=>[o(d,{onClick:t[0]||(t[0]=P=>e.$emit("closeModal"))},{default:l(()=>[...t[2]||(t[2]=[J("Close",-1)])]),_:1})]),_:1})]),_:1})]),_:1}),o(C,{class:"ion-padding"},{default:l(()=>[S("div",Bn,[S("div",Pn,[o(R,null,{default:l(()=>[(I(!0),L(re,null,Ie(e.content.result,(P,B)=>(I(),ee(v,{size:"4",key:B},{default:l(()=>[o(R,null,{default:l(()=>[o(v,{size:"8"},{default:l(()=>[P.indicator&&P.indicator.name?(I(),L(re,{key:0},[J(x(P.indicator.name),1)],64)):(I(),ee(f,{key:1,animated:"",style:{width:"80%"}}))]),_:2},1024),o(v,{class:"bold",size:"0.5"},{default:l(()=>[...t[3]||(t[3]=[J(":",-1)])]),_:1}),o(v,{class:"bold",size:"2"},{default:l(()=>[J(x(P.value),1)]),_:2},1024)]),_:2},1024)]),_:2},1024))),128))]),_:1})])])]),_:1})]),_:1},8,["is-open","keyboard-close"])}const $n=j(An,[["render",En],["__scopeId","data-v-ec78e656"]]),Tn=z({__name:"AddLabTestModal",setup(e){const t=q(),{patient:n}=G(t);dt();const a=te,s=k(""),u=k(""),r=k(""),d=k(""),m=k(null),h=ie(()=>[{componentType:"multiSelectInputField",name:"test",header:"Test",options:d.value,grid:{s:"6"},icon:te.search,validation:je.required,onChange:C=>{s.value=C.name}},{componentType:"multiSelectInputField",name:"specimen",header:"Specimen",grid:{s:"6"},icon:te.search,validation:je.required,value:r.value.length==1?r.value[0]:"",options:r.value.length>1?r.value:[]}]);ye(s,async C=>{if(C)try{r.value=await y(C)}catch(g){r.value=[]}else r.value=[]});const y=async C=>{let g;return M.getUseIndexDBStatus()||M.getModsStatus()?g=await ce("specimens"):g=await me.getSpecimens("",1e3),await Y.getConceptSet(C,"",{names:g.map(B=>B.name)})};ye(n,async()=>{u.value=[...n.value.labOrders.saved,...n.value.labOrders.unsaved]},{deep:!0});const f=()=>{ze.dismiss()},v=async()=>M.getUseIndexDBStatus()||M.getModsStatus()?await ce("testTypes"):await me.getTestTypes(),R=async()=>{var _,O,E,U,F,H;if(m.value.validateForm()){ne("Test not saved");return}if(!m.value){console.error("Form reference is not available");return}const C=m.value.getFormValues(),g=[{concept_id:C.test.concept_id,name:C.test.name,specimen:C.specimen.name,reason:"Routine",specimenConcept:await Y.getConceptID(C.specimen.name,!0)}];let B=(await me.buildLabOrders("",g))[0];B.order_date=B.date,B.specimen.name=C.specimen.name,B.tests[0].name=C.test.name;const c=JSON.parse(JSON.stringify(n.value));(E=(O=(_=c.labOrders)!=null?_:c.labOrders={}).unsaved)!=null||(O.unsaved=[]),(H=(F=(U=c.labOrders)!=null?U:c.labOrders={}).saved)!=null||(F.saved=[]),c.labOrders.unsaved.push(B),await Le(c),u.value=[...c.labOrders.saved,...c.labOrders.unsaved],f()};return Me(async()=>{d.value=await v()}),(C,g)=>{const P=b("ion-icon"),B=b("ion-col"),c=b("ion-row"),_=b("ion-footer");return I(),L(re,null,[o(A(Ce),{style:{display:"flex","justify-content":"space-between"}},{default:l(()=>[o(A(be),{class:"modalTitle"},{default:l(()=>[...g[2]||(g[2]=[J("Add Lab Test",-1)])]),_:1}),o(P,{onClick:g[0]||(g[0]=O=>f()),style:{"padding-top":"10px","padding-right":"10px"},icon:A(a).cancel},null,8,["icon"])]),_:1}),o(A(Se),{fullscreen:!0,class:"ion-padding",style:{"--background":"#fff"}},{default:l(()=>[o(en,{formData:h.value,ref_key:"formRef",ref:m},null,8,["formData"])]),_:1}),o(_,{collapse:"fade",class:"ion-no-border"},{default:l(()=>[o(c,null,{default:l(()=>[o(B,null,{default:l(()=>[o(Oe,{onClick:g[1]||(g[1]=O=>R()),name:"Save",fill:"solid",style:{float:"right",margin:"2%",width:"130px"}})]),_:1})]),_:1})]),_:1})],64)}}}),xn=j(Tn,[["__scopeId","data-v-3e17251e"]]),Rn={class:"container"},Fn={class:"table-responsive"},Hn=z({__name:"LabOrdersList",props:{propOrders:{default:()=>[]}},setup(e){const t=e,n=xt(),a=dt(),s=q(),u=Je(),r=Ue(),d=tn(),{patient:m}=G(s),{labResults:h}=G(u),{investigations:y}=G(r),{patientsWaitingForVitals:f,patientsWaitingForConsultation:v,patientsWaitingForLab:R,patientsWaitingForDispensation:C}=G(d),g=k(),P=k([]),B=k(["Lab Test","Specimen","Accession Number","Order Date","Result","Action"]);k(!0);const c=k(!1);k(!1);const _=k([]),O=k([]),E=k([]);k([]),k(!1);const U=k(""),F=k(!1),H=k(!1),Te=k(""),ke=te;nn(["#006401"]),an(["#636363"]);const qe=k({responsive:!0,select:!1,layout:{topStart:"buttons",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,buttons:[{text:" <b>+ Add other tests </b>",className:"add-test text-white",action:async()=>{await wt()}},{text:" <b>Send to Lab </b>",className:"send-lab text-white",attr:{id:"send-to-lab-btn"},action:async()=>{await Nt()}}]});ie(()=>E.value.some(p=>p.btn&&p.btn.includes("enter_results")));const Ct=async()=>{F.value=!1,await ue()},It=()=>{const p=document.getElementById("send-to-lab-btn");p&&(p.style.display="none")},Mt=()=>{const p=document.getElementById("send-to-lab-btn");p&&(p.style.display="inline")},Ot=()=>{Qe.getProgramID()==14&&!Qe.isLabTechnician()&&c.value?Mt():It()},kt=async p=>{const N=[{concept_id:await Y.getConceptID(p.name,!0),name:p.name,specimen:p.specimen,reason:"Routine",specimenConcept:await Y.getConceptID(p.specimen,!0)}];let i=(await me.buildLabOrders("",N))[0];i.order_date=i.date,i.specimen.name=await Y.getConceptName(i.specimen.concept_id),i.tests[0].name=await Y.getConceptName(i.tests[0].concept_id),m.value.labOrders.unsaved.push(i),await Le(m.value)},wt=async()=>{await pt(xn,{class:"lab-results-modal"},!0,{title:"name"}),await ue()},Nt=async()=>{await on("Do you want to send this patient to the lab?",{cancelBtnLabel:"Cancel",confirmBtnLabel:"Send to Lab",returnName:!0})=="Confirm"&&await Lt()},Lt=async()=>{try{const p=String(localStorage.getItem("locationID"));if(!p){Ve("Location not found");return}await rn.addPatientToStage(m.value,"LAB"),await d.refresh(p),await n.push("home"),le("The patient successfully sent to the lab. You may now attend to other patients.")}catch(p){console.error("Error sending to lab:",p),Ve("Failed to send patient to lab")}},We=async()=>{var N,D,i,V,$;if(!((N=m.value)!=null&&N.labOrders)||(_.value=[...(i=(D=m.value)==null?void 0:D.labOrders)==null?void 0:i.saved,...($=(V=m.value)==null?void 0:V.labOrders)==null?void 0:$.unsaved],!_.value))return;const p=await _.value.filter(T=>w.toStandardHisFormat(w.sessionDate())===w.toStandardHisFormat(T.order_date));p.length>0?y.value[0].selectedData=p:y.value[0].selectedData=""},At=async(p,N)=>{var i,V,$;if(await ut("Do you want to delete ".concat(p.tests[0].name," ?"),N)){const T=JSON.parse(JSON.stringify(m.value));T.labOrders.saved.some(de=>{var fe,ve;return de.order_date===p.order_date&&((fe=de==null?void 0:de.tests[0])==null?void 0:fe.name)==((ve=p==null?void 0:p.tests[0])==null?void 0:ve.name)})?(T.labOrders.saved=Ge(T.labOrders.saved,p.tests[0].name,p.order_date),($=(V=(i=T.labOrders)!=null?i:T.labOrders={}).voided)!=null||(V.voided=[]),T.labOrders.voided.push({orderId:p.id,reason:"Mistake entry"})):T.labOrders.unsaved=Ge(T.labOrders.unsaved,p.tests[0].name,p.date),await Le(T)}await ue()},Ge=(p,N,D)=>p.filter(i=>(i.order_date===D&&(i.tests=i.tests.filter(V=>V.name!==N)),i.tests.length>0)),Bt=async p=>{let N;M.getUseIndexDBStatus()||M.getModsStatus()?N=await ce("testResultIndicators",{whereClause:{test_type_id:p.concept_id}}):N=await vt.getTestIndicatorsWithID(p.concept_id);const D=[p,{validationStatus:"",data:{rowData:[{colData:[]}]}}];N.forEach(i=>{let V={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:""};if(i.name=="RBS"&&(V={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),i.name=="FBS"&&(V={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),i.name=="MRDT"||i.name=="Tuberculosis program"||i.name=="Vdrl"||i.name=="Hepatitis B"||i.name=="Lam"||i.name=="CrAg"||i.name=="CD4 count"||i.name=="Leukocytes"||i.name=="Protein"||i.name=="Nitrite"||i.name=="Urine Ketones"||i.name=="HIV test"){let $=[];(i.name=="MRDT"||i.name=="Vdrl"||i.name=="Hepatitis B"||i.name=="CrAg"||i.name=="Lam")&&($=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),i.name=="Tuberculosis program"&&($=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),i.name=="CD4 count"&&($=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(i.name=="Leukocytes"||i.name=="Protein"||i.name=="Nitrite"||i.name=="Ketones"||i.name=="Urine Ketones")&&($=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),i.name=="HIV test"&&($=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),V={inputHeader:i.name,icon:te.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:$,id:i.concept_id,idName:"district_id"}}D[1].data.rowData[0].colData.push(V)}),u.setLabResults(D),F.value=!0,_.value=[...m.value.labOrders.saved,...m.value.labOrders.unsaved]},Pt=async p=>{U.value=p,H.value=!0},ue=async()=>{if(!m.value.labOrders)return;_.value=[...m.value.labOrders.saved,...m.value.labOrders.unsaved];const p=Et(_.value),N=M.getProgramID()==32?[["FBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"FBS",specimen:"Blood"}),"'>Order Test</button> ")],["HbA1c","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"HbA1c",specimen:"Blood"}),"'>Order Test</button> ")],["RBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"RBS",specimen:"Blood"}),"'>Order Test</button> ")]]:[],D=N.filter($=>!p.some(T=>T[0]===$[0])),i=p.filter($=>N.some(T=>T[0]===$[0])),V=p.filter($=>!i.some(T=>T[0]===$[0]));P.value=[...i,...D,...V],Ot(),await We(),Ye.use(Ft)},Et=(p,N)=>(c.value=!1,p.length>0?p.flatMap(D=>D.tests.flatMap(i=>{var de,fe,ve,Ke;const V='<button class="btn btn-outline-success btn-sm result-btn" data-id=\''.concat(JSON.stringify(i),"'>Enter Result</button> "),$='<button class="btn btn-outline-secondary btn-sm attach-btn" data-id=\''.concat(JSON.stringify(i),"'>").concat(ke.attach2,"</button>"),T='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(i),"'>").concat(ke.view2,"</button> ");let ge=V+$;((de=i==null?void 0:i.result)==null?void 0:de.length)==1?ge=(i==null?void 0:i.result)!=null?((fe=i==null?void 0:i.result[0])==null?void 0:fe.value_modifier)+((ve=i==null?void 0:i.result[0])==null?void 0:ve.value):null:((Ke=i==null?void 0:i.result)==null?void 0:Ke.length)>1?(i==null||i.result,ge=T):D!=null&&D.accession_number&&(c.value=!0);let xe="";return D!=null&&D.accession_number?xe='<button class="btn btn-outline-secondary btn-sm" data-id=\''.concat(JSON.stringify(D),"'>").concat(ke.print2,"</button>"):ge="",[[i==null?void 0:i.name,D==null?void 0:D.specimen.name,(D==null?void 0:D.accession_number)||"",w.toStandardHisFormat(D==null?void 0:D.order_date),ge,xe+'\n                        <button class="btn btn-outline-danger btn-sm delete-btn" data-id=\''.concat(JSON.stringify(D),"'>").concat(ke.delete2,"</button>\n                        ")]]})):[]);return Me(async()=>{M.getProgramID()==14&&qe.value.buttons.push(),await We(),await ue(),Rt(()=>{const p=g.value.dt;p.columns.adjust().draw(),p.on("click",".result-btn",N=>{const D=N.target.getAttribute("data-id");Bt(JSON.parse(D))}),p.on("click",".view-btn",N=>{const D=N.target.getAttribute("data-id");Pt(JSON.parse(D))}),p.on("click",".delete-btn",N=>{const D=N.target.getAttribute("data-id");At(JSON.parse(D),N)}),p.on("click",".order-btn",N=>{const D=N.target.getAttribute("data-id");kt(JSON.parse(D))})}),_.value=t.propOrders,Te.value=new sn(m.value.patientID),O.value=await M.getUserRoles()}),ye(()=>a,async()=>{await ue()},{deep:!0}),ye(()=>m.value,async()=>{await ue()},{deep:!0}),(p,N)=>(I(),L("div",Rn,[S("div",Fn,[o(A(Ye),{ref_key:"dataTable",ref:g,options:qe.value,data:P.value,class:"display nowrap modern-table",width:"100%"},{default:l(()=>[S("thead",null,[S("tr",null,[(I(!0),L(re,null,Ie(B.value,D=>(I(),L("th",{key:D},x(D),1))),128))])])]),_:1},8,["options","data"])]),o($n,{popoverOpen:H.value,content:U.value,onCloseModal:N[0]||(N[0]=D=>H.value=!1)},null,8,["popoverOpen","content"]),o(Ln,{popoverOpen:F.value,onSaved:Ct,onCloseModal:N[1]||(N[1]=D=>F.value=!1)},null,8,["popoverOpen"])]))}}),Un=j(Hn,[["__scopeId","data-v-a0d68626"]]),Vn=z({data:()=>({userRole:"",ready:!1,userRoleSettings:{}}),watch:{$route:{async handler(e){this.userRole=M.getUserRoles();const t=M.getProgramID(),n=M.getProgramName();this.userRole=="Lab"&&t==14&&(this.userRoleSettings={url:"home",btnName:"Back to home",stepperTitle:"Laboratory"}),t==14&&this.userRole!="Lab"&&(this.userRoleSettings={url:"home",btnName:"Go to waiting list",stepperTitle:"Consultation Plan"}),t==12&&(this.userRoleSettings={url:"contact",btnName:"Back"}),n=="LABOUR AND DELIVERY PROGRAM"&&(this.userRoleSettings={url:"labour/labourHome",btnName:"Back to home"}),n=="PNC PROGRAM"&&(this.userRoleSettings={url:"pnc/home",btnName:"Back to home"})},immediate:!0,deep:!0}}}),et=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Skull",value:"Skull",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mastoid",value:"Mastoid",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"ParaSinuses",value:"ParaSinuses",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Optic Foramen",value:"PVD",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Orbits",value:"Orbits",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Nasal Bone",value:"Nasal Bone",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mandible",value:"Mandible",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TMJs",value:"TMJs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Zygomatic",value:"Zygomatic",checked:!1}]}}],Jn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Neck",value:"Neck",checked:!1}]}}],zn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Chest",value:"Chest",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Heart",value:"Heart",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sternum",value:"Sternum",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ribs",value:"Ribs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SCJ",value:"SCJ",checked:!1}]}}],qn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Abdomen",value:"Abdomen",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"IVP",value:"IVP",checked:!1}]}}],Wn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Clavicle",value:"Clavicle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Shoulder",value:"Shoulder",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Scapula",value:"Scapula",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Humerus",value:"Humerus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Elbow",value:"Elbow",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Forearm",value:"Forearm",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Wrist",value:"Wrist",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hand",value:"Hand",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Phalanges",value:"Phalanges",checked:!1}]}}],Gn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"CSpine",value:"CSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TSpine",value:"TSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"LSpine",value:"LSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SSpine",value:"SSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Coccyx",value:"Coccyx",checked:!1}]}}],Kn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Pelvis",value:"Pelvis",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sacroillac Joints",value:"Sacroillac Joints",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hip",value:"Hip",checked:!1}]}}],Yn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Femur",value:"Femur",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Knee",value:"Knee",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Patella",value:"Patella",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Leg",value:"Leg",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ankle",value:"Ankle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Calcaneus",value:"Calcaneus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Foot",value:"Foot",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Toe",value:"Toe",checked:!1}]}}],jn=Ee("RadiologyStore",{state:()=>({head:[...et],neck:[...Jn],chest:[...zn],abdomen:[...qn],upper_extremity:[...Wn],spine:[...Gn],pelvis:[...Kn],lower_extremity:[...Yn]}),actions:{setOPDDiagnosis(e){this.head=e},getInitial(){return[..._e.cloneDeep(et)]}}}),Qn=["innerHTML"],Xn={class:"scrollable-container"},Zn={key:0,class:"form-section"},ea={key:1,class:"form-section"},ta={key:2,class:"form-section"},na={key:3,class:"form-section"},aa={key:4,class:"form-section"},sa={key:5,class:"form-section"},oa={key:6,class:"form-section"},ia={key:7,class:"form-section"},ra=z({__name:"RadiologyInvestigation",setup(e){const t=jn(),{head:n,neck:a,chest:s,abdomen:u,upper_extremity:r,spine:d,pelvis:m,lower_extremity:h}=G(t),y=k(te),f=k([]),v=(C,g,P)=>{document.querySelectorAll("#".concat(C," path")).forEach(c=>{c.classList.toggle("white-fill")}),document.querySelectorAll("#".concat(g," line")).forEach(c=>{c.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(g," rect")).forEach(c=>{c.classList.toggle("bright-green-fill"),c.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(g," path")).forEach(c=>{c.classList.toggle("dark-green-fill")}),document.querySelectorAll("#".concat(g," circle")).forEach(c=>{c.classList.toggle("bright-green-fill")});const B=f.value.findIndex(c=>c.id===P);B>=0?f.value.splice(B,1):f.value.unshift({id:P,active:!0})},R=()=>{const C=document.getElementById("SPINE");C.style.display==="none"||C.style.display==""?C.style.display="block":C.style.display="none",v("SPINE","SPINE_LABEL-2","spine")};return Me(()=>{const C=document.getElementById("HEAD");C&&C.addEventListener("click",()=>{v("HEAD","LABEL-6","head")});const g=document.getElementById("NECK");g&&g.addEventListener("click",()=>{v("NECK","LABEL-5","neck")});const P=document.getElementById("CHEST");P&&P.addEventListener("click",()=>{v("CHEST","LABEL-4","chest")});const B=document.getElementById("ABDOMEN_LABEL");B&&B.addEventListener("click",()=>{const H=document.getElementById("ABDOMEN-2");H.style.display==="none"||H.style.display==""?H.style.display="block":H.style.display="none",v("ABDOMEN","ABDOMEN_LABEL-2","abdomen")});const c=document.getElementById("UPPER_EXTRMITY");c&&c.addEventListener("click",()=>{v("UPPER_EXTRMITY","LABEL-3","upper_extremity")});const _=document.getElementById("SPINE"),O=document.getElementById("SPINE_LABEL"),E=document.getElementById("LOWER_SPINE_INACTIVE");_&&_.addEventListener("click",()=>{R()}),O&&O.addEventListener("click",()=>{R()}),E&&E.addEventListener("click",()=>{R()});const U=document.getElementById("PELVIS");U&&U.addEventListener("click",()=>{v("PELVIS","LABEL-2","pelvis")});const F=document.getElementById("LOWER_EXTREMITY");F&&F.addEventListener("click",()=>{v("LOWER_EXTREMITY","LABEL","lower_extremity")})}),(C,g)=>{const P=b("ion-col"),B=b("ion-row");return I(),ee(B,null,{default:l(()=>[o(P,{size:"7"},{default:l(()=>[S("div",{innerHTML:y.value.full_body_sk},null,8,Qn)]),_:1}),o(P,{size:"5",class:"form-column"},{default:l(()=>[S("div",Xn,[(I(!0),L(re,null,Ie(f.value,c=>(I(),L(re,null,[c.id==="head"?(I(),L("div",Zn,[g[0]||(g[0]=S("h6",null,"Body Part: Head",-1)),o(W,{contentData:A(n)},null,8,["contentData"])])):c.id==="neck"?(I(),L("div",ea,[g[1]||(g[1]=S("h6",null,"Body Part: Neck",-1)),o(W,{contentData:A(a)},null,8,["contentData"])])):c.id==="chest"?(I(),L("div",ta,[g[2]||(g[2]=S("h6",null,"Body Part: Chest",-1)),o(W,{contentData:A(s)},null,8,["contentData"])])):c.id==="abdomen"?(I(),L("div",na,[g[3]||(g[3]=S("h6",null,"Body Part: Abdomen",-1)),o(W,{contentData:A(u)},null,8,["contentData"])])):c.id==="upper_extremity"?(I(),L("div",aa,[g[4]||(g[4]=S("h6",null,"Body Part: Upper Extremity",-1)),o(W,{contentData:A(r)},null,8,["contentData"])])):c.id==="spine"?(I(),L("div",sa,[g[5]||(g[5]=S("h6",null,"Body Part: Spine",-1)),o(W,{contentData:A(d)},null,8,["contentData"])])):c.id==="pelvis"?(I(),L("div",oa,[g[6]||(g[6]=S("h6",null,"Body Part: Pelvis",-1)),o(W,{contentData:A(m)},null,8,["contentData"])])):c.id==="lower_extremity"?(I(),L("div",ia,[g[7]||(g[7]=S("h6",null,"Body Part: Lower Extremity",-1)),o(W,{contentData:A(h)},null,8,["contentData"])])):Z("",!0)],64))),256))])]),_:1})]),_:1})}}}),la=j(ra,[["__scopeId","data-v-5ab54fe8"]]),da=z({name:"Menu",mixins:[Vn],components:{IonContent:Se,IonHeader:Ce,IonItem:he,IonList:Be,IonMenu:Ae,IonTitle:be,IonToolbar:Pe,IonInput:ct,IonPopover:Ht,DashBox:bn,SelectionPopover:dn,BasicInputField:mt,BasicForm:W,List:ln,DynamicButton:Oe,LabOrdersList:Un,RadiologyInvestigation:la},data(){return{segmentContent:"Lab Investigations",iconsContent:te,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:Vt,pulseOutline:Ut}},computed:{...oe(Ue,["investigations"]),...oe(q,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var e;(e=this.patient)!=null&&e.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(e){this.segmentContent=e},async getTests(){let e;M.getUseIndexDBStatus()&&M.getModsStatus()?e=await ce("testTypes"):e=await me.getTestTypes(),K(this.investigations,"test","multiSelectData",e)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var t;if(!((t=this.patient)!=null&&t.labOrders))return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=await this.labOrders.filter(n=>w.toStandardHisFormat(w.sessionDate())===w.toStandardHisFormat(n.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),Ue().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return Ze(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(K(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(K(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){Ze(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(e,t){for(let n of t)for(let a of n.tests)if(a.name===e)return!0;return!1},async saveTest(){await new Sn().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await Y.getConceptID(this.inputFields[1].value.name,!0)}]),K(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(e){if(e.inputHeader=="Test"&&this.checkTest(),K(this.investigations,"specimen","alertsErrorMassage",""),e.inputHeader=="Test"&&e.value){let t;M.getUseIndexDBStatus()&&M.getModsStatus()?t=await ce("specimens"):t=await me.getSpecimens("",1e3),this.specimen=await Y.getConceptSet(e.value.name,"",{names:t.map(n=>n.name)}),this.specimen.length==1?(K(this.investigations,"specimen","value",this.specimen[0]),K(this.investigations,"specimen","disabled",!0)):(K(this.investigations,"specimen","value",""),K(this.investigations,"specimen","disabled",!1)),K(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(e){return await this.labOrders.filter(t=>t.name.toLowerCase().includes(e.toLowerCase()))},async filterSpecimen(e){var t;return(t=this.specimen[0])!=null&&t.name&&e?await this.specimen.filter(n=>n==null?void 0:n.name.toLowerCase().includes(e.toLowerCase())):[]},setTest(e){this.selectedText=e.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=e.name:this.investigations[0].data.rowData[0].colData[1].value=e.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),ca={class:"background"},ua={key:0},pa={key:1},ma={key:2},ha={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},ga={key:3},fa={class:"ion-padding",slot:"content"},va={key:4};function _a(e,t,n,a,s,u){const r=b("ion-label"),d=b("ion-segment-button"),m=b("ion-segment"),h=b("VisitsHistory"),y=b("LabOrdersList"),f=b("RadiologyInvestigation");return I(),L("div",ca,[o(m,{value:e.segmentContent,style:{"margin-top":"5px"}},{default:l(()=>[o(d,{value:"Lab Investigations",onClick:t[0]||(t[0]=v=>e.setSegmentContent("Lab Investigations"))},{default:l(()=>[o(r,null,{default:l(()=>[...t[3]||(t[3]=[J("Lab Investigations",-1)])]),_:1})]),_:1}),o(d,{value:"Radiology Investigation",onClick:t[1]||(t[1]=v=>e.setSegmentContent("Radiology Investigation"))},{default:l(()=>[o(r,null,{default:l(()=>[...t[4]||(t[4]=[J("Radiology Investigation",-1)])]),_:1})]),_:1}),o(d,{value:"Other Investigation",onClick:t[2]||(t[2]=v=>e.setSegmentContent("Other Investigation"))},{default:l(()=>[o(r,null,{default:l(()=>[...t[5]||(t[5]=[J("Other Investigation",-1)])]),_:1})]),_:1})]),_:1},8,["value"]),e.segmentContent=="Radiology Investigation"?(I(),L("div",ua,[o(h)])):Z("",!0),e.segmentContent=="Other Investigation"?(I(),L("div",pa)):Z("",!0),e.segmentContent=="Lab Investigations"?(I(),L("div",ma,[S("div",ha,[S("span",null,[o(y,{propOrders:e.labOrders},null,8,["propOrders"])])])])):Z("",!0),e.segmentContent=="Radiology Investigation"?(I(),L("div",ga,[S("div",fa,[o(f)])])):Z("",!0),e.segmentContent=="Other Investigation"?(I(),L("div",va)):Z("",!0)])}const ys=j(da,[["render",_a],["__scopeId","data-v-c2f65a77"]]),Dt=(e,t,n,a={})=>({drug_id:e,name:t,category:n,...a}),ya=Ee("OtherNCDMedicationsStore",{state:()=>({otherNCDMedications:[],selectedOtherNCDMedicationList:[]}),actions:{setSelectedNCDMedicationList(e){this.selectedOtherNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedOtherNCDMedicationList},addSearchedDrug(e){const t=Dt(e.drug_id,e.name,"Other",e);if(t.units=e.units,!this.otherNCDMedications.some(a=>a.drug_id===t.drug_id)){this.otherNCDMedications.unshift(t);const a={dosage:{morning:null,afternoon:null,evening:null},duration:null,...t};this.setSelectedNCDMedicationList(a)}},clearOtherNCDMedications(){this.otherNCDMedications=[],this.selectedOtherNCDMedicationList=[]}},persist:!0}),Q=Ee("NCDmedicationsStore",{state:()=>({medications:[],filteredMedications:[],selectedNCDMedicationList:[],frequency_selections:k({}),currentPatientID:""}),actions:{setMedications(e){this.medications=e,this.filteredMedications=e},setFilteredMedications(e){this.filteredMedications=e},initMedications(){},setSelectedNCDMedicationList(e){this.selectedNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedNCDMedicationList},clearMedicationDataStores(){this.medications=[],this.filteredMedications=[],this.selectedNCDMedicationList=[],this.frequency_selections=[]},setCurrentPatientID(e){this.currentPatientID=e}},persist:!0});function Ds(){try{const e=Q(),t=ya();e.medications=[...t.otherNCDMedications,...e.medications],e.medications=e.medications.reduce((n,a)=>(n.some(s=>s.drug_id===a.drug_id)||n.push(a),n),[]),e.selectedNCDMedicationList=[...t.selectedOtherNCDMedicationList,...e.selectedNCDMedicationList],e.filteredMedications=e.medications,le("Medication added successfully")}catch(e){}}const Da={name:"DiabetesMedication",ids:[337,336,280,410,729,263,812,265,264,240,266,726,728,223]},tt={name:"AntiHypertensivesMedication",ids:[]},ba={ids:[274,168,648,289,286,164,287,288,672,257,1233,671]},Sa={ids:[559,1236,1234,558,1235,1211,276,277,278,279]},Ca={ids:[556,653,557,652,943,1238,1240,1237,942,1239,946,1503,944,1504,945,1505]},Ia={ids:[116,85,117,1232,936,1364,937,1365,1366]};async function bt(e){const t=Q(),n=e.ids.map(async a=>{try{const s=await yt.getOfflineDrugById(a);if(s){const u=t.medications.findIndex(d=>d.drug_id===s.drug_id),r=Dt(s.drug_id,s.name,e.name,s);u!==-1?t.medications[u]=r:t.medications.push(r)}}catch(s){console.error("Error fetching drug ID ".concat(a,":"),s)}});return t.filteredMedications=t.medications,Promise.all(n)}async function bs(e){try{const t=await yt.getOfflineDrugById(e);return{drug_id:e,dosage:{morning:null,afternoon:null,evening:null},duration:null,...t}}catch(t){Ve("Error fetching drug details. Please try again."),console.error("Error fetching drug details:",t)}}function Ss(){return bt(Da)}function Cs(){return tt.ids=[...ba.ids,...Sa.ids,...Ca.ids,...Ia.ids],bt(tt)}function Ma(){Q().clearMedicationDataStores()}function Oa(e){Q().setCurrentPatientID(e)}function Is(e){Q().currentPatientID!=e&&(Ma(),Oa(e))}function Ms(){return Q().selectedNCDMedicationList.some(t=>{const{morning:n,afternoon:a,evening:s}=t.dosage,u=typeof n=="string"?Number(n):n,r=typeof a=="string"?Number(a):a,d=typeof s=="string"?Number(s):s;return typeof u=="number"&&u>0||typeof r=="number"&&r>0||typeof d=="number"&&d>0})}class ka extends ht{constructor(t,n){super(t,105,n)}}class wa extends ht{constructor(t,n){super(t,25,n)}static async get_____(t="",n=1,a=10){}}async function Os(e){var t,n,a;try{const s=q(),{patient:u}=G(s),r=JSON.parse(JSON.stringify(u.value));return(a=(n=(t=r.allergies)!=null?t:r.allergies={}).unsaved)!=null||(n.unsaved=[]),r.allergies.unsaved.push(...e),le("Allergies appended to patient record successfully"),r}catch(s){ne("Unable to save Allegies!")}}class ks{async onSubmitNotes(t,n,a){const s=new ka(t,n);await s.createEncounter(),await s.saveObservationList(a)}async onSubmitAllergies(t,n,a){try{const s=new wa(t,n);await s.createEncounter(),await s.saveObservationList(a),le("Allergies saved successfully")}catch(s){console.error("Error saving allergies:",s),ne("Failed to save allergies")}}}class ws{constructor(){X(this,"programID");X(this,"providerID");X(this,"patientID");X(this,"date");X(this,"demographics");X(this,"previousDrugPrescriptions",[]);X(this,"previousClinicalNotes");X(this,"previousDrugAllergies");const t=q();this.demographics=t.patient,this.patientID=this.demographics.patientID,this.date=Re.getSessionDate(),this.providerID=M.getUserID(),this.programID=Re.getProgramID(),this.previousClinicalNotes={},this.previousDrugAllergies={}}async getPatientEncounters(){const t=await this.getPatientVisitDates(),n=t.map(async s=>{const u=s.value,r=await cn.getEncounters(this.patientID,{date:u});await Promise.all(r.map(async d=>{var m;if(d.type.name=="NOTES"){const{observations:h}=d;_e.isEmpty(h)||h.forEach(y=>{if(y.concept_id=="2688"){const f=w.toStandardHisDisplayFormat(y.obs_datetime);_e.isEmpty(this.previousClinicalNotes.hasOwnProperty(f))&&(this.previousClinicalNotes[f]=[]),this.previousClinicalNotes[f].push({date:f,notes:y.value_text})}})}if(d.type.name=="TREATMENT"){const{observations:h}=d;if(!_e.isEmpty(h))for(const y in h){let f="<UNKNOWN CONCEPT>";const v=h[y];try{(m=v==null?void 0:v.concept)!=null&&m.concept_names?f=v.concept.concept_names[0].name:f=await Y.getConceptName(v.concept_id)}catch(g){console.error(v,g)}const R=await Re.resolvePrimaryValue(v),C=w.toStandardHisDisplayFormat(v.date_created);f=="Allergic"&&(this.previousDrugAllergies.hasOwnProperty(C)||(this.previousDrugAllergies[C]=[]),this.previousDrugAllergies[C].push({date:C,value:R}))}}}))});await Promise.all(n);const a=t.map(async s=>{const u=await gt.getOrderByPatient(this.patientID,{start_date:s.value});if(!_e.isEmpty(u)){const r=u.map(d=>({drugName:d.drug.name,value:w.toStandardHisTimeFormat(d.order.start_date),dose:d.dose,frequency:Cn(d.frequency),prescription:w.toStandardHisFormat(d.order.auto_expire_date),duration:Na(d.order.instructions),other:d}));this.previousDrugPrescriptions.push({prescriptionDate:w.toStandardHisDisplayFormat(s.value),previousPrescriptions:r})}});return await Promise.all(a),{previousDrugPrescriptions:this.previousDrugPrescriptions,previousClinicalNotes:this.previousClinicalNotes,previousDrugAllergies:this.previousDrugAllergies}}async getPatientVisitDates(){return(await ft.getPatientVisits(this.patientID,!1)).map(t=>({label:w.toStandardHisDisplayFormat(t),value:t,other:{isActive:t===un.getSessionDate()}}))}}function Na(e){const t=/(\d+)\s+days/i,n=e.match(t);return n&&n.length>1?parseInt(n[1]):null}async function Ns(){const e=q(),{patient:t}=G(e),n=t.value,a=[8809,903,6410,6409];let s;M.getModsStatus()||M.getUseIndexDBStatus()?s=await ce("diagnosis",{likeClause:"",currentPage:1,itemsPerPage:2e3}).then(f=>f.records):s=await M.getJson("diagnosis",{id:7409,page_size:2e3});const u=s.filter(f=>a.includes(f.concept_id));u.push({concept_id:8809,concept_name_id:926,concept_name_type:"FULLY_SPECIFIED",creator:1,date_created:"2004-06-25T00:00:00.000+02:00",date_voided:null,id:72,locale:"en",locale_preferred:0,name:"Hypertension",uuid:"b99faa1e-8d80-11d8-abbb-0024217bb78e",void_reason:null,voided:0,voided_by:null});const r=n.diagnosis.saved.map(f=>f.value_coded),d=n.diagnosis.unsaved.map(f=>f.value_coded),m=[...r,...d];return u.filter(f=>m.includes(f.concept_id)).map(f=>f.name)}const La=z({created(){},components:{IonItem:he,IonCol:Jt,IonLabel:De,IonIcon:He},data(){return{iconsContent:te,localMedicalDrugsList:[...this.$props._selectedMedicalDrugsList]}},props:{_selectedMedicalDrugsList:{type:Array,default:[]},show_actions_buttons:{type:Boolean,default:!0},highLightBackground:{type:String,default:"item-native"}},watch:{},methods:{highlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#006401"),this.highlightActionBtns(e)},undoHighlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#636363"),this.undohighlightActionBtns(e)},highlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="inline-block"},undohighlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="none"},asignLblID(e){return e+"_lbl"},asignSpanLblID(e){return e+"_spanlbl"},async removeItemAtIndex(e,t){await ut("Do you want to delete it?",t)&&this.$emit("remove-item",e)},editItemAtIndex(e){this.$emit("edit-item",e)},highLightBnd(e){if(e){if(e.highlightbackground!==void 0&&e.highlightbackground==!0)return this.$props.highLightBackground}else return!1}}}),Aa=["onMousemove","onMouseout"],Ba={class:"route-label"};function Pa(e,t,n,a,s,u){const r=b("ion-label"),d=b("ion-col"),m=b("ion-row"),h=b("ion-icon");return I(!0),L(re,null,Ie(e.localMedicalDrugsList,(y,f)=>(I(),L("div",{id:"df",class:"medication-item",key:f,onMousemove:v=>e.highlightItem(f),onMouseout:v=>e.undoHighlightItem(f)},[o(m,{class:"medication-header"},{default:l(()=>[o(d,{class:pe(["ion-text-wrap",e.highLightBnd(y)])},{default:l(()=>[o(r,{id:e.asignLblID(f),class:"medication-name"},{default:l(()=>[J(x(y.drugName),1)]),_:2},1032,["id"])]),_:2},1032,["class"])]),_:2},1024),o(m,{class:"medication-details"},{default:l(()=>[o(d,{size:"10",class:pe(["ion-text-wrap details-col",e.highLightBnd(y)])},{default:l(()=>[o(r,{class:"details-text"},{default:l(()=>[J(x(y.dose)+" / "+x(y.frequency)+" / daily / "+x(y.duration)+" / until "+x(y.prescription)+" ",1),S("span",Ba,x(y.route_name),1)]),_:2},1024)]),_:2},1032,["class"]),e.show_actions_buttons?(I(),ee(d,{key:0,class:pe([e.highLightBnd(y),"actions-col"]),size:"2"},{default:l(()=>[o(r,{class:pe(["action-button",e.asignSpanLblID(f)]),onClick:v=>e.editItemAtIndex(f)},{default:l(()=>[o(h,{icon:e.iconsContent.edit},null,8,["icon"])]),_:1},8,["class","onClick"]),o(r,{class:pe(["action-button",e.asignSpanLblID(f)]),onClick:v=>e.removeItemAtIndex(f,v)},{default:l(()=>[o(h,{icon:e.iconsContent.delete},null,8,["icon"])]),_:1},8,["class","onClick"])]),_:2},1032,["class"])):Z("",!0)]),_:2},1024)],40,Aa))),128)}const Ls=j(La,[["render",Pa],["__scopeId","data-v-01c693a3"]]),Ea={key:0,class:"custom-allergy-container"},$a={class:"button-group"},Ta=z({watch:{},name:"AllergiesComponent"}),xa=z({...Ta,setup(e){const t=pn(),n=q(),a=ie(()=>t.selectedMedicalAllergiesList),s=ie(()=>n.patient),u=ie(()=>t.medicalAllergiesList),r=k(g(8,"item-")),d=k(""),m=k(!1),h=[{multi_Selection:!0,show_list_label:!0,unqueId:r.value,name_of_list:"Add/Remove allergies",placeHolder:"Search for an allergy",items:[],listUpdatedFN:v,listFilteredFN:()=>{},searchTextFN:R,use_internal_filter:!0,show_error:k(!1),error_message:"please select a User",disabled:k(!1)}],y=k(!1);Me(async()=>{f()});const f=()=>{t.current_patient.ID!=s.value.ID&&(t.clearSelectedMedicalAllergiesList(),t.setCurrentPatient(s.value))};function v(c){c.forEach(_=>{_.selected==!0&&_.name==="Other"&&(m.value=_.name==="Other"),_.selected==!1&&_.name==="Other"&&B()}),t.setSelectedMedicalAllergiesList(c),C()}async function R(c){const _=c,O=await Y.getConceptSet("OPD Medication",_);O.map(H=>({label:H.name,value:H.name,other:H}));const E=mn(_),F=hn(E,O).sort((H,Te)=>H.name.localeCompare(Te.name));t.setMedicalAllergiesList(F),C()}function C(){const c=u.value;a.value.forEach(O=>{let E=!1;c.forEach((U,F)=>{U.concept_id==O.concept_id&&O.selected===!0&&(c[F]=O,E=!0)}),!E&&O.selected===!0&&c.push(O)});const _=c.filter((O,E,U)=>E===U.findIndex(F=>(F==null?void 0:F.concept_id)===(O==null?void 0:O.concept_id)));t.setMedicalAllergiesList(_)}function g(c=8,_=""){const O="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let E=_;for(let U=0;U<c;U++)E+=O.charAt(Math.floor(Math.random()*O.length));return E+="-".concat(Date.now()),E}async function P(c){try{const _=c.trim();if(_){const O={name:_,selected:!0,concept_id:g(8,"12"),concept_name_id:g(8,"34")};t.setMedicalAllergiesList([...u.value,O]),t.setSelectedMedicalAllergiesList(O),m.value=!1,y.value=!0,d.value="";const E=t.findSelectedAllergyByName("Other");t.unselectOther(E)}}catch(_){console.error(_)}}const B=()=>{m.value=!1,d.value="",y.value=!1;const c=t.findSelectedAllergyByName("Other");c&&t.unselectOther(c)};return(c,_)=>(I(),ee(A(zt),null,{default:l(()=>[o(A(qt),null,{default:l(()=>[o(A(De),{class:"header-container"},{default:l(()=>[o(A(He),{icon:A(Wt),class:"allergy-icon"},null,8,["icon"]),_[3]||(_[3]=S("span",{style:{"font-size":"16px","font-weight":"600"}}," Allergies (Medication, Healthcare items, Environment and Food) ",-1))]),_:1})]),_:1}),o(A(Gt),null,{default:l(()=>[o(gn,{multiSelection:h[0].multi_Selection,show_label:h[0].show_list_label,uniqueId:h[0].unqueId,name_of_list:h[0].name_of_list,choose_place_holder:h[0].placeHolder,"items_-list":u.value,use_internal_filter:h[0].use_internal_filter,disabled:h[0].disabled.value,onItemListUpDated:h[0].listUpdatedFN,onItemListFiltered:h[0].listFilteredFN,onItemSearchText:h[0].searchTextFN},null,8,["multiSelection","show_label","uniqueId","name_of_list","choose_place_holder","items_-list","use_internal_filter","disabled","onItemListUpDated","onItemListFiltered","onItemSearchText"]),m.value?(I(),L("div",Ea,[o(A(ct),{modelValue:d.value,"onUpdate:modelValue":_[0]||(_[0]=O=>d.value=O),placeholder:"Please specify the allergy",fill:"outline",class:"custom-input"},null,8,["modelValue"]),S("div",$a,[o(A(Ne),{onClick:_[1]||(_[1]=O=>P(d.value)),class:"addCustomAllergyBtn"},{default:l(()=>[..._[4]||(_[4]=[J(" Add Allergy ",-1)])]),_:1}),o(A(Ne),{onClick:_[2]||(_[2]=O=>B()),fill:"clear",class:"cancelBtn"},{default:l(()=>[o(A(He),{icon:A(Kt),slot:"icon-only"},null,8,["icon"])]),_:1})])])):Z("",!0)]),_:1})]),_:1}))}}),As=j(xa,[["__scopeId","data-v-4de36202"]]);async function Bs(){var e,t,n;try{const a=q(),{patient:s}=G(a),u=Fa(),r=JSON.parse(JSON.stringify(s.value));if(u.length>0){(n=(t=(e=r.MedicationOrder)!=null?e:r.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const d=r.MedicationOrder.unsaved.findIndex(h=>h.NCD_Drug_Orders);if(d>=0)r.MedicationOrder.unsaved[d].NCD_Drug_Orders=[...r.MedicationOrder.unsaved[d].NCD_Drug_Orders,...u];else{const h={NCD_Drug_Orders:u};r.MedicationOrder.unsaved.push(h)}return Q().clearMedicationDataStores(),le("Drug order(s) has been created"),r}else ne("Unable to create drug orders!")}catch(a){ne("Unable to create drug orders!")}}function nt(){try{const e=new Date(M.getSessionDate()),n=$e().selectedMedicalDrugsList;let a=0;if(n.forEach(h=>{const y=parseInt(h.duration,10);!isNaN(y)&&y>a&&(a=y)}),a<=0)return{date:null,formattedDate:null};const s=new Date(e);s.setDate(e.getDate()+a);const u=String(s.getDate()).padStart(2,"0"),r=String(s.getMonth()+1).padStart(2,"0"),d=s.getFullYear(),m="".concat(u,"/").concat(r,"/").concat(d);return{date:s,formattedDate:m}}catch(e){return console.error("Error calculating OPD medication run out date:",e),{date:null,formattedDate:null}}}function Ra(){try{const e=new Date(M.getSessionDate()),n=Q().selectedNCDMedicationList;let a=0;if(n.forEach(h=>{const y=parseInt(h.duration,10);!isNaN(y)&&y>a&&(a=y)}),a<=0)return{date:null,formattedDate:null};const s=new Date(e);s.setDate(e.getDate()+a);const u=String(s.getDate()).padStart(2,"0"),r=String(s.getMonth()+1).padStart(2,"0"),d=s.getFullYear(),m="".concat(u,"/").concat(r,"/").concat(d);return{date:s,formattedDate:m}}catch(e){return console.error("Error calculating medication run out date:",e),{date:null,formattedDate:null}}}const Fa=()=>{const e=Q();return e.selectedNCDMedicationList.map(t=>{t.frequency=e.frequency_selections[t.drug_id]||"",t.totalDosage=Object.values(t.dosage).reduce((s,u)=>s+Number(u),0);const n=_t.getSessionDate(),a=Va(t.drug_id);return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.totalDosage=="Unknown"?0:t.totalDosage*(a==null?void 0:a.value)||0,start_date:n,auto_expire_date:St(n,t.duration),units:t.units,instructions:"".concat(t.name," ").concat(t.totalDosage," ").concat(t.units," ").concat((a==null?void 0:a.code)||""," for ").concat(t.duration," days"),dose:Ha(t),frequency:(a==null?void 0:a.code)||""}})},Ha=e=>e.dose_strength!=null&&e.dose_strength?Math.trunc(e.dose_strength):1;async function Ps(){var e,t,n;try{const a=q(),{patient:s}=G(a),u=Ua(),r=JSON.parse(JSON.stringify(s.value));if(u.length>0){(n=(t=(e=r.MedicationOrder)!=null?e:r.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const d=r.MedicationOrder.unsaved.findIndex(h=>h.NCD_Drug_Orders);if(d>=0)r.MedicationOrder.unsaved[d].NCD_Drug_Orders=[...r.MedicationOrder.unsaved[d].NCD_Drug_Orders,...u];else{const h={NCD_Drug_Orders:u};r.MedicationOrder.unsaved.push(h)}return $e().clearSelectedMedicalDrugsList(),le("Drug order(s) has been created"),r}else ne("Unable to create drug orders!")}catch(a){ne("Unable to create drug orders!")}}const Ua=()=>$e().selectedMedicalDrugsList.map(t=>{const n=_t.getSessionDate(),a=se.find(s=>s.label===t.frequency)||{};return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.dose=="Unknown"?0:t.dose*(a==null?void 0:a.value)||0,start_date:n,auto_expire_date:St(n,t.duration),units:t.units,instructions:"".concat(t.drugName,": ").concat(t.dose," ").concat(t.units," ").concat((a==null?void 0:a.code)||""," for ").concat(t.duration," days"),dose:t.dose,frequency:(a==null?void 0:a.code)||""}}),Va=e=>{const n=Q().selectedNCDMedicationList.find(s=>s.drug_id===e);if(!n||!n.dosage)return null;switch(["morning","afternoon","evening"].reduce((s,u)=>s+(n.dosage[u]?1:0),0)){case 1:return n.dosage.morning?se.find(s=>s.code==="QAM"):n.dosage.afternoon?se.find(s=>s.code==="QNOON"):n.dosage.evening?se.find(s=>s.code==="QPM"):se.find(s=>s.code==="OD");case 2:return se.find(s=>s.code==="BD");case 3:return se.find(s=>s.code==="TDS");default:return se.find(s=>s.code==="Unknown")}},St=(e,t)=>{const n=new Date(e);return n.setDate(n.getDate()+parseInt(t)),w.toStandardHisFormat(n)},Ja=()=>$e().nonPharmalogicalTherapyAndOtherNotes,za=Ee("nonPharmaTherapyStore",{state:()=>({items:[{id:"wound-dressing",label:"Wound dressing",checked:!1},{id:"patient-education",label:"Patient education",checked:!1},{id:"counseling",label:"Counseling",checked:!1},{id:"minor-surgery",label:"Minor Surgery",checked:!1}],current_patient:{}}),actions:{async saveNonPharmaTherapyPatientData(){const e=fn(),t=[];this.items.forEach(a=>{a.checked==!0&&t.push({concept_id:11023,value_text:a.label,obs_datetime:w.toStandardHisFormat(M.getSessionDate()),location_id:e.facilityLocation.code})});const n=Ja();n&&t.push({concept_id:2592,obs_datetime:M.getSessionDate(),value_text:n,location_id:e.facilityLocation.code});try{if(t.length>0)return this.clearSelectednonPharmaTherapyStore(),le("Non Pharma Therapy staged successfully!"),await qa(t)}catch(a){ne("Unable to update Non Pharma Therapy!")}},clearSelectednonPharmaTherapyStore(){this.items.forEach(e=>{e.checked=!1})},setCurrentPatient(e){this.current_patient=e}},persist:!0});async function qa(e){var t,n,a;try{const s=q(),{patient:u}=G(s),r=JSON.parse(JSON.stringify(u.value));return(a=(n=(t=r.notes)!=null?t:r.notes={}).unsaved)!=null||(n.unsaved=[]),r.notes.unsaved.push(...e),r}catch(s){ne("Unable to create non pharmalogical notes!")}}const Wa={class:"checklist-container"},Ga=z({watch:{},name:"xxxComponent"}),Ka=z({...Ga,setup(e){const t=q(),n=ie(()=>t.patient),a=za(),s=a.items;Me(async()=>{u()});const u=()=>{a.current_patient.ID!=n.value.ID&&(a.clearSelectednonPharmaTherapyStore(),a.setCurrentPatient(n.value))};return ye(()=>n.value,async r=>{}),(r,d)=>(I(),L("div",Wa,[(I(!0),L(re,null,Ie(A(s),m=>(I(),ee(A(he),{key:m.id,class:"no-border"},{default:l(()=>[o(A(Yt),{id:m.id,modelValue:m.checked,"onUpdate:modelValue":h=>m.checked=h,slot:"start"},null,8,["id","modelValue","onUpdate:modelValue"]),o(A(De),{style:{"font-size":"16px","font-weight":"600"}},{default:l(()=>[J(x(m.label),1)]),_:2},1024)]),_:2},1024))),128))]))}}),Es=j(Ka,[["__scopeId","data-v-371e920f"]]),Ya=z({components:{IonContent:Se,IonHeader:Ce,IonItem:he,IonList:Be,IonMenu:Ae,IonTitle:be,IonToolbar:Pe,BasicInputField:mt,IonDatetime:Qt,IonBadge:jt,DateInputField:Mn,DynamicButton:Oe},setup(){const e=Fe(),t=k(0),n=ie(()=>e.getDisabledDates()),a=ie(()=>e.getAssignedAppointments()),s=k();return{disabledDates:n,datesCounts:a,appointment_count:t,calendarOutline:Xt,inputPRDate:s}},data(){return ae(),Xe(),{iconsContent:te,date:new Date(M.getSessionDate()),tomorrow:new Date(M.getSessionDate()).getDate()+1,appointment:"",drugRunoutDate:"",nextAppointmentDate:"",minDate:new Date(M.getSessionDate())}},computed:{...oe(ae,["nextAppointment","appointmentCountsCache","currentSelectedNextAppointmentDate"]),...oe(Fe,["maximumNumberOfDaysForEachDay","assignedAppointmentsDates"]),...oe(q,["patient"]),...oe(Xe,["activeProgram"]),calendarDate(){const e=ae();return e.currentSelectedNextAppointmentDate?w.toStandardHisDisplayFormat(e.currentSelectedNextAppointmentDate):""},runOutDate(){var e;return((e=this.activeProgram)==null?void 0:e.program_id)===14?nt():Ra()}},watch:{calendarDate:{handler(){this.updateNextAppointment()},deep:!0},"$service.sessionDate":{handler(){this.updateMinDate()},immediate:!0},"patient.ID":{async handler(e,t){e!==t&&(this.cleanCurrentNextAppointmentDate(),this.checkIfSamePatientInContext())}}},async mounted(){this.checkIfSamePatientInContext(),await this.getAppointmentMents(this.runOutDate.date),await yn().loadGlobalProperty(),this.validateAppointmentCountsCache(),await this.preloadAppointmentCounts(),Dn();const e=M.getUserID(),t=new ft;this.appointment=new we(t.getID(),e),this.nextAppointmentDate=this.appointment.date,this.supposedRunOutDate(),window.addEventListener("storage",this.handleStorageChange),nt()},beforeUnmount(){window.removeEventListener("storage",this.handleStorageChange)},methods:{handleStorageChange(e){e.key==="sessionDate"&&this.updateMinDate()},updateMinDate(){this.date=new Date(M.getSessionDate()),this.minDate=new Date(M.getSessionDate())},updateNextAppointment(){ae().setNextAppointment(this.calendarDate)},async handleDateUpdate(e){e&&(Fe().setsssignedAppointmentsDates(e,!0),this.calendarDate=w.toStandardHisDisplayFormat(e),await this.save(),await this.getAppointmentMents(e),await this.updateAppointmentCache(e),ae().setCurrentSelectedNextAppointmentDate(e,this.patient.ID))},async getAppointmentMents(e){if(_n().apiStatus)try{const n=await we.getDailyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(e));this.appointment_count=n.length}catch(n){}},getCounter(e){const t=w.toStandardHisFormat(e);return this.appointmentCountsCache[t]||""},async save(){if(this.assignedAppointmentsDates.length>0)try{const t=await new In().createOfflineAppointment()}catch(e){}},async openCornfirmModal(e){this.calendarDate=w.toStandardHisDisplayFormat(e),await this.getAppointmentMents(e),pt(vn,{class:"otherVitalsModal"},!0,{message:"Are you sure you want to add this Appointment?"},{cancel:s=>{},confirm:async s=>{s.detail==!0&&await this.handleDateUpdate(e)}})},async handleInput(e){this.inputPRDate=w.toStandardHisDisplayFormat(e),await this.openCornfirmModal(e)},async supposedRunOutDate(){await gt.getLastDrugsReceived(this.patient.patientID)},async preloadAppointmentCounts(){try{const e=new Date(M.getSessionDate());e.setDate(1);const t=new Date(M.getSessionDate());t.setMonth(t.getMonth()+2),t.setDate(0);try{const n=await we.getDailyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(t)),a=this.filterUniqueAppointments(n),s={};a.forEach(u=>{const r=new Date(u.appointment_date),d=w.toStandardHisFormat(r);s[d]||(s[d]=0),s[d]++}),Object.keys(s).forEach(u=>{this.appointmentCountsCache[u]=s[u]})}catch(n){console.error("Error fetching appointments for date range:",n)}}catch(e){console.error("Error in preload process:",e)}},filterUniqueAppointments(e){const t=new Map;return e.forEach(n=>{const a="".concat(n.given_name,"_").concat(n.family_name,"_").concat(n.birthdate,"_").concat(n.appointment_date);t.has(a)||t.set(a,n)}),Array.from(t.values())},async updateAppointmentCache(e){try{const t=w.toStandardHisFormat(e),n=await we.getDailyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(e));this.appointmentCountsCache[t]=n.length}catch(t){console.error("Error updating appointment cache:",t)}},validateAppointmentCountsCache(){ae().checkCurrentLocationIfInContext()},isRunOutDate(e){return!this.runOutDate||!this.runOutDate.date?!1:w.toStandardHisFormat(e)===w.toStandardHisFormat(this.runOutDate.date)},cleanCurrentNextAppointmentDate(){ae().cleanCurrentSelectedNextAppointmentDate()},checkIfSamePatientInContext(){const e=ae();e.current_patient.ID!=this.patient.ID&&(this.cleanCurrentNextAppointmentDate(),e.setCurrentPatient(this.patient))}}}),ja={class:"card_content"},Qa={class:"count-badge"},Xa={class:"dates_title"},Za={class:"sub_data"},es={class:"dates_title"},ts={class:"sub_data"},ns={class:"dates_title"},as={class:"sub_data"},ss={class:"dates_title"},os={class:"sub_data"};function is(e,t,n,a,s,u){const r=b("VueDatePicker"),d=b("ion-col"),m=b("DynamicButton"),h=b("ion-item"),y=b("ion-row"),f=b("DateInputField");return I(),L("div",ja,[o(y,null,{default:l(()=>[o(d,{"size-sm":"12","size-md":"12","size-lg":"12","size-xl":"8"},{default:l(()=>[o(r,{class:"calender",onDateUpdate:e.openCornfirmModal,inline:"","auto-apply":"","enable-time-picker":!1,"disabled-dates":e.disabledDates,"min-date":e.minDate,modelValue:e.runOutDate.date,"onUpdate:modelValue":t[0]||(t[0]=v=>e.runOutDate.date=v)},{day:l(({day:v,date:R})=>[(I(),L("p",{key:0,class:pe({"run-out-date":e.isRunOutDate(R)}),style:{"font-weight":"600","font-size":"20px"}},[S("span",null,[J(x(v),1),S("sup",Qa,x(e.getCounter(R)),1)])],2))]),_:1},8,["onDateUpdate","disabled-dates","min-date","modelValue"])]),_:1}),o(d,null,{default:l(()=>[o(h,null,{default:l(()=>[S("div",Xa,[t[3]||(t[3]=S("div",null,[J("Suggested Next Appointment Date "),S("span",{style:{"font-size":"16px"}},"(Medication run out date)")],-1)),S("div",Za,[J(x(e.runOutDate.formattedDate||"No run out date available")+" ",1),e.runOutDate.formattedDate?(I(),ee(m,{key:0,onClick:t[1]||(t[1]=v=>e.handleDateUpdate(e.runOutDate.date)),name:"Set Next Appt.",fill:"solid",iconSlot:"icon-only",style:{float:"right"}})):Z("",!0)])])]),_:1}),o(h,null,{default:l(()=>[S("div",es,[t[4]||(t[4]=S("div",null,"User set appointment date",-1)),S("div",ts,x(e.calendarDate),1)])]),_:1}),o(h,null,{default:l(()=>[S("div",ns,[t[5]||(t[5]=S("div",null,"Appointments",-1)),S("div",as,x(e.appointment_count),1)])]),_:1}),o(h,null,{default:l(()=>[S("div",ss,[t[6]||(t[6]=S("div",null,"Appointment limit (per/day)",-1)),S("div",os,x(e.appointment_count)+"/"+x(e.maximumNumberOfDaysForEachDay),1)])]),_:1})]),_:1})]),_:1}),o(y,null,{default:l(()=>[o(d,{size:"4"},{default:l(()=>[o(f,{inputHeader:"Preferred Next Appointment Date",bold:"600",fontSize:"17px",placeholderFontSize:"17px",placeholderFontWeight:"600",unit:"",icon:e.calendarOutline,placeholder:"press to select date",iconRight:"",inputWidth:"100%",inputValue:e.inputPRDate,eventType:"",minDate:e.minDate,maxDate:"",disabled:!1,"onUpdate:rawDateValue":t[2]||(t[2]=v=>e.handleInput(v))},null,8,["icon","inputValue","minDate"])]),_:1})]),_:1})])}const $s=j(Ya,[["render",is],["__scopeId","data-v-6a0cef53"]]);export{As as A,Ls as D,ys as I,Ms as M,$s as N,ws as P,ks as T,Vn as _,za as a,Ps as b,Bs as c,Is as d,Oa as e,Cs as f,Ns as g,Ss as h,Ma as i,ya as j,bs as k,Ds as l,Es as m,Os as s,Q as u};
