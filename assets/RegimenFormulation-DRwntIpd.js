import{g as c,z as r,R as u,p as d,d as R,e as g,l as n,a as b}from"./index-BPfh_vO4.js";import{R as f}from"./regimen_report_service-CcNGyBAZ.js";import{R as h,b as _}from"./regimens-C9nA2WnN.js";import{d as w,r as i,c as v,y as D,f as F}from"./vendor-Ccrp_A9_.js";import"./lodash-Dt8AsbQm.js";import"./apexcharts-CzzWHAlz.js";import"./chartjs-DBBfutWb.js";import"./barcode-qrcode-reader-trFeU4NR.js";const C=w({__name:"RegimenFormulation",setup(y){const a=i("-"),o=i([]),s=[c("patient_id")],l=[{path:"arv_number",label:"ARV Number",preSort:d,initialSort:!0},{path:"gender",label:"Gender",formatter:R},{path:"birthdate",label:"Date of Birth",formatter:g},{path:"regimen",label:"Reg. name"},{path:"drugs",label:"Formulation"}],p=v(()=>[{id:"regimen",label:"Select Regimen",type:"select",options:r(h)},{id:"formulation",label:"Formulation",type:"select",options:r(_)}]);async function m(t){await n.show();try{const e=new f;e.setStartDate(t.dateRange.startDate),e.setEndDate(t.dateRange.endDate),e.setOccupation(t.occupation),a.value=e.getDateIntervalPeriod(),o.value=await e.getRegimenFormulationReport(t.regimen,t.formulation)}catch(e){b("Unable to load report data"),console.error(e)}await n.hide()}return(t,e)=>(F(),D(u,{title:"Regimen Formulation: Patient Level Clinic Report","report-type":"Clinic",columns:l,rows:o.value,period:a.value,"row-action-buttons":s,"custom-filters":p.value,"use-date-range-filter":"",onGenerate:m},null,8,["rows","period","custom-filters"]))}});export{C as default};
