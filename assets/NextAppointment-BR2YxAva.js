var rt=Object.defineProperty;var lt=(e,t,n)=>t in e?rt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var q=(e,t,n)=>lt(e,typeof t!="symbol"?t+"":t,n);import{d as P,ao as T,V as He,ap as pe,an as Ue,D as me,ds as Ve,dz as ze,ak as he,G as ae,T as se,U as ge,ah as oe,S as ce,b8 as we,W as De,aR as Je,X as Ne,E as h,y as Y,f as y,z as d,l as i,k as _,B as w,A as N,e as M,F as te,L as fe,a$ as ie,cm as dt,r as B,c as ee,w as Ie,a as ye,u as O,I as Le,ag as ct,j as ut,cx as Be,cA as pt,a9 as qe,aa as We,R as be,m as W,a8 as mt,ab as Ge,aj as ht,p as le,aZ as gt,aY as ft,ay as vt,aW as _t,bw as Dt,br as yt,ae as bt,aP as St}from"./vendor-BVQaapOZ.js";import{D as re,aK as Ct,S,l as ne,H as C,aA as Q,C as Z,u as E,_ as H,au as Pe,i as G,av as Mt,bf as de,t as j,aH as V,bg as It,G as Ye,a9 as $e,a8 as Ot,k as Se,m as Oe,j as je,bh as kt,b8 as wt,b7 as Nt,aC as ke,b6 as Lt,B as Ke,be as At,y as U,aL as Xe,ab as Ce,bi as Bt,aN as Qe,P as Ze,aa as Pt,aI as $t,bj as Et,bk as Tt,an as Rt,O as xt,a3 as Ae,aR as K,A as ve,bl as Ft,d as Ht,as as Me,v as Ut,at as Vt,q as Ee}from"./index-CVTQpe0V.js";import{D as et}from"./DashBox-Bvp6TO4G.js";import{B as F}from"./BasicForm-DhiQUsV9.js";import{u as _e,P as tt,L as zt}from"./lab_order-BH-dgzp8.js";import{v as Te}from"./group_validation-B0jNTubI.js";import{l as ue}from"./lodash-Dt8AsbQm.js";import{g as Jt,a as nt,D as X}from"./drug_prescription_service-Br04PYWy.js";import{A as qt}from"./ncd_appointment_service-BcMNRR81.js";import{D as Wt}from"./DateInputField-Dx5wRN2D.js";import{D as at}from"./drug_service-BxiWuqaj.js";const Gt=P({components:{IonButtons:Je,IonButton:De,IonModal:we,IonHeader:ce,IonContent:oe,IonToolbar:ge,IonTitle:se,IonItem:ae,IonList:he,IonAvatar:ze,IonImg:Ve,IonLabel:me,IonPage:Ue,IonMenu:pe,BasicForm:F,IonFooter:He,DynamicButton:re},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{type:Object,default:{}},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},computed:{...T(E,["patient"]),...T(_e,["labResults"])},mounted(){},methods:{dismiss(){Ne.dismiss()},async saveResults(){const e=await this.buildResults();this.patient.labOrders.results=[{encounter_id:"",date:C.sessionDate(),measures:e,test_id:this.labResults[0].id}];let t=!1;for(let n=0;n<this.patient.labOrders.unsaved.length;n++)if(this.patient.labOrders.unsaved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.unsaved[n].tests&&this.patient.labOrders.unsaved[n].tests.length>0){this.patient.labOrders.unsaved[n].tests[0].result=e,t=!0;break}if(!t){for(let n=0;n<this.patient.labOrders.saved.length;n++)if(this.patient.labOrders.saved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.saved[n].tests&&this.patient.labOrders.saved[n].tests.length>0){this.patient.labOrders.saved[n].tests[0].result=e;break}}await Q(this.patient),Z("Saved successfully"),this.$emit("saved")},async buildResults(){let e=[];return await Promise.all(this.labResults[1].data.rowData[0].colData.map(async t=>{var s;let n;S.getUseIndexDBStatus()||S.getModsStatus()?n=await ne("testResultIndicators",{whereClause:{test_type_id:t.id}}):n=await tt.getTestIndicatorsWithID(t.id),e.push({indicator:{name:(s=n[0])==null?void 0:s.name,concept_id:t.id},value:t.value.name||t.value||"not done",value_modifier:"",value_type:"text"})})),e},async nav(e,t){const n=_e();t=="not_save"?(await Ct(),n.setLabResults(!1)):n.setLabResults(!0),this.dismiss(),this.$router.push(e)}}}),Yt={class:"modal_wrapper"},jt={class:"center text_12"};function Kt(e,t,n,s,a,r){const o=h("ion-title"),l=h("ion-button"),f=h("ion-buttons"),c=h("ion-toolbar"),m=h("ion-header"),p=h("basic-form"),v=h("ion-row"),A=h("ion-content"),D=h("DynamicButton"),g=h("ion-footer"),L=h("ion-modal");return y(),Y(L,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[2]||(t[2]=b=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:d(()=>[i(m,null,{default:d(()=>[i(c,null,{default:d(()=>[i(o,null,{default:d(()=>[_("b",null,"Enter lab results for ("+w(e.labResults[0].name)+") test",1)]),_:1}),i(f,{slot:"end"},{default:d(()=>[i(l,{onClick:t[0]||(t[0]=b=>e.$emit("closeModal"))},{default:d(()=>t[3]||(t[3]=[N("Close")])),_:1,__:[3]})]),_:1})]),_:1})]),_:1}),i(A,{class:"ion-padding"},{default:d(()=>[_("div",Yt,[_("div",jt,[i(v,null,{default:d(()=>[i(p,{contentData:e.labResults},null,8,["contentData"])]),_:1})])])]),_:1}),i(g,{translucent:!0},{default:d(()=>[i(c,null,{default:d(()=>[i(D,{onClick:t[1]||(t[1]=b=>e.saveResults()),name:"Save",fill:"clear",iconSlot:"icon-only",style:{float:"right"}})]),_:1})]),_:1})]),_:1},8,["is-open","keyboard-close"])}const Xt=H(Gt,[["render",Kt],["__scopeId","data-v-c688c775"]]),Qt=P({components:{IonButtons:Je,IonButton:De,IonModal:we,IonHeader:ce,IonContent:oe,IonToolbar:ge,IonTitle:se,IonItem:ae,IonList:he,IonAvatar:ze,IonImg:Ve,IonLabel:me,IonPage:Ue,IonMenu:pe,BasicForm:F,IonFooter:He,DynamicButton:re},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{default:[]},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},methods:{dismiss(){Ne.dismiss()},nav(e,t){this.dismiss(),this.$router.push(e)}}}),Zt={class:"modal_wrapper"},en={class:"center text_12"};function tn(e,t,n,s,a,r){const o=h("ion-title"),l=h("ion-button"),f=h("ion-buttons"),c=h("ion-toolbar"),m=h("ion-header"),p=h("ion-col"),v=h("ion-row"),A=h("ion-content"),D=h("ion-modal");return y(),Y(D,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[1]||(t[1]=g=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:d(()=>[i(m,null,{default:d(()=>[i(c,null,{default:d(()=>[i(o,null,{default:d(()=>[_("b",null,"Lab results for ("+w(e.content.name)+") test",1)]),_:1}),i(f,{slot:"end"},{default:d(()=>[i(l,{onClick:t[0]||(t[0]=g=>e.$emit("closeModal"))},{default:d(()=>t[2]||(t[2]=[N("Close")])),_:1,__:[2]})]),_:1})]),_:1})]),_:1}),i(A,{class:"ion-padding"},{default:d(()=>[_("div",Zt,[_("div",en,[i(v,null,{default:d(()=>[(y(!0),M(te,null,fe(e.content.result,(g,L)=>(y(),Y(p,{size:"4",key:L},{default:d(()=>[i(v,null,{default:d(()=>[i(p,{size:"8"},{default:d(()=>[N(w(g.indicator.name),1)]),_:2},1024),i(p,{class:"bold",size:"0.5"},{default:d(()=>t[3]||(t[3]=[N(":")])),_:1,__:[3]}),i(p,{class:"bold",size:"2"},{default:d(()=>[N(w(g.value),1)]),_:2},1024)]),_:2},1024)]),_:2},1024))),128))]),_:1})])])]),_:1})]),_:1},8,["is-open","keyboard-close"])}const nn=H(Qt,[["render",tn],["__scopeId","data-v-327a3d6c"]]),an=P({__name:"AddLabTestModal",setup(e){const t=E(),{patient:n}=ie(t);dt();const s=G,a=B(""),r=B(""),o=B(""),l=B(""),f=B(null),c=ee(()=>[{componentType:"multiSelectInputField",name:"test",header:"Test",options:l.value,grid:{s:"6"},icon:G.search,validation:Pe.required,onChange:D=>{a.value=D.name}},{componentType:"multiSelectInputField",name:"specimen",header:"Specimen",grid:{s:"6"},icon:G.search,validation:Pe.required,value:o.value.length==1?o.value[0]:"",options:o.value.length>1?o.value:[]}]);Ie(a,async D=>{if(D)try{o.value=await m(D)}catch(g){o.value=[]}else o.value=[]});const m=async D=>{let g;return S.getUseIndexDBStatus()||S.getModsStatus()?g=await ne("specimens"):g=await de.getSpecimens("",1e3),await V.getConceptSet(D,"",{names:g.map(b=>b.name)})};Ie(n,async()=>{r.value=[...n.value.labOrders.saved,...n.value.labOrders.unsaved]},{deep:!0});const p=()=>{Ne.dismiss()},v=async()=>S.getUseIndexDBStatus()||S.getModsStatus()?await ne("testTypes"):await de.getTestTypes(),A=async()=>{var I,k,$,R,x,J;if(f.value.validateForm()){j("Test not saved");return}if(!f.value){console.error("Form reference is not available");return}const D=f.value.getFormValues(),g=[{concept_id:D.test.concept_id,name:D.test.name,specimen:D.specimen.name,reason:"Routine",specimenConcept:await V.getConceptID(D.specimen.name,!0)}];let b=(await de.buildLabOrders("",g))[0];b.order_date=b.date,b.specimen.name=D.specimen.name,b.tests[0].name=D.test.name;const u=JSON.parse(JSON.stringify(n.value));($=(k=(I=u.labOrders)!=null?I:u.labOrders={}).unsaved)!=null||(k.unsaved=[]),(J=(x=(R=u.labOrders)!=null?R:u.labOrders={}).saved)!=null||(x.saved=[]),u.labOrders.unsaved.push(b),await Q(u),r.value=[...u.labOrders.saved,...u.labOrders.unsaved],p()};return ye(async()=>{l.value=await v()}),(D,g)=>{const L=h("ion-icon"),b=h("ion-col"),u=h("ion-row"),I=h("ion-footer");return y(),M(te,null,[i(O(ce),{style:{display:"flex","justify-content":"space-between"}},{default:d(()=>[i(O(se),{class:"modalTitle"},{default:d(()=>g[2]||(g[2]=[N("Add Lab Test")])),_:1,__:[2]}),i(L,{onClick:g[0]||(g[0]=k=>p()),style:{"padding-top":"10px","padding-right":"10px"},icon:O(s).cancel},null,8,["icon"])]),_:1}),i(O(oe),{fullscreen:!0,class:"ion-padding",style:{"--background":"#fff"}},{default:d(()=>[i(Mt,{formData:c.value,ref_key:"formRef",ref:f},null,8,["formData"])]),_:1}),i(I,{collapse:"fade",class:"ion-no-border"},{default:d(()=>[i(u,null,{default:d(()=>[i(b,null,{default:d(()=>[i(re,{onClick:g[1]||(g[1]=k=>A()),name:"Save",fill:"solid",style:{float:"right",margin:"2%",width:"130px"}})]),_:1})]),_:1})]),_:1})],64)}}}),sn=H(an,[["__scopeId","data-v-3e17251e"]]),on=P({name:"CheckInConfirmationModal",components:{IonModal:we,IonTitle:se,IonButton:De,IonContent:oe,IonIcon:Le,DynamicButton:re},props:{isOpen:{type:Boolean,required:!0,default:!1},closeModalFunc:{type:Function,required:!0},onYes:{type:Function,required:!0},onNo:{type:Function,required:!0},title:{type:String,required:!0}},methods:{closeCircleOutline(){return ct},closeModal(){this.closeModalFunc()}}}),rn={class:"modal-header"},ln={class:"modal-body"},dn={class:"modal-footer"};function cn(e,t,n,s,a,r){const o=h("ion-title"),l=h("ion-icon"),f=h("ion-button"),c=h("DynamicButton"),m=h("ion-content"),p=h("ion-modal");return y(),Y(p,{"is-open":e.isOpen,"show-backdrop":!0,onDidDismiss:e.closeModal},{default:d(()=>[i(m,{class:"modal-wrapper"},{default:d(()=>[_("div",rn,[i(o,{class:"modal-title"},{default:d(()=>[N(w(e.title),1)]),_:1}),i(f,{fill:"clear",class:"close-btn",onClick:e.closeModal},{default:d(()=>[i(l,{icon:e.closeCircleOutline()},null,8,["icon"])]),_:1},8,["onClick"])]),_("div",ln,[ut(e.$slots,"default",{},()=>[t[0]||(t[0]=N(" Sending the patient to the lab will pause this consultation. You’ll return to the waiting list while waiting for lab results this patient. "))],!0)]),_("div",dn,[i(f,{fill:"outline",color:"danger",class:"action-btn",onClick:e.onNo,style:{"--border-color":"#b42318"}},{default:d(()=>t[1]||(t[1]=[N(" Cancel ")])),_:1,__:[1]},8,["onClick"]),i(c,{name:"Confirm",color:"success",class:"action-btn confirm-btn",fill:"solid",onClick:e.onYes},null,8,["onClick"])])]),_:3})]),_:3},8,["is-open","onDidDismiss"])}const un=H(on,[["render",cn],["__scopeId","data-v-e8ab195c"]]),pn=P({name:"Menu",components:{CheckInConfirmationModal:It,IonContent:oe,IonHeader:ce,IonItem:ae,IonList:he,IonMenu:pe,IonTitle:se,IonToolbar:ge,DynamicButton:re,DashBox:et,LabModal:Xt,LabViewResultsModal:nn,SendToLabConfirmationModal:un,DataTable:Be},computed:{...T(E,["patient"]),...T(_e,["labResults"]),...T(ke,["investigations"]),...T(Se,["patientsWaitingForVitals","patientsWaitingForConsultation","patientsWaitingForLab","patientsWaitingForDispensation"]),hasEnterResults(){return this.listOrders.some(e=>e.btn&&e.btn.includes("enter_results"))}},props:{propOrders:{default:[]}},data(){return{tableData:[],options:{responsive:!0,select:!1,layout:{topStart:"buttons",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,buttons:[{text:" <b>+ Add other tests </b>",className:"add-test text-white",action:async()=>{await this.openEnterResultModal()}},{text:" <b>Send to Lab </b>",className:S.getProgramID()==14?"send-lab text-white":"display-none",action:async()=>{await this.openSendToLabModal()}}]},header:["Lab Test","Specimen","Accession Number","Order Date","Result","Action"],iconsContent:G,valueNumericArray:[],obsDatetime:[],graphIcon:Nt(["#006401"]),listIcon:wt(["#636363"]),displayGraph:!0,sendToLabModalOpen:!1,orders:[],userRoles:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],listOrders:[],listResults:[],hasPatientsWaitingForLab:!1,labResultsContent:"",listHeaderOrders:"",service:"",openModal:!1,openResultsModal:!1,series:[{name:"",data:[]}]}},setup(){return{checkmark:We,pulseOutline:qe}},async mounted(){S.getProgramID()==14&&this.options.buttons.push(),await this.updateInvestigationWizard(),await this.setListData(),this.$nextTick(()=>{const e=this.$refs.dataTable.dt;e.columns.adjust().draw(),e.on("click",".result-btn",t=>{const n=t.target.getAttribute("data-id");this.openResultsForm(JSON.parse(n))}),e.on("click",".view-btn",t=>{const n=t.target.getAttribute("data-id");this.viewLabOrder(JSON.parse(n))}),e.on("click",".delete-btn",t=>{const n=t.target.getAttribute("data-id");this.voidLabOrder(JSON.parse(n),t)}),e.on("click",".order-btn",t=>{const n=t.target.getAttribute("data-id");this.saveTest(JSON.parse(n))})}),this.orders=this.propOrders,this.service=new kt(this.patient.patientID),this.userRoles=await S.getUserRoles()},watch:{$route:{async handler(){await this.setListData()},deep:!0},patient:{async handler(){await this.setListData()},deep:!0}},methods:{async closeModal(){this.openModal=!1,await this.setListData()},async saveTest(e){const t=[{concept_id:await V.getConceptID(e.name,!0),name:e.name,specimen:e.specimen,reason:"Routine",specimenConcept:await V.getConceptID(e.specimen,!0)}];let s=(await de.buildLabOrders("",t))[0];s.order_date=s.date,s.specimen.name=await V.getConceptName(s.specimen.concept_id),s.tests[0].name=await V.getConceptName(s.tests[0].concept_id),this.patient.labOrders.unsaved.push(s),await Q(this.patient)},async openEnterResultModal(){await je(sn,{class:"lab-results-modal"},!0,{title:"name"}),await this.setListData()},async openSendToLabModal(){this.sendToLabModalOpen=!0},async handleSendToLab(){try{const e=await $e();if(!e){Oe("Location not found");return}await Se().refresh(e.code),this.$router.push("home"),Z("Patient sent to lab successfully")}catch(e){console.error("Error sending to lab:",e),Oe("Failed to send patient to lab")}finally{this.sendToLabModalOpen=!1}},toggleSendToLabModal(){this.sendToLabModalOpen=!this.sendToLabModalOpen},async fetchPatientLabStageData(){const e=await $e(),t=e?e.code:null;if(t){const n=await Ot.getPatientList("LAB",t);await Se().refresh(t),this.patient.patientID&&(this.hasPatientsWaitingForLab=n.some(s=>s.patient_id===this.patient.patientID))}},async updateInvestigationWizard(){var t,n,s,a,r;if(!((t=this.patient)!=null&&t.labOrders)||(this.orders=[...(s=(n=this.patient)==null?void 0:n.labOrders)==null?void 0:s.saved,...(r=(a=this.patient)==null?void 0:a.labOrders)==null?void 0:r.unsaved],!this.orders))return;const e=await this.orders.filter(o=>C.toStandardHisFormat(C.sessionDate())===C.toStandardHisFormat(o.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},dismiss(){this.sendToLabModalOpen=!1},async voidLabOrder(e,t){var s,a,r;if(await Ye("Do you want to delete ".concat(e.tests[0].name," ?"),t)){const o=JSON.parse(JSON.stringify(this.patient));o.labOrders.saved.some(c=>{var m,p;return c.order_date===e.order_date&&((m=c==null?void 0:c.tests[0])==null?void 0:m.name)==((p=e==null?void 0:e.tests[0])==null?void 0:p.name)})?(o.labOrders.saved=this.removeTestByNameAndDate(o.labOrders.saved,e.tests[0].name,e.order_date),(r=(a=(s=o.labOrders)!=null?s:o.labOrders={}).voided)!=null||(a.voided=[]),o.labOrders.voided.push({orderId:e.id,reason:"Mistake entry"})):o.labOrders.unsaved=this.removeTestByNameAndDate(o.labOrders.unsaved,e.tests[0].name,e.date),await Q(o)}await this.setListData()},removeTestByNameAndDate(e,t,n){return e.filter(s=>(s.order_date===n&&(s.tests=s.tests.filter(a=>a.name!==t)),s.tests.length>0))},async openResultsForm(e){let t;S.getUseIndexDBStatus()||S.getModsStatus()?t=await ne("testResultIndicators",{whereClause:{test_type_id:e.concept_id}}):t=await tt.getTestIndicatorsWithID(e.concept_id);const n=[e,{validationStatus:"",data:{rowData:[{colData:[]}]}}];t.forEach(a=>{let r={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:""};if(a.name=="RBS"&&(r={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),a.name=="FBS"&&(r={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),a.name=="MRDT"||a.name=="Tuberculosis program"||a.name=="Vdrl"||a.name=="Hepatitis B"||a.name=="Lam"||a.name=="CrAg"||a.name=="CD4 count"||a.name=="Leukocytes"||a.name=="Protein"||a.name=="Nitrite"||a.name=="Urine Ketones"||a.name=="HIV test"){let o=[];(a.name=="MRDT"||a.name=="Vdrl"||a.name=="Hepatitis B"||a.name=="CrAg"||a.name=="Lam")&&(o=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),a.name=="Tuberculosis program"&&(o=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),a.name=="CD4 count"&&(o=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(a.name=="Leukocytes"||a.name=="Protein"||a.name=="Nitrite"||a.name=="Ketones"||a.name=="Urine Ketones")&&(o=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),a.name=="HIV test"&&(o=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),r={inputHeader:a.name,icon:G.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:o,id:a.concept_id,idName:"district_id"}}n[1].data.rowData[0].colData.push(r)}),_e().setLabResults(n),this.openModal=!0,this.orders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async viewLabOrder(e){this.labResultsContent=e,this.openResultsModal=!0},async setListData(){if(!this.patient.labOrders)return;this.orders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=this.generateListItems(this.orders,"order"),t=[["FBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"FBS",specimen:"Blood"}),"'>Order Test</button> ")],["HbA1c","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"HbA1c",specimen:"Blood"}),"'>Order Test</button> ")],["RBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"RBS",specimen:"Blood"}),"'>Order Test</button> ")]],n=t.filter(r=>!e.some(o=>o[0]===r[0])),s=e.filter(r=>t.some(o=>o[0]===r[0])),a=e.filter(r=>!s.some(o=>o[0]===r[0]));this.tableData=[...s,...n,...a],await this.updateInvestigationWizard(),Be.use(pt)},generateListItems(e,t){return e.length>0?e.flatMap(n=>n.tests.flatMap(s=>{var c,m,p,v;const a='<button class="btn btn-outline-success btn-sm result-btn" data-id=\''.concat(JSON.stringify(s),"'>Enter Result</button> "),r='<button class="btn btn-outline-secondary btn-sm attach-btn" data-id=\''.concat(JSON.stringify(s),"'>").concat(this.iconsContent.attach2,"</button>"),o='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(s),"'>").concat(this.iconsContent.view2,"</button> ");let l=a+r;((c=s==null?void 0:s.result)==null?void 0:c.length)==1?l=(s==null?void 0:s.result)!=null?((m=s==null?void 0:s.result[0])==null?void 0:m.value_modifier)+((p=s==null?void 0:s.result[0])==null?void 0:p.value):null:((v=s==null?void 0:s.result)==null?void 0:v.length)>1&&(s==null||s.result,l=o);let f="";return n!=null&&n.accession_number?f='<button class="btn btn-outline-secondary btn-sm" data-id=\''.concat(JSON.stringify(n),"'>").concat(this.iconsContent.print2,"</button>"):l="",[[s==null?void 0:s.name,n==null?void 0:n.specimen.name,(n==null?void 0:n.accession_number)||"",C.toStandardHisFormat(n==null?void 0:n.order_date),l,f+'\n                                <button class="btn btn-outline-danger btn-sm delete-btn" data-id=\''.concat(JSON.stringify(n),"'>").concat(this.iconsContent.delete2,"</button>\n                                ")]]})):[]}}}),mn={class:"container"},hn={class:"table-responsive"};function gn(e,t,n,s,a,r){const o=h("DataTable"),l=h("LabViewResultsModal"),f=h("LabModal"),c=h("SendToLabConfirmationModal");return y(),M("div",mn,[_("div",hn,[i(o,{ref:"dataTable",options:e.options,data:e.tableData,class:"display nowrap modern-table",width:"100%"},{default:d(()=>[_("thead",null,[_("tr",null,[(y(!0),M(te,null,fe(e.header,m=>(y(),M("th",{key:m},w(m),1))),128))])])]),_:1},8,["options","data"])]),i(l,{popoverOpen:e.openResultsModal,content:e.labResultsContent,onCloseModal:t[0]||(t[0]=m=>e.openResultsModal=!1)},null,8,["popoverOpen","content"]),i(f,{popoverOpen:e.openModal,onSaved:e.closeModal,onCloseModal:t[1]||(t[1]=m=>e.openModal=!1)},null,8,["popoverOpen","onSaved"]),i(c,{isOpen:e.sendToLabModalOpen,title:"Send Patient to Lab",closeModalFunc:e.dismiss,onYes:e.handleSendToLab,onNo:e.dismiss},null,8,["isOpen","closeModalFunc","onYes","onNo"])])}const fn=H(pn,[["render",gn],["__scopeId","data-v-87ee77b9"]]),vn=P({data:()=>({userRole:"",ready:!1,userRoleSettings:{}}),watch:{$route:{async handler(e){this.userRole=S.getUserRoles();const t=S.getProgramID(),n=S.getProgramName();this.userRole=="Lab"&&t==14&&(this.userRoleSettings={url:"home",btnName:"Back to home",stepperTitle:"Laboratory"}),t==14&&this.userRole!="Lab"&&(this.userRoleSettings={url:"home",btnName:"Go to waiting list",stepperTitle:"Consultation Plan"}),t==12&&(this.userRoleSettings={url:"contact",btnName:"Back"}),n=="LABOUR AND DELIVERY PROGRAM"&&(this.userRoleSettings={url:"labour/labourHome",btnName:"Back to home"}),n=="PNC PROGRAM"&&(this.userRoleSettings={url:"pnc/home",btnName:"Back to home"})},immediate:!0,deep:!0}}}),Re=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Skull",value:"Skull",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mastoid",value:"Mastoid",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"ParaSinuses",value:"ParaSinuses",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Optic Foramen",value:"PVD",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Orbits",value:"Orbits",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Nasal Bone",value:"Nasal Bone",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mandible",value:"Mandible",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TMJs",value:"TMJs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Zygomatic",value:"Zygomatic",checked:!1}]}}],_n=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Neck",value:"Neck",checked:!1}]}}],Dn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Chest",value:"Chest",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Heart",value:"Heart",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sternum",value:"Sternum",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ribs",value:"Ribs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SCJ",value:"SCJ",checked:!1}]}}],yn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Abdomen",value:"Abdomen",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"IVP",value:"IVP",checked:!1}]}}],bn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Clavicle",value:"Clavicle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Shoulder",value:"Shoulder",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Scapula",value:"Scapula",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Humerus",value:"Humerus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Elbow",value:"Elbow",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Forearm",value:"Forearm",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Wrist",value:"Wrist",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hand",value:"Hand",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Phalanges",value:"Phalanges",checked:!1}]}}],Sn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"CSpine",value:"CSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TSpine",value:"TSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"LSpine",value:"LSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SSpine",value:"SSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Coccyx",value:"Coccyx",checked:!1}]}}],Cn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Pelvis",value:"Pelvis",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sacroillac Joints",value:"Sacroillac Joints",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hip",value:"Hip",checked:!1}]}}],Mn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Femur",value:"Femur",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Knee",value:"Knee",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Patella",value:"Patella",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Leg",value:"Leg",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ankle",value:"Ankle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Calcaneus",value:"Calcaneus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Foot",value:"Foot",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Toe",value:"Toe",checked:!1}]}}],In=be("RadiologyStore",{state:()=>({head:[...Re],neck:[..._n],chest:[...Dn],abdomen:[...yn],upper_extremity:[...bn],spine:[...Sn],pelvis:[...Cn],lower_extremity:[...Mn]}),actions:{setOPDDiagnosis(e){this.head=e},getInitial(){return[...ue.cloneDeep(Re)]}}}),On=["innerHTML"],kn={class:"scrollable-container"},wn={key:0,class:"form-section"},Nn={key:1,class:"form-section"},Ln={key:2,class:"form-section"},An={key:3,class:"form-section"},Bn={key:4,class:"form-section"},Pn={key:5,class:"form-section"},$n={key:6,class:"form-section"},En={key:7,class:"form-section"},Tn=P({__name:"RadiologyInvestigation",setup(e){const t=In(),{head:n,neck:s,chest:a,abdomen:r,upper_extremity:o,spine:l,pelvis:f,lower_extremity:c}=ie(t),m=B(G),p=B([]),v=(D,g,L)=>{document.querySelectorAll("#".concat(D," path")).forEach(u=>{u.classList.toggle("white-fill")}),document.querySelectorAll("#".concat(g," line")).forEach(u=>{u.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(g," rect")).forEach(u=>{u.classList.toggle("bright-green-fill"),u.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(g," path")).forEach(u=>{u.classList.toggle("dark-green-fill")}),document.querySelectorAll("#".concat(g," circle")).forEach(u=>{u.classList.toggle("bright-green-fill")});const b=p.value.findIndex(u=>u.id===L);b>=0?p.value.splice(b,1):p.value.unshift({id:L,active:!0})},A=()=>{const D=document.getElementById("SPINE");D.style.display==="none"||D.style.display==""?D.style.display="block":D.style.display="none",v("SPINE","SPINE_LABEL-2","spine")};return ye(()=>{const D=document.getElementById("HEAD");D&&D.addEventListener("click",()=>{v("HEAD","LABEL-6","head")});const g=document.getElementById("NECK");g&&g.addEventListener("click",()=>{v("NECK","LABEL-5","neck")});const L=document.getElementById("CHEST");L&&L.addEventListener("click",()=>{v("CHEST","LABEL-4","chest")});const b=document.getElementById("ABDOMEN_LABEL");b&&b.addEventListener("click",()=>{const J=document.getElementById("ABDOMEN-2");J.style.display==="none"||J.style.display==""?J.style.display="block":J.style.display="none",v("ABDOMEN","ABDOMEN_LABEL-2","abdomen")});const u=document.getElementById("UPPER_EXTRMITY");u&&u.addEventListener("click",()=>{v("UPPER_EXTRMITY","LABEL-3","upper_extremity")});const I=document.getElementById("SPINE"),k=document.getElementById("SPINE_LABEL"),$=document.getElementById("LOWER_SPINE_INACTIVE");I&&I.addEventListener("click",()=>{A()}),k&&k.addEventListener("click",()=>{A()}),$&&$.addEventListener("click",()=>{A()});const R=document.getElementById("PELVIS");R&&R.addEventListener("click",()=>{v("PELVIS","LABEL-2","pelvis")});const x=document.getElementById("LOWER_EXTREMITY");x&&x.addEventListener("click",()=>{v("LOWER_EXTREMITY","LABEL","lower_extremity")})}),(D,g)=>{const L=h("ion-col"),b=h("ion-row");return y(),Y(b,null,{default:d(()=>[i(L,{size:"7"},{default:d(()=>[_("div",{innerHTML:m.value.full_body_sk},null,8,On)]),_:1}),i(L,{size:"5",class:"form-column"},{default:d(()=>[_("div",kn,[(y(!0),M(te,null,fe(p.value,u=>(y(),M(te,null,[u.id==="head"?(y(),M("div",wn,[g[0]||(g[0]=_("h6",null,"Body Part: Head",-1)),i(F,{contentData:O(n)},null,8,["contentData"])])):u.id==="neck"?(y(),M("div",Nn,[g[1]||(g[1]=_("h6",null,"Body Part: Neck",-1)),i(F,{contentData:O(s)},null,8,["contentData"])])):u.id==="chest"?(y(),M("div",Ln,[g[2]||(g[2]=_("h6",null,"Body Part: Chest",-1)),i(F,{contentData:O(a)},null,8,["contentData"])])):u.id==="abdomen"?(y(),M("div",An,[g[3]||(g[3]=_("h6",null,"Body Part: Abdomen",-1)),i(F,{contentData:O(r)},null,8,["contentData"])])):u.id==="upper_extremity"?(y(),M("div",Bn,[g[4]||(g[4]=_("h6",null,"Body Part: Upper Extremity",-1)),i(F,{contentData:O(o)},null,8,["contentData"])])):u.id==="spine"?(y(),M("div",Pn,[g[5]||(g[5]=_("h6",null,"Body Part: Spine",-1)),i(F,{contentData:O(l)},null,8,["contentData"])])):u.id==="pelvis"?(y(),M("div",$n,[g[6]||(g[6]=_("h6",null,"Body Part: Pelvis",-1)),i(F,{contentData:O(f)},null,8,["contentData"])])):u.id==="lower_extremity"?(y(),M("div",En,[g[7]||(g[7]=_("h6",null,"Body Part: Lower Extremity",-1)),i(F,{contentData:O(c)},null,8,["contentData"])])):W("",!0)],64))),256))])]),_:1})]),_:1})}}}),Rn=H(Tn,[["__scopeId","data-v-4e8419f9"]]),xn=P({name:"Menu",mixins:[vn],components:{IonContent:oe,IonHeader:ce,IonItem:ae,IonList:he,IonMenu:pe,IonTitle:se,IonToolbar:ge,IonInput:Ge,IonPopover:mt,DashBox:et,SelectionPopover:At,BasicInputField:Ke,BasicForm:F,List:Lt,DynamicButton:re,LabOrdersList:fn,RadiologyInvestigation:Rn},data(){return{segmentContent:"Lab Investigations",iconsContent:G,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:We,pulseOutline:qe}},computed:{...T(ke,["investigations"]),...T(E,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var e;(e=this.patient)!=null&&e.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(e){this.segmentContent=e},async getTests(){let e;S.getUseIndexDBStatus()&&S.getModsStatus()?e=await ne("testTypes"):e=await de.getTestTypes(),U(this.investigations,"test","multiSelectData",e)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var t;if(!((t=this.patient)!=null&&t.labOrders))return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=await this.labOrders.filter(n=>C.toStandardHisFormat(C.sessionDate())===C.toStandardHisFormat(n.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),ke().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return Te(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(U(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(U(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){Te(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(e,t){for(let n of t)for(let s of n.tests)if(s.name===e)return!0;return!1},async saveTest(){await new zt().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await V.getConceptID(this.inputFields[1].value.name,!0)}]),U(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(e){if(e.inputHeader=="Test"&&this.checkTest(),U(this.investigations,"specimen","alertsErrorMassage",""),e.inputHeader=="Test"&&e.value){let t;S.getUseIndexDBStatus()&&S.getModsStatus()?t=await ne("specimens"):t=await de.getSpecimens("",1e3),this.specimen=await V.getConceptSet(e.value.name,"",{names:t.map(n=>n.name)}),this.specimen.length==1?(U(this.investigations,"specimen","value",this.specimen[0]),U(this.investigations,"specimen","disabled",!0)):(U(this.investigations,"specimen","value",""),U(this.investigations,"specimen","disabled",!1)),U(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(e){return await this.labOrders.filter(t=>t.name.toLowerCase().includes(e.toLowerCase()))},async filterSpecimen(e){var t;return(t=this.specimen[0])!=null&&t.name&&e?await this.specimen.filter(n=>n==null?void 0:n.name.toLowerCase().includes(e.toLowerCase())):[]},setTest(e){this.selectedText=e.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=e.name:this.investigations[0].data.rowData[0].colData[1].value=e.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),Fn={class:"background"},Hn={key:0},Un={key:1},Vn={key:2},zn={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},Jn={key:3},qn={class:"ion-padding",slot:"content"},Wn={key:4};function Gn(e,t,n,s,a,r){const o=h("ion-label"),l=h("ion-segment-button"),f=h("ion-segment"),c=h("VisitsHistory"),m=h("LabOrdersList"),p=h("RadiologyInvestigation");return y(),M("div",Fn,[i(f,{value:e.segmentContent,style:{"margin-top":"5px"}},{default:d(()=>[i(l,{value:"Lab Investigations",onClick:t[0]||(t[0]=v=>e.setSegmentContent("Lab Investigations"))},{default:d(()=>[i(o,null,{default:d(()=>t[3]||(t[3]=[N("Lab Investigations")])),_:1,__:[3]})]),_:1}),i(l,{value:"Radiology Investigation",onClick:t[1]||(t[1]=v=>e.setSegmentContent("Radiology Investigation"))},{default:d(()=>[i(o,null,{default:d(()=>t[4]||(t[4]=[N("Radiology Investigation")])),_:1,__:[4]})]),_:1}),i(l,{value:"Other Investigation",onClick:t[2]||(t[2]=v=>e.setSegmentContent("Other Investigation"))},{default:d(()=>[i(o,null,{default:d(()=>t[5]||(t[5]=[N("Other Investigation")])),_:1,__:[5]})]),_:1})]),_:1},8,["value"]),e.segmentContent=="Radiology Investigation"?(y(),M("div",Hn,[i(c)])):W("",!0),e.segmentContent=="Other Investigation"?(y(),M("div",Un)):W("",!0),e.segmentContent=="Lab Investigations"?(y(),M("div",Vn,[_("div",zn,[_("span",null,[i(m,{propOrders:e.labOrders},null,8,["propOrders"])])])])):W("",!0),e.segmentContent=="Radiology Investigation"?(y(),M("div",Jn,[_("div",qn,[i(p)])])):W("",!0),e.segmentContent=="Other Investigation"?(y(),M("div",Wn)):W("",!0)])}const Wa=H(xn,[["render",Gn],["__scopeId","data-v-c2f65a77"]]),st=(e,t,n,s={})=>({drug_id:e,name:t,category:n,...s}),Yn=be("OtherNCDMedicationsStore",{state:()=>({otherNCDMedications:[],selectedOtherNCDMedicationList:[]}),actions:{setSelectedNCDMedicationList(e){this.selectedOtherNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedOtherNCDMedicationList},addSearchedDrug(e){const t=st(e.drug_id,e.name,"Other",e);if(t.units=e.units,!this.otherNCDMedications.some(s=>s.drug_id===t.drug_id)){this.otherNCDMedications.unshift(t);const s={dosage:{morning:null,afternoon:null,evening:null},duration:null,...t};this.setSelectedNCDMedicationList(s)}},clearOtherNCDMedications(){this.otherNCDMedications=[],this.selectedOtherNCDMedicationList=[]}},persist:!0}),z=be("NCDmedicationsStore",{state:()=>({medications:[],filteredMedications:[],selectedNCDMedicationList:[],frequency_selections:B({}),currentPatientID:""}),actions:{setMedications(e){this.medications=e,this.filteredMedications=e},setFilteredMedications(e){this.filteredMedications=e},initMedications(){},setSelectedNCDMedicationList(e){this.selectedNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedNCDMedicationList},clearMedicationDataStores(){this.medications=[],this.filteredMedications=[],this.selectedNCDMedicationList=[],this.frequency_selections=[]},setCurrentPatientID(e){this.currentPatientID=e}},persist:!0});function Ga(){try{const e=z(),t=Yn();e.medications=[...t.otherNCDMedications,...e.medications],e.medications=e.medications.reduce((n,s)=>(n.some(a=>a.drug_id===s.drug_id)||n.push(s),n),[]),e.selectedNCDMedicationList=[...t.selectedOtherNCDMedicationList,...e.selectedNCDMedicationList],e.filteredMedications=e.medications,Z("Medication added successfully")}catch(e){}}const jn={name:"DiabetesMedication",ids:[337,336,280,410,729,263,812,265,264,240,266,726,728,223]},xe={name:"AntiHypertensivesMedication",ids:[]},Kn={ids:[274,168,648,289,286,164,287,288,672,257,1233,671]},Xn={ids:[559,1236,1234,558,1235,1211,276,277,278,279]},Qn={ids:[556,653,557,652,943,1238,1240,1237,942,1239,946,1503,944,1504,945,1505]},Zn={ids:[116,85,117,1232,936,1364,937,1365,1366]};async function ot(e){const t=z(),n=e.ids.map(async s=>{try{const a=await at.getOfflineDrugById(s);if(a){const r=t.medications.findIndex(l=>l.drug_id===a.drug_id),o=st(a.drug_id,a.name,e.name,a);r!==-1?t.medications[r]=o:t.medications.push(o)}}catch(a){console.error("Error fetching drug ID ".concat(s,":"),a)}});return t.filteredMedications=t.medications,Promise.all(n)}async function Ya(e){try{const t=await at.getOfflineDrugById(e);return{drug_id:e,dosage:{morning:null,afternoon:null,evening:null},duration:null,...t}}catch(t){Oe("Error fetching drug details. Please try again."),console.error("Error fetching drug details:",t)}}function ja(){return ot(jn)}function Ka(){return xe.ids=[...Kn.ids,...Xn.ids,...Qn.ids,...Zn.ids],ot(xe)}function ea(){z().clearMedicationDataStores()}function ta(e){z().setCurrentPatientID(e)}function Xa(e){z().currentPatientID!=e&&(ea(),ta(e))}function Qa(){return z().selectedNCDMedicationList.some(t=>{const{morning:n,afternoon:s,evening:a}=t.dosage,r=typeof n=="string"?Number(n):n,o=typeof s=="string"?Number(s):s,l=typeof a=="string"?Number(a):a;return typeof r=="number"&&r>0||typeof o=="number"&&o>0||typeof l=="number"&&l>0})}class na extends Xe{constructor(t,n){super(t,105,n)}}class aa extends Xe{constructor(t,n){super(t,25,n)}static async get_____(t="",n=1,s=10){}}async function Za(e){var t,n,s;try{const a=E(),{patient:r}=ie(a),o=JSON.parse(JSON.stringify(r.value));(s=(n=(t=o.allergies)!=null?t:o.allergies={}).unsaved)!=null||(n.unsaved=[]),o.allergies.unsaved.push(...e),await Q(o),Z("Allergies saved successfully")}catch(a){j("Unable to save Allegies!")}}class es{async onSubmitNotes(t,n,s){const a=new na(t,n);await a.createEncounter(),await a.saveObservationList(s)}async onSubmitAllergies(t,n,s){try{const a=new aa(t,n);await a.createEncounter(),await a.saveObservationList(s),Z("Allergies saved successfully")}catch(a){console.error("Error saving allergies:",a),j("Failed to save allergies")}}}class ts{constructor(){q(this,"programID");q(this,"providerID");q(this,"patientID");q(this,"date");q(this,"demographics");q(this,"previousDrugPrescriptions",[]);q(this,"previousClinicalNotes");q(this,"previousDrugAllergies");const t=E();this.demographics=t.patient,this.patientID=this.demographics.patientID,this.date=Ce.getSessionDate(),this.providerID=S.getUserID(),this.programID=Ce.getProgramID(),this.previousClinicalNotes={},this.previousDrugAllergies={}}async getPatientEncounters(){const t=await this.getPatientVisitDates(),n=t.map(async a=>{const r=a.value,o=await Bt.getEncounters(this.patientID,{date:r});await Promise.all(o.map(async l=>{var f;if(l.type.name=="NOTES"){const{observations:c}=l;ue.isEmpty(c)||c.forEach(m=>{if(m.concept_id=="2688"){const p=C.toStandardHisDisplayFormat(m.obs_datetime);ue.isEmpty(this.previousClinicalNotes.hasOwnProperty(p))&&(this.previousClinicalNotes[p]=[]),this.previousClinicalNotes[p].push({date:p,notes:m.value_text})}})}if(l.type.name=="TREATMENT"){const{observations:c}=l;if(!ue.isEmpty(c))for(const m in c){let p="<UNKNOWN CONCEPT>";const v=c[m];try{(f=v==null?void 0:v.concept)!=null&&f.concept_names?p=v.concept.concept_names[0].name:p=await V.getConceptName(v.concept_id)}catch(g){console.error(v,g)}const A=await Ce.resolvePrimaryValue(v),D=C.toStandardHisDisplayFormat(v.date_created);p=="Allergic"&&(this.previousDrugAllergies.hasOwnProperty(D)||(this.previousDrugAllergies[D]=[]),this.previousDrugAllergies[D].push({date:D,value:A}))}}}))});await Promise.all(n);const s=t.map(async a=>{const r=await Qe.getOrderByPatient(this.patientID,{start_date:a.value});if(!ue.isEmpty(r)){const o=r.map(l=>({drugName:l.drug.name,value:C.toStandardHisTimeFormat(l.order.start_date),dose:l.dose,frequency:Jt(l.frequency),prescription:C.toStandardHisFormat(l.order.auto_expire_date),duration:sa(l.order.instructions),other:l}));this.previousDrugPrescriptions.push({prescriptionDate:C.toStandardHisDisplayFormat(a.value),previousPrescriptions:o})}});return await Promise.all(s),{previousDrugPrescriptions:this.previousDrugPrescriptions,previousClinicalNotes:this.previousClinicalNotes,previousDrugAllergies:this.previousDrugAllergies}}async getPatientVisitDates(){return(await Ze.getPatientVisits(this.patientID,!1)).map(t=>({label:C.toStandardHisDisplayFormat(t),value:t,other:{isActive:t===Pt.getSessionDate()}}))}}function sa(e){const t=/(\d+)\s+days/i,n=e.match(t);return n&&n.length>1?parseInt(n[1]):null}async function ns(){const e=E(),{patient:t}=ie(e),n=t.value,s=[8809,903,6410,6409];let a;S.getModsStatus()||S.getUseIndexDBStatus()?a=await ne("diagnosis",{likeClause:"",currentPage:1,itemsPerPage:2e3}).then(p=>p.records):a=await S.getJson("diagnosis",{id:7409,page_size:2e3});const r=a.filter(p=>s.includes(p.concept_id)),o=n.diagnosis.saved.map(p=>p.value_coded),l=n.diagnosis.unsaved.map(p=>p.value_coded),f=[...o,...l];return r.filter(p=>f.includes(p.concept_id)).map(p=>p.name)}const oa=P({created(){},components:{IonItem:ae,IonCol:ht,IonLabel:me,IonIcon:Le},data(){return{iconsContent:G,localMedicalDrugsList:[...this.$props._selectedMedicalDrugsList]}},props:{_selectedMedicalDrugsList:{type:Array,default:[]},show_actions_buttons:{type:Boolean,default:!0},highLightBackground:{type:String,default:"item-native"}},watch:{},methods:{highlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#006401"),this.highlightActionBtns(e)},undoHighlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#636363"),this.undohighlightActionBtns(e)},highlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="inline-block"},undohighlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="none"},asignLblID(e){return e+"_lbl"},asignSpanLblID(e){return e+"_spanlbl"},async removeItemAtIndex(e,t){await Ye("Do you want to delete it?",t)&&this.$emit("remove-item",e)},editItemAtIndex(e){this.$emit("edit-item",e)},highLightBnd(e){if(e){if(e.highlightbackground!==void 0&&e.highlightbackground==!0)return this.$props.highLightBackground}else return!1}}}),ia=["onMousemove","onMouseout"],ra={class:"route-label"};function la(e,t,n,s,a,r){const o=h("ion-label"),l=h("ion-col"),f=h("ion-row"),c=h("ion-icon");return y(!0),M(te,null,fe(e.localMedicalDrugsList,(m,p)=>(y(),M("div",{id:"df",class:"medication-item",key:p,onMousemove:v=>e.highlightItem(p),onMouseout:v=>e.undoHighlightItem(p)},[i(f,{class:"medication-header"},{default:d(()=>[i(l,{class:le(["ion-text-wrap",e.highLightBnd(m)])},{default:d(()=>[i(o,{id:e.asignLblID(p),class:"medication-name"},{default:d(()=>[N(w(m.drugName),1)]),_:2},1032,["id"])]),_:2},1032,["class"])]),_:2},1024),i(f,{class:"medication-details"},{default:d(()=>[i(l,{size:"10",class:le(["ion-text-wrap details-col",e.highLightBnd(m)])},{default:d(()=>[i(o,{class:"details-text"},{default:d(()=>[N(w(m.dose)+" / "+w(m.frequency)+" / daily / "+w(m.duration)+" / until "+w(m.prescription)+" ",1),_("span",ra,w(m.route_name),1)]),_:2},1024)]),_:2},1032,["class"]),e.show_actions_buttons?(y(),Y(l,{key:0,class:le([e.highLightBnd(m),"actions-col"]),size:"2"},{default:d(()=>[i(o,{class:le(["action-button",e.asignSpanLblID(p)]),onClick:v=>e.editItemAtIndex(p)},{default:d(()=>[i(c,{icon:e.iconsContent.edit},null,8,["icon"])]),_:2},1032,["class","onClick"]),i(o,{class:le(["action-button",e.asignSpanLblID(p)]),onClick:v=>e.removeItemAtIndex(p,v)},{default:d(()=>[i(c,{icon:e.iconsContent.delete},null,8,["icon"])]),_:2},1032,["class","onClick"])]),_:2},1032,["class"])):W("",!0)]),_:2},1024)],40,ia))),128)}const as=H(oa,[["render",la],["__scopeId","data-v-01c693a3"]]),da={key:0,class:"custom-allergy-container"},ca=P({watch:{},name:"AllergiesComponent"}),ua=P({...ca,setup(e){const t=$t(),n=E(),s=ee(()=>t.selectedMedicalAllergiesList),a=ee(()=>n.patient),r=ee(()=>t.medicalAllergiesList),o=B(g(8,"item-")),l=B(),f=B(!1),c=[{multi_Selection:!0,show_list_label:!0,unqueId:o.value,name_of_list:"Add/Remove allergies",placeHolder:"Search for an allergy",items:[],listUpdatedFN:v,listFilteredFN:()=>{},searchTextFN:A,use_internal_filter:!0,show_error:B(!1),error_message:"please select a User",disabled:B(!1)}],m=B(!1);ye(async()=>{p()});const p=()=>{t.current_patient.ID!=a.value.ID&&(t.clearSelectedMedicalAllergiesList(),t.setCurrentPatient(a.value))};function v(b){b.forEach(u=>{u.selected==!0&&u.name==="Other"&&(f.value=u.name==="Other")}),t.setSelectedMedicalAllergiesList(b),D()}async function A(b){const u=b,I=await V.getConceptSet("OPD Medication",u);I.map(x=>({label:x.name,value:x.name,other:x}));const k=Et(u),R=Tt(k,I).sort((x,J)=>x.name.localeCompare(J.name));t.setMedicalAllergiesList(R),D()}function D(){const b=r.value;s.value.forEach(I=>{let k=!1;b.forEach(($,R)=>{$.concept_id==I.concept_id&&I.selected===!0&&(b[R]=I,k=!0)}),!k&&I.selected===!0&&b.push(I)});const u=b.filter((I,k,$)=>k===$.findIndex(R=>R.concept_id===I.concept_id));t.setMedicalAllergiesList(u)}function g(b=8,u=""){const I="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let k=u;for(let $=0;$<b;$++)k+=I.charAt(Math.floor(Math.random()*I.length));return k+="-".concat(Date.now()),k}async function L(b){try{const u=b.trim();if(u){const I={name:u,selected:!0};t.setMedicalAllergiesList([...r.value,I]),t.setSelectedMedicalAllergiesList(I),f.value=!1,m.value=!0,l.value="";const k=t.findSelectedAllergyByName("Other");t.removeSelectedAllergy(k)}}catch(u){console.error(u)}}return(b,u)=>(y(),Y(O(gt),null,{default:d(()=>[i(O(ft),null,{default:d(()=>[i(O(me),{class:"header-container"},{default:d(()=>[i(O(Le),{icon:O(vt),class:"allergy-icon"},null,8,["icon"]),u[2]||(u[2]=_("span",{style:{"font-size":"16px","font-weight":"600"}}," Allergies (Medication, Healthcare items, Environment and Food) ",-1))]),_:1,__:[2]})]),_:1}),i(O(_t),null,{default:d(()=>[i(Rt,{multiSelection:c[0].multi_Selection,show_label:c[0].show_list_label,uniqueId:c[0].unqueId,name_of_list:c[0].name_of_list,choose_place_holder:c[0].placeHolder,"items_-list":r.value,use_internal_filter:c[0].use_internal_filter,disabled:c[0].disabled.value,onItemListUpDated:c[0].listUpdatedFN,onItemListFiltered:c[0].listFilteredFN,onItemSearchText:c[0].searchTextFN},null,8,["multiSelection","show_label","uniqueId","name_of_list","choose_place_holder","items_-list","use_internal_filter","disabled","onItemListUpDated","onItemListFiltered","onItemSearchText"]),f.value?(y(),M("div",da,[i(O(Ge),{modelValue:l.value,"onUpdate:modelValue":u[0]||(u[0]=I=>l.value=I),placeholder:"Please specify the allergy",fill:"outline",class:"custom-input"},null,8,["modelValue"]),i(O(De),{onClick:u[1]||(u[1]=I=>L(l.value)),class:"addCustomAllergyBtn"},{default:d(()=>u[3]||(u[3]=[N(" Add Allergy ")])),_:1,__:[3]})])):W("",!0)]),_:1})]),_:1}))}}),ss=H(ua,[["__scopeId","data-v-8aa98f55"]]),pa=be("nonPharmaTherapyStore",{state:()=>({items:[{id:"wound-dressing",label:"Wound dressing",checked:!1},{id:"patient-education",label:"Patient education",checked:!1},{id:"counseling",label:"Counseling",checked:!1},{id:"minor-surgery",label:"Minor Surgery",checked:!1}],current_patient:{}}),actions:{async saveNonPharmaTherapyPatientData(){const e=xt(),t=[];this.items.forEach(n=>{n.checked==!0&&t.push({concept_id:11023,value_coded:2592,value_text:JSON.stringify(n),obs_datetime:C.toStandardHisFormat(S.getSessionDate()),location_id:e.facilityLocation.code})});try{t.length>0&&ma(t)}catch(n){j("Unable to update Non Pharma Therapy!")}this.clearSelectednonPharmaTherapyStore()},clearSelectednonPharmaTherapyStore(){this.items.forEach(e=>{e.checked=!1})},setCurrentPatient(e){this.current_patient=e}},persist:!0});async function ma(e){var t,n,s;try{const a=E(),{patient:r}=ie(a),o=JSON.parse(JSON.stringify(r.value));(s=(n=(t=o.notes)!=null?t:o.notes={}).unsaved)!=null||(n.unsaved=[]),o.notes.unsaved.push(...e),await Q(o),Z("Non Pharma Therapy has been saved")}catch(a){j("Unable to create non pharmalogical notes!")}}const ha={class:"checklist-container"},ga=P({watch:{},name:"xxxComponent"}),fa=P({...ga,setup(e){const t=E(),n=ee(()=>t.patient),s=pa(),a=s.items;ye(async()=>{r()});const r=()=>{s.current_patient.ID!=n.value.ID&&(s.clearSelectednonPharmaTherapyStore(),s.setCurrentPatient(n.value))};return Ie(()=>n.value,async o=>{}),(o,l)=>(y(),M("div",ha,[(y(!0),M(te,null,fe(O(a),f=>(y(),Y(O(ae),{key:f.id,class:"no-border"},{default:d(()=>[i(O(Dt),{id:f.id,modelValue:f.checked,"onUpdate:modelValue":c=>f.checked=c,slot:"start"},null,8,["id","modelValue","onUpdate:modelValue"]),i(O(me),{style:{"font-size":"16px","font-weight":"600"}},{default:d(()=>[N(w(f.label),1)]),_:2},1024)]),_:2},1024))),128))]))}}),os=H(fa,[["__scopeId","data-v-371e920f"]]);async function is(){var e,t,n;try{const s=E(),{patient:a}=ie(s),r=_a(),o=JSON.parse(JSON.stringify(a.value));if(r.length>0){(n=(t=(e=o.MedicationOrder)!=null?e:o.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const l=o.MedicationOrder.unsaved.findIndex(c=>c.NCD_Drug_Orders);if(l>=0)o.MedicationOrder.unsaved[l].NCD_Drug_Orders=[...o.MedicationOrder.unsaved[l].NCD_Drug_Orders,...r];else{const c={NCD_Drug_Orders:r};o.MedicationOrder.unsaved.push(c)}await Q(o),z().clearMedicationDataStores(),Z("Drug order(s) has been created")}else j("Unable to create drug orders!")}catch(s){j("Unable to create drug orders!")}}function Fe(){try{const e=new Date(S.getSessionDate()),n=Ae().selectedMedicalDrugsList;let s=0;if(n.forEach(c=>{const m=parseInt(c.duration,10);!isNaN(m)&&m>s&&(s=m)}),s<=0)return{date:null,formattedDate:null};const a=new Date(e);a.setDate(e.getDate()+s);const r=String(a.getDate()).padStart(2,"0"),o=String(a.getMonth()+1).padStart(2,"0"),l=a.getFullYear(),f="".concat(r,"/").concat(o,"/").concat(l);return{date:a,formattedDate:f}}catch(e){return console.error("Error calculating OPD medication run out date:",e),{date:null,formattedDate:null}}}function va(){try{const e=new Date(S.getSessionDate()),n=z().selectedNCDMedicationList;let s=0;if(n.forEach(c=>{const m=parseInt(c.duration,10);!isNaN(m)&&m>s&&(s=m)}),s<=0)return{date:null,formattedDate:null};const a=new Date(e);a.setDate(e.getDate()+s);const r=String(a.getDate()).padStart(2,"0"),o=String(a.getMonth()+1).padStart(2,"0"),l=a.getFullYear(),f="".concat(r,"/").concat(o,"/").concat(l);return{date:a,formattedDate:f}}catch(e){return console.error("Error calculating medication run out date:",e),{date:null,formattedDate:null}}}const _a=()=>{const e=z();return e.selectedNCDMedicationList.map(t=>{t.frequency=e.frequency_selections[t.drug_id]||"",t.totalDosage=Object.values(t.dosage).reduce((a,r)=>a+Number(r),0);const n=nt.getSessionDate(),s=ba(t.drug_id);return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.totalDosage=="Unknown"?0:t.totalDosage*(s==null?void 0:s.value)||0,start_date:n,auto_expire_date:it(n,t.duration),units:t.units,instructions:"".concat(t.name," ").concat(t.totalDosage," ").concat(t.units," ").concat((s==null?void 0:s.code)||""," for ").concat(t.duration," days"),dose:Da(t),frequency:(s==null?void 0:s.code)||""}})},Da=e=>e.dose_strength!=null&&e.dose_strength?Math.trunc(e.dose_strength):1;async function rs(){var e,t,n;try{const s=E(),{patient:a}=ie(s),r=ya(),o=JSON.parse(JSON.stringify(a.value));if(r.length>0){(n=(t=(e=o.MedicationOrder)!=null?e:o.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const l=o.MedicationOrder.unsaved.findIndex(c=>c.NCD_Drug_Orders);if(l>=0)o.MedicationOrder.unsaved[l].NCD_Drug_Orders=[...o.MedicationOrder.unsaved[l].NCD_Drug_Orders,...r];else{const c={NCD_Drug_Orders:r};o.MedicationOrder.unsaved.push(c)}await Q(o),Ae().clearSelectedMedicalDrugsList(),Z("Drug order(s) has been created")}else j("Unable to create drug orders!")}catch(s){j("Unable to create drug orders!")}}const ya=()=>Ae().selectedMedicalDrugsList.map(t=>{const n=nt.getSessionDate(),s=X.find(a=>a.label===t.frequency)||{};return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.dose=="Unknown"?0:t.dose*(s==null?void 0:s.value)||0,start_date:n,auto_expire_date:it(n,t.duration),units:t.units,instructions:"".concat(t.drugName,": ").concat(t.dose," ").concat(t.units," ").concat((s==null?void 0:s.code)||""," for ").concat(t.duration," days"),dose:t.dose,frequency:(s==null?void 0:s.code)||""}}),ba=e=>{const n=z().selectedNCDMedicationList.find(a=>a.drug_id===e);if(!n||!n.dosage)return null;switch(["morning","afternoon","evening"].reduce((a,r)=>a+(n.dosage[r]?1:0),0)){case 1:return n.dosage.morning?X.find(a=>a.code==="QAM"):n.dosage.afternoon?X.find(a=>a.code==="QNOON"):n.dosage.evening?X.find(a=>a.code==="QPM"):X.find(a=>a.code==="OD");case 2:return X.find(a=>a.code==="BD");case 3:return X.find(a=>a.code==="TDS");default:return X.find(a=>a.code==="Unknown")}},it=(e,t)=>{const n=new Date(e);return n.setDate(n.getDate()+parseInt(t)),C.toStandardHisFormat(n)},Sa=P({components:{IonContent:oe,IonHeader:ce,IonItem:ae,IonList:he,IonMenu:pe,IonTitle:se,IonToolbar:ge,BasicInputField:Ke,IonDatetime:bt,IonBadge:yt,DateInputField:Wt,DynamicButton:re},setup(){const e=Me(),t=B(0),n=ee(()=>e.getDisabledDates()),s=ee(()=>e.getAssignedAppointments()),a=B();return{disabledDates:n,datesCounts:s,appointment_count:t,calendarOutline:St,inputPRDate:a}},data(){return K(),Ee(),{iconsContent:G,date:new Date(S.getSessionDate()),tomorrow:new Date(S.getSessionDate()).getDate()+1,appointment:"",drugRunoutDate:"",nextAppointmentDate:"",minDate:new Date(S.getSessionDate())}},computed:{...T(K,["nextAppointment","appointmentCountsCache","currentSelectedNextAppointmentDate"]),...T(Me,["maximumNumberOfDaysForEachDay","assignedAppointmentsDates"]),...T(E,["patient"]),...T(Ee,["activeProgram"]),calendarDate(){const e=K();return e.currentSelectedNextAppointmentDate?C.toStandardHisDisplayFormat(e.currentSelectedNextAppointmentDate):""},runOutDate(){var e;return((e=this.activeProgram)==null?void 0:e.program_id)===14?Fe():va()}},watch:{calendarDate:{handler(){this.updateNextAppointment()},deep:!0},"$service.sessionDate":{handler(){this.updateMinDate()},immediate:!0},"patient.ID":{async handler(e,t){e!==t&&(this.cleanCurrentNextAppointmentDate(),this.checkIfSamePatientInContext())}}},async mounted(){this.checkIfSamePatientInContext(),await this.getAppointmentMents(this.runOutDate.date),await Ut().loadGlobalProperty(),this.validateAppointmentCountsCache(),await this.preloadAppointmentCounts(),Vt();const e=S.getUserID(),t=new Ze;this.appointment=new ve(t.getID(),e),this.nextAppointmentDate=this.appointment.date,this.supposedRunOutDate(),window.addEventListener("storage",this.handleStorageChange),Fe()},beforeUnmount(){window.removeEventListener("storage",this.handleStorageChange)},methods:{handleStorageChange(e){e.key==="sessionDate"&&this.updateMinDate()},updateMinDate(){this.date=new Date(S.getSessionDate()),this.minDate=new Date(S.getSessionDate())},updateNextAppointment(){K().setNextAppointment(this.calendarDate)},async handleDateUpdate(e){e&&(Me().setsssignedAppointmentsDates(e,!0),this.calendarDate=C.toStandardHisDisplayFormat(e),await this.save(),await this.getAppointmentMents(e),await this.updateAppointmentCache(e),K().setCurrentSelectedNextAppointmentDate(e,this.patient.ID))},async getAppointmentMents(e){if(Ht().apiStatus)try{const n=await ve.getDailiyAppointments(C.toStandardHisFormat(e),C.toStandardHisFormat(e));this.appointment_count=n.length}catch(n){}},getCounter(e){const t=C.toStandardHisFormat(e);return this.appointmentCountsCache[t]||""},async save(){if(this.assignedAppointmentsDates.length>0)try{const t=await new qt().createOfflineAppointment()}catch(e){}},async openCornfirmModal(e){this.calendarDate=C.toStandardHisDisplayFormat(e),await this.getAppointmentMents(e),je(Ft,{class:"otherVitalsModal"},!0,{message:"Are you sure you want to add this Appointment?"},{cancel:a=>{},confirm:async a=>{a.detail==!0&&await this.handleDateUpdate(e)}})},async handleInput(e){this.inputPRDate=C.toStandardHisDisplayFormat(e),await this.openCornfirmModal(e)},async supposedRunOutDate(){await Qe.getLastDrugsReceived(this.patient.patientID)},async preloadAppointmentCounts(){try{const e=new Date(S.getSessionDate());e.setDate(1);const t=new Date(S.getSessionDate());t.setMonth(t.getMonth()+2),t.setDate(0);try{const n=await ve.getDailiyAppointments(C.toStandardHisFormat(e),C.toStandardHisFormat(t)),s=this.filterUniqueAppointments(n),a={};s.forEach(r=>{const o=new Date(r.appointment_date),l=C.toStandardHisFormat(o);a[l]||(a[l]=0),a[l]++}),Object.keys(a).forEach(r=>{this.appointmentCountsCache[r]=a[r]})}catch(n){console.error("Error fetching appointments for date range:",n)}}catch(e){console.error("Error in preload process:",e)}},filterUniqueAppointments(e){const t=new Map;return e.forEach(n=>{const s="".concat(n.given_name,"_").concat(n.family_name,"_").concat(n.birthdate,"_").concat(n.appointment_date);t.has(s)||t.set(s,n)}),Array.from(t.values())},async updateAppointmentCache(e){try{const t=C.toStandardHisFormat(e),n=await ve.getDailiyAppointments(C.toStandardHisFormat(e),C.toStandardHisFormat(e));this.appointmentCountsCache[t]=n.length}catch(t){console.error("Error updating appointment cache:",t)}},validateAppointmentCountsCache(){K().checkCurrentLocationIfInContext()},isRunOutDate(e){return!this.runOutDate||!this.runOutDate.date?!1:C.toStandardHisFormat(e)===C.toStandardHisFormat(this.runOutDate.date)},cleanCurrentNextAppointmentDate(){K().cleanCurrentSelectedNextAppointmentDate()},checkIfSamePatientInContext(){const e=K();e.current_patient.ID!=this.patient.ID&&(this.cleanCurrentNextAppointmentDate(),e.setCurrentPatient(this.patient))}}}),Ca={class:"card_content"},Ma={class:"count-badge"},Ia={class:"dates_title"},Oa={class:"sub_data"},ka={class:"dates_title"},wa={class:"sub_data"},Na={class:"dates_title"},La={class:"sub_data"},Aa={class:"dates_title"},Ba={class:"sub_data"};function Pa(e,t,n,s,a,r){const o=h("VueDatePicker"),l=h("ion-col"),f=h("DynamicButton"),c=h("ion-item"),m=h("ion-row"),p=h("DateInputField");return y(),M("div",Ca,[i(m,null,{default:d(()=>[i(l,{"size-sm":"12","size-md":"12","size-lg":"12","size-xl":"8"},{default:d(()=>[i(o,{class:"calender",onDateUpdate:e.openCornfirmModal,inline:"","auto-apply":"","enable-time-picker":!1,"disabled-dates":e.disabledDates,"min-date":e.minDate,modelValue:e.runOutDate.date,"onUpdate:modelValue":t[0]||(t[0]=v=>e.runOutDate.date=v)},{day:d(({day:v,date:A})=>[(y(),M("p",{key:0,class:le({"run-out-date":e.isRunOutDate(A)}),style:{"font-weight":"600","font-size":"20px"}},[_("span",null,[N(w(v),1),_("sup",Ma,w(e.getCounter(A)),1)])],2))]),_:1},8,["onDateUpdate","disabled-dates","min-date","modelValue"])]),_:1}),i(l,null,{default:d(()=>[i(c,null,{default:d(()=>[_("div",Ia,[t[3]||(t[3]=_("div",null,[N("Suggested Next Appointment Date "),_("span",{style:{"font-size":"16px"}},"(Medication run out date)")],-1)),_("div",Oa,[N(w(e.runOutDate.formattedDate||"No run out date available")+" ",1),e.runOutDate.formattedDate?(y(),Y(f,{key:0,onClick:t[1]||(t[1]=v=>e.handleDateUpdate(e.runOutDate.date)),name:"Set Next Appt.",fill:"solid",iconSlot:"icon-only",style:{float:"right"}})):W("",!0)])])]),_:1}),i(c,null,{default:d(()=>[_("div",ka,[t[4]||(t[4]=_("div",null,"User set appointment date",-1)),_("div",wa,w(e.calendarDate),1)])]),_:1}),i(c,null,{default:d(()=>[_("div",Na,[t[5]||(t[5]=_("div",null,"Appointments",-1)),_("div",La,w(e.appointment_count),1)])]),_:1}),i(c,null,{default:d(()=>[_("div",Aa,[t[6]||(t[6]=_("div",null,"Appointment limit (per/day)",-1)),_("div",Ba,w(e.appointment_count)+"/"+w(e.maximumNumberOfDaysForEachDay),1)])]),_:1})]),_:1})]),_:1}),i(m,null,{default:d(()=>[i(l,{size:"4"},{default:d(()=>[i(p,{inputHeader:"Preferred Next Appointment Date",bold:"600",fontSize:"17px",placeholderFontSize:"17px",placeholderFontWeight:"600",unit:"",icon:e.calendarOutline,placeholder:"press to select date",iconRight:"",inputWidth:"100%",inputValue:e.inputPRDate,eventType:"",minDate:e.minDate,maxDate:"",disabled:!1,"onUpdate:rawDateValue":t[2]||(t[2]=v=>e.handleInput(v))},null,8,["icon","inputValue","minDate"])]),_:1})]),_:1})])}const ls=H(Sa,[["render",Pa],["__scopeId","data-v-2742dd5f"]]);export{ss as A,as as D,Wa as I,Qa as M,ls as N,ts as P,es as T,vn as _,ma as a,pa as b,is as c,rs as d,Xa as e,ta as f,ns as g,Ka as h,ja as i,ea as j,Yn as k,Ya as l,Ga as m,os as n,Za as s,z as u};
