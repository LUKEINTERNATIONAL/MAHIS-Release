System.register(["./vendor-legacy-B0ctPPIE.js","./index-legacy-Dh5F7buA.js","./DemographicBar-legacy-2EanckpM.js","./SaveProgressModal-legacy-DFF6ZM3a.js","./Stepper-legacy-4RRXDasD.js","./formatServerData-legacy-DN4Srgxi.js","./lodash-legacy-pOOc9Efu.js","./FeatusModal-legacy-oIcIH2fd.js","./BasicFooter-legacy-DhGGTEzy.js","./NextAppointment-legacy-Cq25QNzg.js","./SetEncounter.vue_vue_type_script_lang-legacy-D0_MQGYm.js","./apexcharts-legacy-BwM20G2n.js","./OPDOutcome-legacy-DBA-VVh7.js","./patient_complaints_service-legacy-Bmlv5UOT.js","./DashBox-legacy-D_cVNjxA.js","./useExposeFromStandardForm-legacy-Bmrh-G6J.js","./BasicForm-legacy-BV8RXH2M.js","./DateInputField-legacy-CBHbr-L_.js","./drug_prescription_service-legacy-9zCAmh-M.js","./drug_service-legacy-D0bF1mnG.js","./Outcome-legacy-8jYvTTwH.js","./TreatmentPlan-legacy-FlxxAcy3.js","./previousDiagnosis-legacy-uOlF6Xu9.js","./group_validation-legacy-DU_Gml7F.js","./BasicCard-legacy-B9uRcqH9.js","./PastObstreticHistoryStore-legacy-DfIamFpy.js","./lab_order-legacy-CJjFCbKk.js","./UpcomingFeature-legacy-2xZ9TxEi.js","./userService-legacy-BL7HJH2m.js","./ncd_appointment_service-legacy-DlDP-LIc.js"],function(a,e){"use strict";var t,i,s,n,l,r,o,c,d,u,m,g,h,p,v,b,w,y,D,x,S,I,f,E,j,_,A,P,V,k,C,M,U,B,F,z,N,T,W,O,H,L,G,Y,R,X,Z,$,J,q,K,Q,aa;return{setters:[a=>{t=a.d,i=a.ao,s=a.b8,n=a.D,l=a.G,r=a.M,o=a.J,c=a.aX,d=a.ca,u=a.aY,m=a.aW,g=a.aZ,h=a.W,p=a.U,v=a.T,b=a.an,w=a.ba,y=a.S,D=a.ah,x=a.aa,S=a.bG,I=a.E,f=a.y,E=a.f,j=a.z,_=a.l},a=>{A=a.aI,P=a.C,V=a.T,k=a.j,C=a.S,M=a.t,U=a.z,B=a.H,F=a.n,z=a.aH,N=a.u,T=a.i,W=a._},a=>{O=a.D},a=>{H=a.S},a=>{L=a.S,G=a.V,Y=a.m,R=a.n,X=a.o},a=>{Z=a.a,$=a.f,J=a.c},null,a=>{q=a.u},a=>{K=a.B},a=>{Q=a._},a=>{aa=a._},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){class e extends A{constructor(a,e){super(a,95,e)}}class ea extends A{constructor(a,e){super(a,116,e)}}class ta extends A{constructor(a,e){super(a,210,e)}}const ia=t({name:"PhysicalExam",mixins:[Q,aa],components:{BasicFooter:K,IonContent:D,IonHeader:y,IonMenuButton:w,IonPage:b,IonTitle:v,IonToolbar:p,Toolbar:V,ToolbarSearch:P,DemographicBar:O,IonButton:h,IonCard:g,IonCardContent:m,IonCardHeader:u,IonCardSubtitle:d,IonCardTitle:c,IonAccordion:o,IonAccordionGroup:r,IonItem:l,IonLabel:n,IonModal:s,Stepper:L},data:()=>({wizardData:[{title:"Vitals",class:"common_step",checked:!1,disabled:!1,number:1,last_step:""},{title:"Maternal exam",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Abdominal examination",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:""},{title:"Presenting signs for IPV",class:"common_step",checked:"",icon:!1,disabled:!1,number:4,last_step:"last_step"}],StepperData:[{title:"Vitals",component:"",value:"1"},{title:"Maternal exam",component:"MaternalExam",value:"2"},{title:"Abdominal examination",component:"AbdominalExamination",value:"3"},{title:"Presenting signs or conditions for IPV ",component:"PresentingSigns",value:"4"}],isOpen:!1,iconsContent:T}),computed:{...i(N,["patient"]),...i(X,["ANCVitals"]),...i(R,["respiratory","pallor","breastExam","vaginalInspection","cervicalExam","oedemaPresence"]),...i(q,["fetalAssessment","fetalDetails"]),...i(Y,["presentingSigns"])},mounted(){this.markWizard()},watch:{vitals:{handler(){this.markWizard()},deep:!0},DangerSigns:{handler(){this.markWizard()},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},diagnosis:{handler(){this.markWizard()},deep:!0}},setup:()=>({chevronBackOutline:S,checkmark:x,hasValidationErrors:[]}),methods:{markWizard(){},getSaveFunction(){},deleteDisplayData:a=>a.map(a=>(null==a||delete a.display,null==a?void 0:a.data)),async saveData(){if(await this.validaterowData())return void F("Vitals form has errors");const a=q();await a.validate()?(this.saveVitals(),this.saveMaternalExam(),this.saveAbdominalExam(),this.savePresentingSigns(),await this.$router.push("contact"),await z()):F("Abdominal exam section has errors")},async buildVitals(){return[...await Z(this.ANCVitals),...await J(this.ANCVitals)]},async buildMaternalExam(){return[...await $(this.pallor),...await J(this.pallor),...await Z(this.pallor),...await $(this.respiratory),...await J(this.respiratory),...await Z(this.respiratory),...await J(this.breastExam),...await Z(this.breastExam),...await $(this.breastExam),...await J(this.vaginalInspection),...await Z(this.vaginalInspection),...await $(this.vaginalInspection),...await J(this.cervicalExam),...await Z(this.cervicalExam),...await $(this.cervicalExam),...await J(this.oedemaPresence),...await Z(this.oedemaPresence),...await $(this.oedemaPresence)]},async buildAbdominalExam(){return[...await Z(this.fetalAssessment),...await $(this.fetalAssessment),...await J(this.fetalAssessment),...await Z(this.fetalDetails),...await $(this.fetalDetails),...await J(this.fetalDetails)]},async buildPresentingSigns(){return[...await Z(this.presentingSigns),...await $(this.presentingSigns),...await J(this.presentingSigns)]},async saveVitals(){const a=C.getUserID(),e=new G(this.patient.patientID,a);await e.onFinish(this.ANCVitals)},async validaterowData(){var a;const e=C.getUserID(),t=new G(this.patient.patientID,e);B.getAgeInYears(null===(a=this.patient)||void 0===a||null===(a=a.personInformation)||void 0===a?void 0:a.birthdate),this.hasValidationErrors=[];let i=!1;return this.ANCVitals.forEach((a,e)=>{var s;null!=a&&null!==(s=a.data)&&void 0!==s&&s.rowData&&a.data.rowData.forEach((a,s)=>{a.colData.some((a,n)=>{const l=t.validator(a);return a.name,(null==l?void 0:l.length)>0?(i=!0,this.ANCVitals[e].data.rowData[s].colData[n].alertsErrorMassage=l.flat(1/0)[0]):this.ANCVitals[e].data.rowData[s].colData[n].alertsErrorMassage="",!1})})}),this.ANCVitals.validationStatus=!i,i},async saveMaternalExam(){if(this.pallor.length>=0||this.cervicalExam.length>=0||this.vaginalInspection.length>=0||this.breastExam.length>=0){const a=C.getUserID(),t=new e(this.patient.patientID,a);if(!(await t.createEncounter()))return M("Unable to create maternal exam encounter");if(!(await t.saveObservationList(await this.buildMaternalExam())))return M("Unable to create maternal exam details!");U("Maternal exam details have been created")}console.log(await this.buildMaternalExam())},async saveAbdominalExam(){if(this.fetalAssessment.length>=0||this.fetalDetails.length>=0){const a=C.getUserID(),e=new ea(this.patient.patientID,a);if(!(await e.createEncounter()))return M("Unable to create abdominal exam encounter");if(!(await e.saveObservationList(await this.buildAbdominalExam())))return M("Unable to create abdominal exam details!");U("Abdominal exam details have been created")}console.log(await this.buildAbdominalExam())},async savePresentingSigns(){if(this.presentingSigns.length>=0){const a=C.getUserID(),e=new ta(this.patient.patientID,a);if(!(await e.createEncounter()))return M("Unable to create presenting signs encounter");if(!(await e.saveObservationList(await this.buildPresentingSigns())))return M("Unable to create presenting signs details!");U("Presenting signs details have been created")}console.log(await this.buildPresentingSigns())},openModal(){k(H)}}});a("default",W(ia,[["render",function(a,e,t,i,s,n){const l=I("Toolbar"),r=I("DemographicBar"),o=I("Stepper"),c=I("ion-content"),d=I("BasicFooter"),u=I("ion-page");return E(),f(u,null,{default:j(()=>[_(l),_(c,{fullscreen:!0},{default:j(()=>[_(r),_(o,{stepperTitle:"Physical examination",wizardData:a.wizardData,onUpdateStatus:a.markWizard,StepperData:a.StepperData,backUrl:a.userRoleSettings.url,backBtn:a.userRoleSettings.btnName,getSaveFunction:a.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),_(d,{onFinishBtn:e[0]||(e[0]=e=>a.saveData())})]),_:1})}]]))}}});
