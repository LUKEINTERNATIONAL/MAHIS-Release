System.register(["./vendor-legacy-phTeNEOA.js","./index-legacy-BAnWKoKI.js","./DemographicBar-legacy-Bz8dUA7Y.js","./SaveProgressModal-legacy-9vTw3Nu5.js","./Stepper-legacy-CQVZkCQH.js","./formatServerData-legacy-YrZ51hpF.js","./lodash-legacy-C-x9g9Na.js","./FeatusModal-legacy-BIe4bsPb.js","./BasicFooter-legacy-BwSYZlur.js","./NextAppointment-legacy-CwENIPcw.js","./SetEncounter.vue_vue_type_script_lang-legacy-Bz2ox92E.js","./apexcharts-legacy-Daa5aA7l.js","./OPDOutcome-legacy-Dn_SMpgy.js","./patient_complaints_service-legacy-mix5wPDD.js","./DashBox-legacy-DTOdc1vC.js","./BasicForm-legacy-kobeFQVj.js","./DateInputField-legacy-clf_hIW0.js","./drug_prescription_service-legacy-BVBWWa1W.js","./drug_service-legacy-0Cb0b0Lq.js","./Outcome-legacy-D34e9AgE.js","./VitalsMixin.vue_vue_type_script_lang-legacy-j8bnxNtO.js","./TreatmentPlan-legacy-B2-R_Zyk.js","./previousDiagnosis-legacy-DmBE34uD.js","./group_validation-legacy-CzlNFQIA.js","./BasicCard-legacy--roaPUsk.js","./PastObstreticHistoryStore-legacy-CG-zBbIt.js","./lab_order-legacy-C8scZmzR.js","./UpcomingFeature-legacy-Cz1AhfSL.js","./ncd_appointment_service-legacy-DV4SwLZY.js"],(function(a,t){"use strict";var e,i,s,n,l,r,o,c,d,u,g,m,h,p,v,b,w,y,D,x,f,I,S,E,_,j,A,P,k,V,M,B,C,U,F,N,z,O,T,W,H,L,G,R,J,Y,Q,Z,$,q,K,X,aa;return{setters:[a=>{e=a.d,i=a.ab,s=a.bg,n=a._,l=a.a2,r=a.af,o=a.ae,c=a.aN,d=a.ck,u=a.aO,g=a.aM,m=a.aP,h=a.N,p=a.G,v=a.E,b=a.aa,w=a.cb,y=a.I,D=a.a7,x=a.aR,f=a.bD,I=a.H,S=a.O,E=a.f,_=a.J,j=a.l},a=>{A=a.aT,P=a.N,k=a.T,V=a.l,M=a.S,B=a.t,C=a.G,U=a.H,F=a.s,N=a.aQ,z=a.u,O=a.k,T=a._},a=>{W=a.D},a=>{H=a.S},a=>{L=a.S,G=a.V,R=a.m,J=a.n,Y=a.o},a=>{Q=a.a,Z=a.f,$=a.c},null,a=>{q=a.u},a=>{K=a.B},a=>{X=a._},a=>{aa=a._},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){class t extends A{constructor(a,t){super(a,95,t)}}class ta extends A{constructor(a,t){super(a,116,t)}}class ea extends A{constructor(a,t){super(a,210,t)}}const ia=e({name:"PhysicalExam",mixins:[X,aa],components:{BasicFooter:K,IonContent:D,IonHeader:y,IonMenuButton:w,IonPage:b,IonTitle:v,IonToolbar:p,Toolbar:k,ToolbarSearch:P,DemographicBar:W,IonButton:h,IonCard:m,IonCardContent:g,IonCardHeader:u,IonCardSubtitle:d,IonCardTitle:c,IonAccordion:o,IonAccordionGroup:r,IonItem:l,IonLabel:n,IonModal:s,Stepper:L},data:()=>({wizardData:[{title:"Vitals",class:"common_step",checked:!1,disabled:!1,number:1,last_step:""},{title:"Maternal exam",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Abdominal examination",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:""},{title:"Presenting signs for IPV",class:"common_step",checked:"",icon:!1,disabled:!1,number:4,last_step:"last_step"}],StepperData:[{title:"Vitals",component:"",value:"1"},{title:"Maternal exam",component:"MaternalExam",value:"2"},{title:"Abdominal examination",component:"AbdominalExamination",value:"3"},{title:"Presenting signs or conditions for IPV ",component:"PresentingSigns",value:"4"}],isOpen:!1,iconsContent:O}),computed:{...i(z,["patient"]),...i(Y,["ANCVitals"]),...i(J,["respiratory","pallor","breastExam","vaginalInspection","cervicalExam","oedemaPresence"]),...i(q,["fetalAssessment","fetalDetails"]),...i(R,["presentingSigns"])},mounted(){this.markWizard()},watch:{vitals:{handler(){this.markWizard()},deep:!0},DangerSigns:{handler(){this.markWizard()},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},diagnosis:{handler(){this.markWizard()},deep:!0}},setup:()=>({chevronBackOutline:f,checkmark:x,hasValidationErrors:[]}),methods:{markWizard(){},getSaveFunction(){},deleteDisplayData:a=>a.map((a=>(null==a||delete a.display,null==a?void 0:a.data))),async saveData(){if(await this.validaterowData())return void F("Vitals form has errors");const a=q();await a.validate()?(this.saveVitals(),this.saveMaternalExam(),this.saveAbdominalExam(),this.savePresentingSigns(),await this.$router.push("contact"),await N()):F("Abdominal exam section has errors")},async buildVitals(){return[...await Q(this.ANCVitals),...await $(this.ANCVitals)]},async buildMaternalExam(){return[...await Z(this.pallor),...await $(this.pallor),...await Q(this.pallor),...await Z(this.respiratory),...await $(this.respiratory),...await Q(this.respiratory),...await $(this.breastExam),...await Q(this.breastExam),...await Z(this.breastExam),...await $(this.vaginalInspection),...await Q(this.vaginalInspection),...await Z(this.vaginalInspection),...await $(this.cervicalExam),...await Q(this.cervicalExam),...await Z(this.cervicalExam),...await $(this.oedemaPresence),...await Q(this.oedemaPresence),...await Z(this.oedemaPresence)]},async buildAbdominalExam(){return[...await Q(this.fetalAssessment),...await Z(this.fetalAssessment),...await $(this.fetalAssessment),...await Q(this.fetalDetails),...await Z(this.fetalDetails),...await $(this.fetalDetails)]},async buildPresentingSigns(){return[...await Q(this.presentingSigns),...await Z(this.presentingSigns),...await $(this.presentingSigns)]},async saveVitals(){const a=M.getUserID(),t=new G(this.patient.patientID,a);await t.onFinish(this.ANCVitals)},async validaterowData(){var a;const t=M.getUserID(),e=new G(this.patient.patientID,t);U.getAgeInYears(null===(a=this.patient)||void 0===a||null===(a=a.personInformation)||void 0===a?void 0:a.birthdate),this.hasValidationErrors=[];let i=!1;return this.ANCVitals.forEach(((a,t)=>{var s;null!=a&&null!==(s=a.data)&&void 0!==s&&s.rowData&&a.data.rowData.forEach(((a,s)=>{a.colData.some(((a,n)=>{const l=e.validator(a);return a.name,(null==l?void 0:l.length)>0?(i=!0,this.ANCVitals[t].data.rowData[s].colData[n].alertsErrorMassage=l.flat(1/0)[0]):this.ANCVitals[t].data.rowData[s].colData[n].alertsErrorMassage="",!1}))}))})),this.ANCVitals.validationStatus=!i,i},async saveMaternalExam(){if(this.pallor.length>=0||this.cervicalExam.length>=0||this.vaginalInspection.length>=0||this.breastExam.length>=0){const a=M.getUserID(),e=new t(this.patient.patientID,a);if(!(await e.createEncounter()))return B("Unable to create maternal exam encounter");if(!(await e.saveObservationList(await this.buildMaternalExam())))return B("Unable to create maternal exam details!");C("Maternal exam details have been created")}console.log(await this.buildMaternalExam())},async saveAbdominalExam(){if(this.fetalAssessment.length>=0||this.fetalDetails.length>=0){const a=M.getUserID(),t=new ta(this.patient.patientID,a);if(!(await t.createEncounter()))return B("Unable to create abdominal exam encounter");if(!(await t.saveObservationList(await this.buildAbdominalExam())))return B("Unable to create abdominal exam details!");C("Abdominal exam details have been created")}console.log(await this.buildAbdominalExam())},async savePresentingSigns(){if(this.presentingSigns.length>=0){const a=M.getUserID(),t=new ea(this.patient.patientID,a);if(!(await t.createEncounter()))return B("Unable to create presenting signs encounter");if(!(await t.saveObservationList(await this.buildPresentingSigns())))return B("Unable to create presenting signs details!");C("Presenting signs details have been created")}console.log(await this.buildPresentingSigns())},openModal(){V(H)}}});a("default",T(ia,[["render",function(a,t,e,i,s,n){const l=I("Toolbar"),r=I("DemographicBar"),o=I("Stepper"),c=I("ion-content"),d=I("BasicFooter"),u=I("ion-page");return E(),S(u,null,{default:_((()=>[j(l),j(c,{fullscreen:!0},{default:_((()=>[j(r),j(o,{stepperTitle:"Physical examination",wizardData:a.wizardData,onUpdateStatus:a.markWizard,StepperData:a.StepperData,backUrl:a.userRoleSettings.url,backBtn:a.userRoleSettings.btnName,getSaveFunction:a.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])])),_:1}),j(d,{onFinishBtn:t[0]||(t[0]=t=>a.saveData())})])),_:1})}]]))}}}));
