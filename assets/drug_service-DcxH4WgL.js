import{S as s,l as g,q as u}from"./index-DPgL8VFP.js";class D extends s{constructor(){super()}static getDrugs(e={}){return super.getJson("/drugs",e)}static getOPDDrugs(e={}){return super.getJson("OPD_drugslist",e)}static async getOfflineOPDDrugs(e={}){if(s.getUseIndexDBStatus()||g())try{const{name:r="",page:t=1,page_size:a=10}=e,n=r?{name:"%".concat(r,"%")}:{};return await u("drugs",{likeClause:n,currentPage:t,itemsPerPage:a}).then(i=>i.records)}catch(r){throw console.error("Error fetching offline OPD drugs:",r.message),r}else return await this.getOPDDrugs(e)}static getDrugById(e){return super.getJson("drug",{drug_id:e})}static async getOfflineDrugById(e){return s.getUseIndexDBStatus()||g()?await u("drugs",{whereClause:{drug_id:e},currentPage:1,itemsPerPage:1}).then(t=>t.records[0]):await this.getDrugById(e)}}export{D};
