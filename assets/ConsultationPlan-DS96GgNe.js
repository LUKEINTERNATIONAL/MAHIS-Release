import{d as W,V as G,G as F,S as z,ad as U,E as m,y as B,f as w,z as C,k as $,l as g,aa as o,b4 as Y,D as J,M as Q,J as j,aO as q,bJ as X,aP as Z,aN as K,aQ as tt,W as et,cy as at,U as st,T as it,b8 as nt,ba as ot,r as rt,aS as ct,cg as lt,e as L,m as T}from"./vendor-8nEYVyB7.js";import{w as pt,_ as H,z as ut,T as dt,ac as mt,S as u,t as d,H as D,J as k,g as ht,k as h,a6 as b,aO as O,j as S,h as _,l as v,Q as gt,aP as c,m as M,aQ as Dt,o as ft,aR as Pt,a7 as St,aS as yt,aT as vt,V as wt,a8 as It,aU as bt,aV as Ot,aW as _t,u as At,i as Ct,P as Lt,X as Tt,Z as kt}from"./index-7qwbP5UI.js";import{D as Mt}from"./DemographicBar-CQWseuK3.js";import{S as Nt}from"./SaveProgressModal-Bs2GXgyX.js";import{S as Et,d as Wt,T as Ft,i as zt,l as Ut,k as Bt,s as $t}from"./Stepper-dfCMn-tB.js";import{l as A}from"./lodash-Dt8AsbQm.js";import{D as Ht}from"./diagnosis-q1eku1sT.js";import{d as N,a as f,f as E}from"./formatServerData-DY5RXAMO.js";import{P as Rt}from"./patient_complaints_service-CB_ayVQ-.js";import{A as I}from"./app_encounter_service-DR5HCXoD.js";import{B as Vt}from"./BasicFooter-YzftIL1x.js";import{W as xt}from"./workflow_service-Dn4JB8gn.js";import{_ as Gt}from"./SetEncounter.vue_vue_type_script_lang-DfSVLMme.js";import{O as Yt}from"./OPDPrintingModal-CecykSdy.js";import{u as Jt}from"./usePatientProfile-CgZrJERd.js";import"./previousVitals-BuJOkgeo.js";import"./apexcharts-BZW0LBrS.js";import"./SvgDynamicColor-BtXmdsK-.js";import"./group_validation-DJ5Q4Z77.js";import"./lab_order-BHL-aLET.js";import"./ncd_appointment_service-CtrmJup6.js";import"./clinicalDaysStore-Bupvnt8F.js";import"./UpcomingFeature-gu39BZua.js";import"./DatePicker.vue_vue_type_script_setup_true_lang-JV1QTjNS.js";import"./vitals_service-DlbLtzzc.js";import"./drug_service-BIi1kODD.js";import"./drug_prescription_service-2TEjyBXh.js";import"./appointment_service-BsxWXTYR.js";import"./FeatusModal-x63Z1sdu.js";import"./patient_registration_service-DqW5iI0B.js";import"./relationship_service-5k3lDrA7.js";import"./relations_service-CLEMAHmR.js";import"./FollowUpStore-DA7PglNR.js";import"./BirthRegistration-dmA609_O.js";import"./OutcomeModal-CAlhMRkI.js";import"./SetRelationship.vue_vue_type_script_lang-ChdLwbq9.js";import"./AddVillage-CJ2nybHW.js";import"./NCDNumber-C_H-T3Ly.js";class Qt extends I{constructor(e,a){super(e,111,a)}}class jt extends I{constructor(e,a){super(e,30,a)}}class qt extends I{constructor(e,a){super(e,141,a)}}class Xt extends I{constructor(e,a){super(e,28,a)}}const Zt=W({name:"Menu",components:{IonContent:U,IonHeader:z,IonItem:F,IonFooter:G,DynamicButton:pt},data(){return{}},props:{status:{type:Boolean,default:!0},name:{type:String,default:"Save and end visit"}},methods:{}}),Kt={class:"button-container"};function te(t,e,a,s,n,l){const y=m("DynamicButton"),i=m("ion-footer");return w(),B(i,{translucent:!0,class:"ion-no-border"},{default:C(()=>[$("div",Kt,[g(y,{name:t.name,iconSlot:"end",onClick:e[0]||(e[0]=p=>t.$emit("finishBtn"))},null,8,["name"])])]),_:1})}const ee=H(Zt,[["render",te],["__scopeId","data-v-e844e8f2"]]),ae=W({name:"ConsultationPlan",mixins:[Wt,Gt],components:{OPDPrintingModal:Yt,CheckInConfirmationModal:mt,IonContent:U,IonHeader:z,IonMenuButton:ot,IonPage:nt,IonTitle:it,IonToolbar:st,IonLoading:at,Toolbar:dt,ToolbarSearch:ut,DemographicBar:Mt,IonButton:et,IonCard:tt,IonCardContent:K,IonCardHeader:Z,IonCardSubtitle:X,IonCardTitle:q,IonAccordion:j,IonAccordionGroup:Q,IonItem:F,IonLabel:J,IonModal:Y,Stepper:Et,BasicFooter:Vt,OPDFooter:ee},data(){return{openStepper:"1",wizardData:[],StepperData:[],isOpen:!1,hasPatientsWaitingForLab:!1,iconsContent:Ct,isLoading:!1,isLoadingPrinter:!1,patients:[],showAlert:!1,checkedIn:!1,printModalOpen:!1}},props:{list:{default:""}},computed:{...o(At,["patient"]),...o(_t,["pregnancy"]),...o(Ot,["presentingComplaints"]),...o(bt,["pastMedicalHistory"]),...o(It,["vitals"]),...o(wt,["investigations"]),...o(vt,["OPDdiagnosis"]),...o(yt,["physicalExam"]),...o(St,["selectedMedicalDrugsList","nonPharmalogicalTherapyAndOtherNotes","selectedMedicalAllergiesList"]),...o(Pt,["adult","minor"]),...o(b,["outcomes"]),...o(ft,["OPDActivities"]),...o(v,["patientsWaitingForVitals","patientsWaitingForConsultation","patientsWaitingForLab","patientsWaitingForDispensation","counter"]),...o(Dt,["currentSelectedNextAppointmentDate"])},async created(){},async mounted(){await this.getData(),await this.fetchPatientLabStageData(),this.markWizard()},watch:{patientsWaitingForLab(t){this.hasPatientsWaitingForLab=t.some(e=>e.patient_id===this.patient.patientID),this.showAlert=this.hasPatientsWaitingForLab,this.showAlert&&setTimeout(()=>{this.showAlert=!1},15e3)},vitals:{handler(){this.markWizard()},deep:!0},$route:{async handler(){await this.getData(),this.markWizard(),this.fetchPatientLabStageData(),this.hasPatientsWaitingForLab=!1},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},OPDdiagnosis:{handler(){this.markWizard()},deep:!0},selectedMedicalDrugsList:{handler(){this.markWizard()}},outcomes:{handler(){this.markWizard()}},currentSelectedNextAppointmentDate:{handler(){this.markWizard()}},hasPatientsWaitingForLab:{immediate:!0,handler(t){}}},setup(){const{printVisitSummary:t}=Jt(),e=rt([]);async function a(i){const p=new Lt,r=await Tt.getEncounters(p.getID(),{date:i});await s(r)}async function s(i){var p;try{const r=(p=i.find(P=>P.type.name==="PRESENTING COMPLAINTS"))==null?void 0:p.observations;r?e.value=await l(n(r,"Presenting complaint"),"coded"):e.value=[]}catch(r){console.error("Error setting presenting complaints encounters:",r)}}async function n(i,p){return i==null?void 0:i.filter(r=>r.concept.concept_names.some(P=>P.name===p))}async function l(i,p){return i.length>0?Promise.all(i.map(async r=>await kt.getConceptName(r.value_coded))):[]}return(async()=>{const i=new Date().toISOString().split("T")[0];await a(i)})(),{presentingComplaintsValue:e,printVisitSummary:t,loadSavedEncounters:a,chevronBackOutline:lt,checkmark:ct}},methods:{endConsultation(){},togglePrintModal(){this.printModalOpen=!this.printModalOpen},closeCheckInModal(){this.printModalOpen=!1},async printYes(){this.isLoadingPrinter=!0,h("Printing consultation summary... Please wait.");try{await this.printVisitSummary(),h("Consultation summary printed successfully!"),setTimeout(()=>{this.$router.push("home")},3500)}catch(t){M("Failed to print consultation summary.")}finally{this.isLoadingPrinter=!1}},async printNo(){h("Patient has finished consultation!"),this.$router.push("home")},getSaveFunction(t){if(t<this.StepperData.length-1)switch(t){case 0:return this.presentingComplaintsValue.length===0?this.saveClinicalAssessment:()=>Promise.resolve();case 1:return()=>Promise.resolve();case 2:return()=>Promise.resolve();case 3:return()=>Promise.resolve();default:return()=>Promise.resolve()}else return async()=>{await this.saveDiagnosis(),await this.saveTreatmentPlan(),await b().saveOutcomPatientData(),O();const e=await _(),a=e?e.code:null;if(!a){M("Location ID could not be found. Please check your settings.");return}this.userRole!=="Lab"?(await S.addPatientToStage(this.patient.patientID,D.todayDateFormatted(),"DISPENSATION",a),await v().refresh(a),this.$router.push("home"),h("Patient has finished consultation!")):(await S.addPatientToStage(this.patient.patientID,D.todayDateFormatted(),"CONSULTATION",a),await v().refresh(a),this.$router.push("home"),h("Lab results submitted. Patient can return to consultation"))}},async fetchPatientLabStageData(){const t=await _(),e=t?t.code:null;if(e){const a=await S.getPatientList("LAB",e);this.patient.patientID&&(this.hasPatientsWaitingForLab=a.some(s=>s.patient_id===this.patient.patientID))}},setList(){const t={VITALS:this.patientsWaitingForVitals,CONSULTATION:this.patientsWaitingForConsultation,LAB:this.patientsWaitingForLab,DISPENSATION:this.patientsWaitingForDispensation};this.patients=t[this.list]||[]},async getData(){try{this.wizardData=[],this.StepperData=[];const{name:t}=await xt.nextTask(this.patient.patientID);console.log("ðŸš€ ~ getData ~ name:",t);for(let e=0;e<this.OPDActivities.length;e++){let a="common_step";t=="PRESENTING COMPLAINTS"&&this.OPDActivities[e]=="Clinical Assessment"&&(this.openStepper=e+1,a="open_step common_step"),t=="LAB RESULTS"&&this.OPDActivities[e]=="Investigations"&&(this.openStepper=e+1,a="open_step common_step"),t=="OUTPATIENT DIAGNOSIS"&&this.OPDActivities[e]=="Diagnosis"&&(this.openStepper=e+1,a="open_step common_step"),t=="PRESCRIPTION"&&this.OPDActivities[e]=="Treatment Plan"&&(this.openStepper=e+1,a="open_step common_step"),t=="PATIENT OUTCOME"&&this.OPDActivities[e]=="Outcome"&&(this.openStepper=e+1,a="open_step common_step");let s=this.OPDActivities[e],n=this.OPDActivities[e];this.OPDActivities[e]=="Diagnosis"&&(n="OPDDiagnosis"),this.OPDActivities[e]=="Treatment Plan"&&(n="OPDTreatmentPlan");const l=e+1;this.wizardData.push({title:s,class:a,checked:e===0?!1:"",disabled:!1,number:l,last_step:e===this.OPDActivities.length-1?"last_step":""}),this.StepperData.push({title:s,component:n.replace(/\s+/g,""),value:l.toString()})}}catch(t){console.error(t)}},markWizard(){this.presentingComplaints?c(this.wizardData,"Clinical Assessments",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Clinical Assessments",{checked:!1}),this.investigations[0].selectedData.length>0?c(this.wizardData,"Investigations",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Investigations",{checked:!1}),this.OPDdiagnosis[0].selectedData.length>0?c(this.wizardData,"Diagnosis",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Diagnosis",{checked:!1}),this.selectedMedicalDrugsList.length>0?c(this.wizardData,"Treatment Plan",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Treatment Plan",{checked:!1}),this.currentSelectedNextAppointmentDate?c(this.wizardData,"Next Appointment",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Next Appointment",{checked:!1}),this.outcomes.length>0?c(this.wizardData,"Outcome",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Outcome",{checked:!1})},getFormatedData(t){return t.map(e=>(e==null?void 0:e.data[0])||(e==null?void 0:e.data))},async saveClinicalAssessment(){this.isLoading=!0;try{const t=await gt.getAll(this.patient.patientID,"Presenting complaint");let e=[];if(t&&(e=t.filter(a=>D.toStandardHisFormat(D.sessionDate())===D.toStandardHisFormat(a.obs_datetime))),this.presentingComplaints[0].selectedData.length>0||e.length>0)await this.saveConsciousness(),await this.savePresentingComplaints(),await this.saveWomenStatus(),await this.savePastMedicalHistory(),await this.saveAllergies(),await this.savePhysicalExam(),O();else{d("Patient complaints are required");return}}catch(t){}finally{this.isLoading=!1}},async saveData(){try{await this.saveDiagnosis(),await this.saveTreatmentPlan(),await b().saveOutcomPatientData(),O();const t=await S.getCheckInStatus(this.patient.patientID);await S.checkOutPatient(t[0].id,D.todayDateFormatted());const e=await _(),a=e?e.code:null;await v().refresh(a),this.checkedIn=!1}catch(t){}this.togglePrintModal()},async savePastMedicalHistory(){const t=await this.buildPastMedicalHistory(),e=u.getUserID();if(t.length>0){const a=new jt(this.patient.patientID,e);if(!await a.createEncounter())return d("Unable to create past medical history encounter");if(!await a.saveObservationList(t))return d("Unable to create past medical history!");h("Past medical history has been created")}},async savePresentingComplaints(){if(this.presentingComplaints[0].selectedData.length>0){const t=u.getUserID(),e=new Rt(this.patient.patientID,t);if(!await e.createEncounter())return d("Unable to create patient complaints encounter");if(!await e.saveObservationList(this.getFormatedData(this.presentingComplaints[0].selectedData)))return d("Unable to create patient complaints  !");h("Patient complaints has been created")}this.presentingComplaints[0].selectedData},async savePhysicalExam(){const t=await this.buildPhysicalExamination();if(t.length>0){const e=u.getUserID(),a=new Xt(this.patient.patientID,e);if(!await a.createEncounter())return d("Unable to create patient physical examination encounter");if(!await a.saveObservationList(t))return d("Unable to create patient physical examination  !");h("Physical examination has been created")}},async saveWomenStatus(){const t=await f(this.pregnancy);if(t.length>0){const e=u.getUserID(),a=new Qt(this.patient.patientID,e);if(!await a.createEncounter())return d("Unable to create pregnant Status encounter");if(!await a.saveObservationList(t))return d("Unable to create pregnant Status !");h("Pregnant Status has been created")}},async saveDiagnosis(){if(this.OPDdiagnosis[0].selectedData.length>0){const t=u.getUserID();await new Ht().onSubmit(this.patient.patientID,t,this.getFormatedData(this.OPDdiagnosis[0].selectedData))}this.OPDdiagnosis[0].selectedData=[]},async saveAllergies(){if(u.getUserID(),this.patient.patientID,!A.isEmpty(this.selectedMedicalAllergiesList)){const t=this.mapToAllergies();$t(t)}},async saveTreatmentPlan(){const t=u.getUserID(),e=this.patient.patientID,a=new Ft;if(!A.isEmpty(this.selectedMedicalAllergiesList)){const s=this.mapToAllergies();a.onSubmitAllergies(e,t,s)}if(!A.isEmpty(this.nonPharmalogicalTherapyAndOtherNotes)){const s=k(),n=[{concept_id:2688,obs_datetime:u.getSessionDate(),value_text:this.nonPharmalogicalTherapyAndOtherNotes,location_id:s.facilityLocation.code}];await zt(n)}Ut(),await Bt().saveNonPharmaTherapyPatientData()},saveInvestigations(){},openModal(){ht(Nt)},mapToAllergies(){const t=k();return this.selectedMedicalAllergiesList.map(e=>({concept_id:985,obs_datetime:u.getSessionDate(),value_coded:e.concept_id,location_id:t.facilityLocation.code}))},async buildPastMedicalHistory(){return[...await N(this.pastMedicalHistory),...await f(this.pastMedicalHistory),...await E(this.pastMedicalHistory)]},async saveConsciousness(){if((await f(this.adult)).length>0){const e=u.getUserID(),a=new qt(this.patient.patientID,e);if(!await a.createEncounter())return d("Unable to create patient complaints encounter");const n=D.getAgeInYears(this.patient.personInformation.birthdate);let l;n<18?l=await f(this.minor):l=await f(this.adult),await a.saveObservationList(l)}},async buildPhysicalExamination(){return[...await N(this.physicalExam),...await f(this.physicalExam),...await E(this.physicalExam)]}}}),se={key:0,class:"spinner-overlay"},ie={key:1,class:"pause-alert"};function ne(t,e,a,s,n,l){const y=m("OPDPrintingModal"),i=m("ion-spinner"),p=m("ion-loading"),r=m("Toolbar"),P=m("DemographicBar"),R=m("Stepper"),V=m("ion-content"),x=m("ion-page");return w(),B(x,null,{default:C(()=>[g(y,{onYes:t.printYes,onNo:t.printNo,isOpen:t.printModalOpen,title:"Do you want to print the consultation summary?"},null,8,["onYes","onNo","isOpen"]),t.isLoading?(w(),L("div",se,[g(i,{name:"bubbles"}),e[0]||(e[0]=$("div",{class:"loading-text"},"Please wait...",-1))])):T("",!0),g(p,{"is-open":t.isLoadingPrinter,message:"Printing consultation summary...",spinner:"circles"},null,8,["is-open"]),g(r),g(V,{fullscreen:!0},{default:C(()=>[g(P),g(R,{stepperTitle:t.userRoleSettings.stepperTitle,wizardData:t.wizardData,onUpdateStatus:t.markWizard,StepperData:t.StepperData,openStepper:t.openStepper,backUrl:t.userRoleSettings.url,backBtn:t.userRoleSettings.btnName,getSaveFunction:t.getSaveFunction,hasPatientsWaitingList:t.hasPatientsWaitingForLab,specialButtonLabel:"save & end visit",specialButtonFn:t.saveData,userRole:t.userRole},null,8,["stepperTitle","wizardData","onUpdateStatus","StepperData","openStepper","backUrl","backBtn","getSaveFunction","hasPatientsWaitingList","specialButtonFn","userRole"])]),_:1}),(t.userRole==="Clinician"||t.userRole==="Superuser")&&t.showAlert?(w(),L("div",ie," Consultation for this patient is paused due to lab orders. ")):T("",!0)]),_:1})}const xe=H(ae,[["render",ne],["__scopeId","data-v-bf37a7bc"]]);export{xe as default};
