import{d as u,ar as l,b$ as c,a0 as D,a3 as f,U as h,T as b,as as g,ac as _,G as v,S as I,a9 as w,c2 as y,a1 as S,a2 as L,E as B,e as o,f as n,l as T,z as C,k as p,F as $,L as k,B as E}from"./vendor-BzS-GRGX.js";import{D as F,B as H,aq as O,a4 as s,H as P,A as x,u as A,ar as N,i as M,_ as R}from"./index-TGgrguwo.js";import{D as V}from"./DashBox-CGjCuPOh.js";import{L as j}from"./SvgDynamicColor-CKO9UwFV.js";import{B as q}from"./BasicForm-D1bDQLWE.js";import{p as z}from"./previousDiagnosis-DKQR1IJI.js";import"./lodash-Dt8AsbQm.js";import"./DateInputField-Dk6pJa3t.js";const G=u({name:"Menu",components:{IonContent:w,IonHeader:I,IonItem:v,IonList:_,IonMenu:g,IonTitle:b,IonToolbar:h,IonInput:f,IonPopover:D,DashBox:V,SelectionPopover:O,BasicInputField:H,List:j,BasicForm:q,DynamicButton:F,previousDiagnosis:z,DataTable:c},data(){return{iconsContent:M,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",conditionStatus:"",data:[],diagnosisData:[],popoverOpen:!1,event:"",selectedCondition:"",tableData:[],options:{responsive:!0,select:!1,layout:{topStart:"",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1},header:["Diagnosis","Date"]}},setup(){return{checkmark:L,pulseOutline:S}},computed:{...l(N,["diagnosis"]),...l(A,["patient"])},watch:{$route:{async handler(){await this.setListData()},deep:!0}},async mounted(){await this.setListData(),this.$nextTick(()=>{const a=this.$refs.dataTable.dt;a.columns.adjust().draw(),a.on("click",".delete-btn",t=>{const e=t.target.getAttribute("data-id");this.voidDiagnosis(JSON.parse(e),t)})})},methods:{async voidDiagnosis(a,t){await x("Do you want to delete ".concat(a.name," ?"),t)&&(await s.voidObs(a.id),await this.setListData())},async openEnterResultModal(){await this.setListData()},async setListData(){const a=await s.getAll(this.patient.patientID,"Primary diagnosis"),t=await s.getAll(this.patient.patientID,"Secondary diagnosis"),e=[...a||[],...t||[]];this.tableData=await this.generateListItems(e),c.use(y)},async generateListItems(a){return a.length>0?await Promise.all(a.map(async e=>{const i=await s.getConceptName(e.value_coded),r=e.obs_datetime;return[i,P.toStandardHisFormat(r)]})):[]}}}),J={class:"table-responsive"};function U(a,t,e,i,r,K){const m=B("DataTable");return n(),o("div",J,[T(m,{ref:"dataTable",options:a.options,data:a.tableData,class:"display nowrap",width:"100%"},{default:C(()=>[p("thead",null,[p("tr",null,[(n(!0),o($,null,k(a.header,d=>(n(),o("th",{key:d},E(d),1))),128))])])]),_:1},8,["options","data"])])}const sa=R(G,[["render",U],["__scopeId","data-v-a98eaa9c"]]);export{sa as default};
