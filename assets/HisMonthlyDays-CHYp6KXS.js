import{_ as u,k as c}from"./KbHandler-Afr-bvnV.js";import{y as h,M as p,E as y,_}from"./index-EBUpS4L5.js";import b from"./BaseTextInput-Mpb2dhvQ.js";import{_ as k}from"./FieldMixin.vue_vue_type_script_lang-CCX2z382.js";import{d as V,y as g,e as r,f as l,l as n,z as v,m as D,J as w,F as $}from"./vendor-BZmhsiOO.js";import"./lodash-Dt8AsbQm.js";import"./apexcharts-qhsxYq_s.js";import"./chartjs-DNDlIUTq.js";import"./barcode-qrcode-reader-B_Xr9wLp.js";const K=V({components:{BaseInput:b,HisKeyboard:u,ViewPort:h},mixins:[k],data:()=>({value:"",errors:"",minDays:1,maxDays:30,keyboard:[]}),mounted(){this.init()},activated(){this.init()},methods:{async init(){this.$emit("onFieldActivated",this);let e=p;this.config?(this.config.year&&this.config.month&&(e=this.generateKeypad(this.config.year(this.fdata),this.config.month(this.fdata))),this.config.keyboardActions?this.keyboard=[e,this.config.keyboardActions]:this.keyboard=[e,[["Unknown"]]]):this.keyboard=y,await this.setDefaultValue()},onKbValue(e){this.value=e,this.emitValue()},keypress(e){this.value=c(e,""),this.emitValue()},emitValue(){this.errors="";let e=this.value;if(!e){this.$emit("onValue",null);return}if(e.toString().match(/unknown/i)){this.$emit("onValue",{label:"Unknown",value:"Unknown"});return}if(isNaN(e)){this.errors="Invalid number",this.$emit("onValue",null);return}e=parseInt(e),e<this.minDays||e>this.maxDays?(this.errors="Value number is out of range",this.$emit("onValue",null)):this.$emit("onValue",{label:e,value:e})},generateKeypad(e,o){const t=[[]];this.maxDays=new Date(e,o,0).getDate();let a=0,s=0;for(let i=0;i<this.maxDays;++i)s>7&&(++a,t[a]=[],s=0),t[a].push("".concat(i+1)),++s;return t},async setDefaultValue(){if(this.defaultValue&&!this.value){const e=await this.defaultValue(this.fdata,this.cdata);e&&(this.value=e,this.emitValue())}}},watch:{clear(){this.value=""}}}),C={key:0,style:{color:"red","font-weight":"bold"}};function N(e,o,t,a,s,i){const m=g("base-input"),f=h,d=u;return l(),r($,null,[n(f,null,{default:v(()=>[n(m,{value:e.value,onOnValue:e.onKbValue},null,8,["value","onOnValue"]),e.errors?(l(),r("span",C," **"+w(e.errors)+"** ",1)):D("",!0)]),_:1}),n(d,{kbConfig:e.keyboard,onKeyPress:e.keypress,disabled:!1},null,8,["kbConfig","onKeyPress"])],64)}const I=_(K,[["render",N]]);export{I as default};
