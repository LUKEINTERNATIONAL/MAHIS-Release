import{d as g,ah as o,bi as F,X as U,$ as B,al as D,ak as P,aQ as y,ck as k,aR as M,aP as C,aS as V,N as T,G as $,E as z,a7 as O,cb as W,I as E,a4 as H,aU as L,bF as R,H as s,O as A,f as G,J as d,l as i}from"./vendor-BgCOLJ26.js";import{aW as v,W as N,T as j,S as c,t as n,K as p,aT as q,u as x,k as J,_ as K}from"./index-zKIUFVbm.js";import{D as Q}from"./DemographicBar-D-NE9h1c.js";import{S as X,p as Y,q as Z,r as tt,s as et,t as at,w as ot}from"./Stepper-pQSDmTNB.js";import{f as u,c as r,a as m}from"./formatServerData-CQgiD-Kt.js";import{B as st}from"./BasicFooter-CDzHQ7sQ.js";import{_ as nt}from"./NextAppointment-C4B_WGh6.js";import{_ as it}from"./SetEncounter.vue_vue_type_script_lang-BnbkIk68.js";import"./lodash-NJiRuGo9.js";import"./apexcharts-2AIekHyJ.js";import"./OPDOutcome-B7wlvQRC.js";import"./patient_complaints_service-Bg8VHRfJ.js";import"./DashBox-DxCrEJWa.js";import"./useExposeFromStandardForm-CLHtrkta.js";import"./BasicForm-BIBuVv2s.js";import"./DateInputField-BkeWhLng.js";import"./drug_prescription_service-umAtjqPE.js";import"./Outcome-Ca1cwpgG.js";import"./VitalsMixin.vue_vue_type_script_lang-BoiyelYD.js";import"./TreatmentPlan-BgWDWBJW.js";import"./previousDiagnosis-CmCv0zEr.js";import"./group_validation-DJk-v9uP.js";import"./FeatusModal-B4fdts9G.js";import"./BasicCard-DHdRXTrB.js";import"./PastObstreticHistoryStore-DmEaTZYi.js";import"./SaveProgressModal-Bqn0L01F.js";import"./lab_order-Bym1BCbx.js";import"./UpcomingFeature-Bti184Da.js";import"./ncd_appointment_service-DHf43nyY.js";class rt extends v{constructor(t,a){super(t,57,a)}}class h extends v{constructor(t,a){super(t,151,a)}}const lt=g({name:"Home",mixins:[nt,it],components:{BasicFooter:st,IonContent:H,IonHeader:E,IonMenuButton:W,IonPage:O,IonTitle:z,IonToolbar:$,Toolbar:j,ToolbarSearch:N,DemographicBar:Q,IonButton:T,IonCard:V,IonCardContent:C,IonCardHeader:M,IonCardSubtitle:k,IonCardTitle:y,IonAccordion:P,IonAccordionGroup:D,IonItem:B,IonLabel:U,IonModal:F,Stepper:X},data(){return{wizardData:[{title:"Medical follow-up",class:"common_step",checked:"",icon:!1,disabled:!1,number:1,last_step:""},{title:"Persistent behaviours and symptoms",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Intimate partner violence(IPV)",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:"last_step"}],StepperData:[{title:"Medical follow-up",component:"MedicalFollowUp",value:"1"},{title:"Persistent behaviours and symptoms",component:"PersistentBehaviour",value:"2"},{title:"Intimate partner violence(IPV)",component:"Ipv",value:"3"}],isOpen:!1,iconsContent:J}},computed:{...o(ot,["medicalFollowUp"]),...o(at,["persistentBehaviour"]),...o(et,["physiologicalSymptoms"]),...o(tt,["ipv","ipv1","additionalCare","safety_assessment","physical_violence","beaten_pregnant","strangling","murder_threat","referrals","constant_jealous","woman_threatened"]),...o(Z,["fatalMovement"]),...o(x,["patient"])},mounted(){this.markWizard()},setup(){return{chevronBackOutline:R,checkmark:L}},methods:{markWizard(){},getSaveFunction(){},getFormatedData(e){return e.map(t=>t==null?void 0:t.data)},async saveData(){this.saveMedicalFollowUp(),this.savePersistentBehaviours(),this.saveIPV(),await q(),this.$router.push("contact")},async buildMedicalFollowUp(){return[...await u(this.medicalFollowUp),...await r(this.medicalFollowUp),...await m(this.medicalFollowUp)]},async validations(e,t){return t.every(a=>Y(e,a,this[a]))},async buildPersistentBehaviours(){return[...await u(this.persistentBehaviour),...await r(this.persistentBehaviour),...await m(this.persistentBehaviour)]},async buildCurrentPhysiologicalSymptoms(){return[...await r(this.physiologicalSymptoms)]},async buildIPV(){return[...await r(this.ipv),...await m(this.ipv)]},async buildFetalMovement(){return[...await u(this.fatalMovement)]},async saveMedicalFollowUp(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new rt(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create medical follow up encounter");if(!await t.saveObservationList(await this.buildMedicalFollowUp()))return n("Unable to create patient Medical follow up details!");p("Medical follow up has been created")}console.log(await this.buildMedicalFollowUp())},async savePersistentBehaviours(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new h(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create persistent behaviour encounter");if(!await t.saveObservationList(await this.buildPersistentBehaviours()))return n("Unable to create patient persistent behaviour details!");p("Persistent behaviour details have been created")}console.log(await this.buildPersistentBehaviours())},async saveIPV(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new h(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create IPV encounter");if(!await t.saveObservationList(await this.buildIPV()))return n("Unable to create patient IPV details!");p("IPV details have been created")}console.log(await this.buildIPV())}}});function ct(e,t,a,l,pt,ut){const w=s("Toolbar"),b=s("DemographicBar"),f=s("Stepper"),I=s("ion-content"),S=s("BasicFooter"),_=s("ion-page");return G(),A(_,null,{default:d(()=>[i(w),i(I,{fullscreen:!0},{default:d(()=>[i(b),i(f,{stepperTitle:"Symptoms  and follow up",wizardData:e.wizardData,onUpdateStatus:e.markWizard,StepperData:e.StepperData,backUrl:e.userRoleSettings.url,backBtn:e.userRoleSettings.btnName,getSaveFunction:e.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),i(S,{onFinishBtn:t[0]||(t[0]=mt=>e.saveData())})]),_:1})}const At=K(lt,[["render",ct]]);export{At as default};
