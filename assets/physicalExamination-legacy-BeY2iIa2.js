System.register(["./vendor-legacy-BH_ZsSq_.js","./index-legacy-D5JbQ37a.js","./DemographicBar-legacy-C-DvbCYX.js","./SaveProgressModal-legacy-DycRRjks.js","./Stepper-legacy-BcUK26Yw.js","./formatServerData-legacy-CatjexP1.js","./lodash-legacy-pOOc9Efu.js","./FeatusModal-legacy-Dfwg6VJR.js","./BasicFooter-legacy-D02_3UFS.js","./NextAppointment-legacy-DeuKivFX.js","./SetEncounter.vue_vue_type_script_lang-legacy-Dz3YsqMj.js","./apexcharts-legacy-BgAxpgBq.js","./OPDOutcome-legacy-B5PpbEMT.js","./patient_complaints_service-legacy-DV4rSe1W.js","./DashBox-legacy-D8Uz5Aqv.js","./useExposeFromStandardForm-legacy-BqlK0Dv2.js","./BasicForm-legacy-RVXbktIz.js","./DateInputField-legacy-HQwQxlH0.js","./drug_prescription_service-legacy-C28L4E6m.js","./drug_service-legacy-DFieG4rN.js","./Outcome-legacy-BFaOcQbD.js","./TreatmentPlan-legacy-O_vm_YWg.js","./previousDiagnosis-legacy-RSluGdDH.js","./group_validation-legacy-CYanHvIS.js","./BasicCard-legacy-Ax6D_Gk5.js","./PastObstreticHistoryStore-legacy-D42Xq0Og.js","./lab_order-legacy-DnAkOowP.js","./UpcomingFeature-legacy-DOqjrbdx.js","./stages-legacy-v0Qzume6.js","./ncd_appointment_service-legacy-Cu7LsrnQ.js"],function(a,t){"use strict";var e,s,i,n,l,r,o,c,d,u,g,m,h,p,b,v,w,y,D,x,S,I,f,E,j,_,A,P,V,k,C,M,U,B,F,z,N,O,T,W,L,H,G,R,$,J,Y,Z,K,X,q,Q,aa;return{setters:[a=>{e=a.d,s=a.ao,i=a.b8,n=a.D,l=a.G,r=a.M,o=a.J,c=a.a_,d=a.ca,u=a.a$,g=a.aZ,m=a.b0,h=a.W,p=a.U,b=a.T,v=a.an,w=a.ba,y=a.S,D=a.ah,x=a.aa,S=a.bG,I=a.E,f=a.y,E=a.f,j=a.z,_=a.l},a=>{A=a.aK,P=a.F,V=a.T,k=a.j,C=a.S,M=a.t,U=a.C,B=a.H,F=a.n,z=a.aJ,N=a.u,O=a.i,T=a._},a=>{W=a.D},a=>{L=a.S},a=>{H=a.S,G=a.V,R=a.m,$=a.n,J=a.o},a=>{Y=a.a,Z=a.f,K=a.c},null,a=>{X=a.u},a=>{q=a.B},a=>{Q=a._},a=>{aa=a._},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){class t extends A{constructor(a,t){super(a,95,t)}}class ta extends A{constructor(a,t){super(a,116,t)}}class ea extends A{constructor(a,t){super(a,210,t)}}const sa=e({name:"PhysicalExam",mixins:[Q,aa],components:{BasicFooter:q,IonContent:D,IonHeader:y,IonMenuButton:w,IonPage:v,IonTitle:b,IonToolbar:p,Toolbar:V,ToolbarSearch:P,DemographicBar:W,IonButton:h,IonCard:m,IonCardContent:g,IonCardHeader:u,IonCardSubtitle:d,IonCardTitle:c,IonAccordion:o,IonAccordionGroup:r,IonItem:l,IonLabel:n,IonModal:i,Stepper:H},data:()=>({wizardData:[{title:"Vitals",class:"common_step",checked:!1,disabled:!1,number:1,last_step:""},{title:"Maternal exam",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Abdominal examination",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:""},{title:"Presenting signs for IPV",class:"common_step",checked:"",icon:!1,disabled:!1,number:4,last_step:"last_step"}],StepperData:[{title:"Vitals",component:"",value:"1"},{title:"Maternal exam",component:"MaternalExam",value:"2"},{title:"Abdominal examination",component:"AbdominalExamination",value:"3"},{title:"Presenting signs or conditions for IPV ",component:"PresentingSigns",value:"4"}],isOpen:!1,iconsContent:O}),computed:{...s(N,["patient"]),...s(J,["ANCVitals"]),...s($,["respiratory","pallor","breastExam","vaginalInspection","cervicalExam","oedemaPresence"]),...s(X,["fetalAssessment","fetalDetails"]),...s(R,["presentingSigns"])},mounted(){this.markWizard()},watch:{vitals:{handler(){this.markWizard()},deep:!0},DangerSigns:{handler(){this.markWizard()},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},diagnosis:{handler(){this.markWizard()},deep:!0}},setup:()=>({chevronBackOutline:S,checkmark:x,hasValidationErrors:[]}),methods:{markWizard(){},getSaveFunction(){},deleteDisplayData:a=>a.map(a=>(null==a||delete a.display,null==a?void 0:a.data)),async saveData(){if(await this.validaterowData())return void F("Vitals form has errors");const a=X();await a.validate()?(this.saveVitals(),this.saveMaternalExam(),this.saveAbdominalExam(),this.savePresentingSigns(),await this.$router.push("contact"),await z()):F("Abdominal exam section has errors")},async buildVitals(){return[...await Y(this.ANCVitals),...await K(this.ANCVitals)]},async buildMaternalExam(){return[...await Z(this.pallor),...await K(this.pallor),...await Y(this.pallor),...await Z(this.respiratory),...await K(this.respiratory),...await Y(this.respiratory),...await K(this.breastExam),...await Y(this.breastExam),...await Z(this.breastExam),...await K(this.vaginalInspection),...await Y(this.vaginalInspection),...await Z(this.vaginalInspection),...await K(this.cervicalExam),...await Y(this.cervicalExam),...await Z(this.cervicalExam),...await K(this.oedemaPresence),...await Y(this.oedemaPresence),...await Z(this.oedemaPresence)]},async buildAbdominalExam(){return[...await Y(this.fetalAssessment),...await Z(this.fetalAssessment),...await K(this.fetalAssessment),...await Y(this.fetalDetails),...await Z(this.fetalDetails),...await K(this.fetalDetails)]},async buildPresentingSigns(){return[...await Y(this.presentingSigns),...await Z(this.presentingSigns),...await K(this.presentingSigns)]},async saveVitals(){const a=C.getUserID(),t=new G(this.patient.patientID,a);await t.onFinish(this.ANCVitals)},async validaterowData(){var a;const t=C.getUserID(),e=new G(this.patient.patientID,t);B.getAgeInYears(null===(a=this.patient)||void 0===a||null===(a=a.personInformation)||void 0===a?void 0:a.birthdate),this.hasValidationErrors=[];let s=!1;return this.ANCVitals.forEach((a,t)=>{var i;null!=a&&null!==(i=a.data)&&void 0!==i&&i.rowData&&a.data.rowData.forEach((a,i)=>{a.colData.some((a,n)=>{const l=e.validator(a);return a.name,(null==l?void 0:l.length)>0?(s=!0,this.ANCVitals[t].data.rowData[i].colData[n].alertsErrorMassage=l.flat(1/0)[0]):this.ANCVitals[t].data.rowData[i].colData[n].alertsErrorMassage="",!1})})}),this.ANCVitals.validationStatus=!s,s},async saveMaternalExam(){if(this.pallor.length>=0||this.cervicalExam.length>=0||this.vaginalInspection.length>=0||this.breastExam.length>=0){const a=C.getUserID(),e=new t(this.patient.patientID,a);if(!(await e.createEncounter()))return M("Unable to create maternal exam encounter");if(!(await e.saveObservationList(await this.buildMaternalExam())))return M("Unable to create maternal exam details!");U("Maternal exam details have been created")}console.log(await this.buildMaternalExam())},async saveAbdominalExam(){if(this.fetalAssessment.length>=0||this.fetalDetails.length>=0){const a=C.getUserID(),t=new ta(this.patient.patientID,a);if(!(await t.createEncounter()))return M("Unable to create abdominal exam encounter");if(!(await t.saveObservationList(await this.buildAbdominalExam())))return M("Unable to create abdominal exam details!");U("Abdominal exam details have been created")}console.log(await this.buildAbdominalExam())},async savePresentingSigns(){if(this.presentingSigns.length>=0){const a=C.getUserID(),t=new ea(this.patient.patientID,a);if(!(await t.createEncounter()))return M("Unable to create presenting signs encounter");if(!(await t.saveObservationList(await this.buildPresentingSigns())))return M("Unable to create presenting signs details!");U("Presenting signs details have been created")}console.log(await this.buildPresentingSigns())},openModal(){k(L)}}});a("default",T(sa,[["render",function(a,t,e,s,i,n){const l=I("Toolbar"),r=I("DemographicBar"),o=I("Stepper"),c=I("ion-content"),d=I("BasicFooter"),u=I("ion-page");return E(),f(u,null,{default:j(()=>[_(l),_(c,{fullscreen:!0},{default:j(()=>[_(r),_(o,{stepperTitle:"Physical examination",wizardData:a.wizardData,onUpdateStatus:a.markWizard,StepperData:a.StepperData,backUrl:a.userRoleSettings.url,backBtn:a.userRoleSettings.btnName,getSaveFunction:a.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),_(d,{onFinishBtn:t[0]||(t[0]=t=>a.saveData())})]),_:1})}]]))}}});
