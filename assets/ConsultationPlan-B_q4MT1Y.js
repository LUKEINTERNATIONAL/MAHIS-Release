import{d as W,V as G,G as z,S as E,a9 as U,E as d,y as B,f as w,z as C,k as $,l as g,ar as o,b8 as Y,D as J,M as Z,J as j,a_ as q,ca as X,a$ as K,aZ as Q,b0 as tt,W as et,c_ as at,U as st,T as it,af as nt,ba as ot,r as rt,a2 as ct,bG as lt,e as L,m as k}from"./vendor-Oa4k5SKv.js";import{aP as I,D as pt,_ as H,z as ut,T as dt,aw as ht,S as p,t as u,H as D,N as T,g as mt,ax as gt,k as m,aJ as b,aT as _,j as y,h as O,l as v,a8 as Dt,aU as c,m as M,aV as ft,o as Pt,aW as St,a2 as yt,aX as vt,aY as wt,aD as It,a3 as bt,aZ as _t,a_ as Ot,a$ as At,u as Ct,i as Lt,P as kt,b0 as Tt,ay as Mt}from"./index-BdhC1is7.js";import{D as Ft}from"./DemographicBar-Cn5fDORz.js";import{S as Nt}from"./SaveProgressModal-wuOtf3o3.js";import{S as Wt}from"./Stepper-CsYug1xQ.js";import{e as zt,b as Et,f as Ut,d as Bt,s as $t}from"./NextAppointment-CD8sBIc5.js";import{l as A}from"./lodash-Dt8AsbQm.js";import{D as Ht}from"./diagnosis-BUJjsYhm.js";import{c as F,f as P,a as N}from"./formatServerData-ClxbfvSJ.js";import{P as Vt}from"./patient_complaints_service-DZTLxzYj.js";import{B as xt}from"./BasicFooter-BEs9y31l.js";import{_ as Rt}from"./lab_order-DYr07rRi.js";import{_ as Gt}from"./SetEncounter.vue_vue_type_script_lang-DhrRhgRr.js";import{O as Yt}from"./OPDPrintingModal-Mtn-dnY7.js";import{u as Jt}from"./usePatientProfile-B70RSEB0.js";import"./apexcharts-B1bBG-op.js";import"./DashBox-9Mj3niSm.js";import"./useExposeFromStandardForm-DyzqmNZh.js";import"./BasicForm-B6ipZRal.js";import"./DateInputField-CI9dtAgA.js";import"./LabTestsHistory-hetNZTX6.js";import"./ncd_appointment_service-DlLsT7ZK.js";import"./UpcomingFeature-DUKTDku1.js";import"./Outcome-BLoApgP0.js";import"./group_validation-tm_CyvCS.js";import"./drug_prescription_service-CtO8PPzb.js";import"./drug_service-RcB_GVA0.js";import"./FeatusModal-C9yin9HT.js";import"./PastObstreticHistoryStore-BXBcM3Be.js";import"./previousDiagnosis-B1Nug-YA.js";import"./Registration-N_af85ht.js";import"./useLocation-BBN-07eY.js";import"./vaccines_service-BeINHKt-.js";import"./sms_service-bX4oZAqd.js";import"./EIRreportsStore-CLgfbiO8.js";import"./Export-DTrtYLQh.js";class Zt extends I{constructor(e,a){super(e,111,a)}}class jt extends I{constructor(e,a){super(e,30,a)}}class qt extends I{constructor(e,a){super(e,141,a)}}class Xt extends I{constructor(e,a){super(e,28,a)}}const Kt=W({name:"Menu",components:{IonContent:U,IonHeader:E,IonItem:z,IonFooter:G,DynamicButton:pt},data(){return{}},props:{status:{type:Boolean,default:!0},name:{type:String,default:"Save and end visit"}},methods:{}}),Qt={class:"button-container"};function te(t,e,a,s,n,h){const f=d("DynamicButton"),i=d("ion-footer");return w(),B(i,{translucent:!0,class:"ion-no-border"},{default:C(()=>[$("div",Qt,[g(f,{name:t.name,iconSlot:"end",onClick:e[0]||(e[0]=l=>t.$emit("finishBtn"))},null,8,["name"])])]),_:1})}const ee=H(Kt,[["render",te],["__scopeId","data-v-e844e8f2"]]),ae=W({name:"ConsultationPlan",mixins:[Rt,Gt],components:{OPDPrintingModal:Yt,CheckInConfirmationModal:ht,IonContent:U,IonHeader:E,IonMenuButton:ot,IonPage:nt,IonTitle:it,IonToolbar:st,IonLoading:at,Toolbar:dt,ToolbarSearch:ut,DemographicBar:Ft,IonButton:et,IonCard:tt,IonCardContent:Q,IonCardHeader:K,IonCardSubtitle:X,IonCardTitle:q,IonAccordion:j,IonAccordionGroup:Z,IonItem:z,IonLabel:J,IonModal:Y,Stepper:Wt,BasicFooter:xt,OPDFooter:ee},data(){return{openStepper:"1",wizardData:[],StepperData:[],isOpen:!1,hasPatientsWaitingForLab:!1,iconsContent:Lt,isLoading:!1,isLoadingPrinter:!1,patients:[],showAlert:!1,checkedIn:!1,printModalOpen:!1}},props:{list:{default:""}},computed:{...o(Ct,["patient"]),...o(At,["pregnancy"]),...o(Ot,["presentingComplaints"]),...o(_t,["pastMedicalHistory"]),...o(bt,["vitals"]),...o(It,["investigations"]),...o(wt,["OPDdiagnosis"]),...o(vt,["physicalExam"]),...o(yt,["selectedMedicalDrugsList","nonPharmalogicalTherapyAndOtherNotes","selectedMedicalAllergiesList"]),...o(St,["adult","minor"]),...o(b,["outcomes"]),...o(Pt,["OPDActivities"]),...o(v,["patientsWaitingForVitals","patientsWaitingForConsultation","patientsWaitingForLab","patientsWaitingForDispensation","counter"]),...o(ft,["currentSelectedNextAppointmentDate"])},async created(){},async mounted(){await this.getData(),await this.fetchPatientLabStageData(),this.markWizard()},watch:{patientsWaitingForLab(t){this.hasPatientsWaitingForLab=t.some(e=>e.patient_id===this.patient.patientID),this.showAlert=this.hasPatientsWaitingForLab,this.showAlert&&setTimeout(()=>{this.showAlert=!1},15e3)},vitals:{handler(){this.markWizard()},deep:!0},$route:{async handler(){await this.getData(),this.markWizard(),this.fetchPatientLabStageData(),this.hasPatientsWaitingForLab=!1},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},OPDdiagnosis:{handler(){this.markWizard()},deep:!0},selectedMedicalDrugsList:{handler(){this.markWizard()}},outcomes:{handler(){this.markWizard()}},currentSelectedNextAppointmentDate:{handler(){this.markWizard()}},hasPatientsWaitingForLab:{immediate:!0,handler(t){}}},setup(){const{printVisitSummary:t}=Jt(),e=rt([]);async function a(i){const l=new kt,r=await Tt.getEncounters(l.getID(),{date:i});await s(r)}async function s(i){var l;try{const r=(l=i.find(S=>S.type.name==="PRESENTING COMPLAINTS"))==null?void 0:l.observations;r?e.value=await h(n(r,"Presenting complaint"),"coded"):e.value=[]}catch(r){console.error("Error setting presenting complaints encounters:",r)}}async function n(i,l){return i==null?void 0:i.filter(r=>r.concept.concept_names.some(S=>S.name===l))}async function h(i,l){return i.length>0?Promise.all(i.map(async r=>await Mt.getConceptName(r.value_coded))):[]}return(async()=>{const i=new Date().toISOString().split("T")[0];await a(i)})(),{presentingComplaintsValue:e,printVisitSummary:t,loadSavedEncounters:a,chevronBackOutline:lt,checkmark:ct}},methods:{endConsultation(){},togglePrintModal(){this.printModalOpen=!this.printModalOpen},closeCheckInModal(){this.printModalOpen=!1},async printYes(){this.isLoadingPrinter=!0,m("Printing consultation summary... Please wait.");try{await this.printVisitSummary(),m("Consultation summary printed successfully!"),setTimeout(()=>{this.$router.push("home")},3500)}catch(t){M("Failed to print consultation summary.")}finally{this.isLoadingPrinter=!1}},async printNo(){m("Patient has finished consultation!"),this.$router.push("home")},getSaveFunction(t){if(t<this.StepperData.length-1)switch(t){case 0:return this.presentingComplaintsValue.length===0?this.saveClinicalAssessment:()=>Promise.resolve();case 1:return()=>Promise.resolve();case 2:return()=>Promise.resolve();case 3:return()=>Promise.resolve();default:return()=>Promise.resolve()}else return async()=>{await this.saveDiagnosis(),await this.saveTreatmentPlan(),await b().saveOutcomPatientData(),_();const e=await O(),a=e?e.code:null;if(!a){M("Location ID could not be found. Please check your settings.");return}this.userRole!=="Lab"?(await y.addPatientToStage(this.patient.patientID,D.todayDateFormatted(),"DISPENSATION",a),await v().refresh(a),this.$router.push("home"),m("Patient has finished consultation!")):(await y.addPatientToStage(this.patient.patientID,D.todayDateFormatted(),"CONSULTATION",a),await v().refresh(a),this.$router.push("home"),m("Lab results submitted. Patient can return to consultation"))}},async fetchPatientLabStageData(){const t=await O(),e=t?t.code:null;if(e){const a=await y.getPatientList("LAB",e);this.patient.patientID&&(this.hasPatientsWaitingForLab=a.some(s=>s.patient_id===this.patient.patientID))}},setList(){const t={VITALS:this.patientsWaitingForVitals,CONSULTATION:this.patientsWaitingForConsultation,LAB:this.patientsWaitingForLab,DISPENSATION:this.patientsWaitingForDispensation};this.patients=t[this.list]||[]},async getData(){try{this.wizardData=[],this.StepperData=[];for(let t=0;t<this.OPDActivities.length;t++){let e="common_step";this.OPDActivities[t]=="Clinical Assessment"&&(this.openStepper=t+1),this.OPDActivities[t]=="Investigations"&&(this.openStepper=t+1),this.OPDActivities[t]=="Diagnosis"&&(this.openStepper=t+1),this.OPDActivities[t]=="Treatment Plan"&&(this.openStepper=t+1),this.OPDActivities[t]=="Outcome"&&(this.openStepper=t+1);let a=this.OPDActivities[t],s=this.OPDActivities[t];this.OPDActivities[t]=="Diagnosis"&&(s="OPDDiagnosis"),this.OPDActivities[t]=="Treatment Plan"&&(s="OPDTreatmentPlan");const n=t+1;this.wizardData.push({title:a,class:e,checked:t===0?!1:"",disabled:!1,number:n,last_step:t===this.OPDActivities.length-1?"last_step":""}),this.StepperData.push({title:a,component:s.replace(/\s+/g,""),value:n.toString()})}}catch(t){console.error(t)}},markWizard(){this.presentingComplaints?c(this.wizardData,"Clinical Assessments",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Clinical Assessments",{checked:!1}),this.investigations[0].selectedData.length>0?c(this.wizardData,"Investigations",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Investigations",{checked:!1}),this.OPDdiagnosis[0].selectedData.length>0?c(this.wizardData,"Diagnosis",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Diagnosis",{checked:!1}),this.selectedMedicalDrugsList.length>0?c(this.wizardData,"Treatment Plan",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Treatment Plan",{checked:!1}),this.currentSelectedNextAppointmentDate?c(this.wizardData,"Next Appointment",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Next Appointment",{checked:!1}),this.outcomes.length>0?c(this.wizardData,"Outcome",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Outcome",{checked:!1})},getFormatedData(t){return t.map(e=>(e==null?void 0:e.data[0])||(e==null?void 0:e.data))},async saveClinicalAssessment(){this.isLoading=!0;try{const t=await Dt.getAll(this.patient.patientID,"Presenting complaint");let e=[];if(t&&(e=t.filter(a=>D.toStandardHisFormat(D.sessionDate())===D.toStandardHisFormat(a.obs_datetime))),this.presentingComplaints[0].selectedData.length>0||e.length>0)await this.saveConsciousness(),await this.savePresentingComplaints(),await this.saveWomenStatus(),await this.savePastMedicalHistory(),await this.saveAllergies(),await this.savePhysicalExam(),_();else{u("Patient complaints are required");return}}catch(t){}finally{this.isLoading=!1}},async saveData(){try{await this.saveDiagnosis(),await this.saveTreatmentPlan(),await b().saveOutcomPatientData(),_();const t=await y.getCheckInStatus(this.patient.patientID);await y.checkOutPatient(t[0].id,D.todayDateFormatted());const e=await O(),a=e?e.code:null;await v().refresh(a),this.checkedIn=!1}catch(t){}this.togglePrintModal()},async savePastMedicalHistory(){const t=await this.buildPastMedicalHistory(),e=p.getUserID();if(t.length>0){const a=new jt(this.patient.patientID,e);if(!await a.createEncounter())return u("Unable to create past medical history encounter");if(!await a.saveObservationList(t))return u("Unable to create past medical history!");m("Past medical history has been created")}},async savePresentingComplaints(){if(this.presentingComplaints[0].selectedData.length>0){const t=p.getUserID(),e=new Vt(this.patient.patientID,t);if(!await e.createEncounter())return u("Unable to create patient complaints encounter");if(!await e.saveObservationList(this.getFormatedData(this.presentingComplaints[0].selectedData)))return u("Unable to create patient complaints  !");m("Patient complaints has been created")}this.presentingComplaints[0].selectedData},async savePhysicalExam(){const t=await this.buildPhysicalExamination();if(t.length>0){const e=p.getUserID(),a=new Xt(this.patient.patientID,e);if(!await a.createEncounter())return u("Unable to create patient physical examination encounter");if(!await a.saveObservationList(t))return u("Unable to create patient physical examination  !");m("Physical examination has been created")}},async saveWomenStatus(){const t=await P(this.pregnancy);if(t.length>0){const e=p.getUserID(),a=new Zt(this.patient.patientID,e);if(!await a.createEncounter())return u("Unable to create pregnant Status encounter");if(!await a.saveObservationList(t))return u("Unable to create pregnant Status !");m("Pregnant Status has been created")}},async saveDiagnosis(){var t,e,a,s;if(this.OPDdiagnosis[0].selectedData.length>0){const n=p.getUserID(),h=new Ht,f=this.getFormatedData(this.OPDdiagnosis[0].selectedData);console.log(this.patient),(s=(a=(e=(t=this.patient).diagnosis)!=null?e:t.diagnosis={}).unsaved)!=null||(a.unsaved=[]),this.patient.diagnosis.unsaved.push(...f),await gt(this.patient),await h.onSubmit(this.patient.patientID,n,this.getFormatedData(this.OPDdiagnosis[0].selectedData))}this.OPDdiagnosis[0].selectedData=[]},async saveAllergies(){if(p.getUserID(),this.patient.patientID,!A.isEmpty(this.selectedMedicalAllergiesList)){const t=this.mapToAllergies();$t(t)}},async saveTreatmentPlan(){const t=p.getUserID(),e=this.patient.patientID,a=new zt;if(!A.isEmpty(this.selectedMedicalAllergiesList)){const s=this.mapToAllergies();a.onSubmitAllergies(e,t,s)}if(!A.isEmpty(this.nonPharmalogicalTherapyAndOtherNotes)){const s=T(),n=[{concept_id:2688,obs_datetime:p.getSessionDate(),value_text:this.nonPharmalogicalTherapyAndOtherNotes,location_id:s.facilityLocation.code}];await Et(n)}Ut(),await Bt().saveNonPharmaTherapyPatientData()},saveInvestigations(){},openModal(){mt(Nt)},mapToAllergies(){const t=T();return this.selectedMedicalAllergiesList.map(e=>({concept_id:985,obs_datetime:p.getSessionDate(),value_coded:e.concept_id,location_id:t.facilityLocation.code}))},async buildPastMedicalHistory(){return[...await F(this.pastMedicalHistory),...await P(this.pastMedicalHistory),...await N(this.pastMedicalHistory)]},async saveConsciousness(){if((await P(this.adult)).length>0){const e=p.getUserID(),a=new qt(this.patient.patientID,e);if(!await a.createEncounter())return u("Unable to create patient complaints encounter");const n=D.getAgeInYears(this.patient.personInformation.birthdate);let h;n<18?h=await P(this.minor):h=await P(this.adult),await a.saveObservationList(h)}},async buildPhysicalExamination(){return[...await F(this.physicalExam),...await P(this.physicalExam),...await N(this.physicalExam)]}}}),se={key:0,class:"spinner-overlay"},ie={key:1,class:"pause-alert"};function ne(t,e,a,s,n,h){const f=d("OPDPrintingModal"),i=d("ion-spinner"),l=d("ion-loading"),r=d("Toolbar"),S=d("DemographicBar"),V=d("Stepper"),x=d("ion-content"),R=d("ion-page");return w(),B(R,null,{default:C(()=>[g(f,{onYes:t.printYes,onNo:t.printNo,isOpen:t.printModalOpen,title:"Do you want to print the consultation summary?"},null,8,["onYes","onNo","isOpen"]),t.isLoading?(w(),L("div",se,[g(i,{name:"bubbles"}),e[0]||(e[0]=$("div",{class:"loading-text"},"Please wait...",-1))])):k("",!0),g(l,{"is-open":t.isLoadingPrinter,message:"Printing consultation summary...",spinner:"circles"},null,8,["is-open"]),g(r),g(x,{fullscreen:!0},{default:C(()=>[g(S),g(V,{stepperTitle:t.userRoleSettings.stepperTitle,wizardData:t.wizardData,onUpdateStatus:t.markWizard,StepperData:t.StepperData,openStepper:t.openStepper,backUrl:t.userRoleSettings.url,backBtn:t.userRoleSettings.btnName,getSaveFunction:t.getSaveFunction,hasPatientsWaitingList:t.hasPatientsWaitingForLab,specialButtonLabel:"save & end visit",specialButtonFn:t.saveData,userRole:t.userRole},null,8,["stepperTitle","wizardData","onUpdateStatus","StepperData","openStepper","backUrl","backBtn","getSaveFunction","hasPatientsWaitingList","specialButtonFn","userRole"])]),_:1}),(t.userRole==="Clinician"||t.userRole==="Superuser")&&t.showAlert?(w(),L("div",ie," Consultation for this patient is paused due to lab orders. ")):k("",!0)]),_:1})}const Ve=H(ae,[["render",ne],["__scopeId","data-v-13a9186a"]]);export{Ve as default};
