var Ut=Object.defineProperty;var Vt=(e,t,n)=>t in e?Ut(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var te=(e,t,n)=>Vt(e,typeof t!="symbol"?t+"":t,n);import{d as J,ao as re,V as dt,ap as Le,an as ct,D as Oe,dr as ut,dy as pt,ak as Be,G as ge,T as fe,U as Pe,ah as ve,S as we,b8 as qe,W as Ee,aR as mt,X as We,E as v,y as se,f as w,z as c,l as o,k as b,B as $,A as x,e as L,F as ue,L as Ie,a$ as Y,cl as ht,r as M,c as le,w as Ce,a as Me,u as B,I as ze,ag as Jt,j as qt,ar as Wt,n as zt,cw as Ze,cz as Gt,R as Te,m as ne,a8 as Yt,ab as gt,a9 as jt,aa as Kt,aj as Xt,p as me,aZ as Qt,aY as Zt,ay as en,aW as tn,bw as nn,br as an,ae as sn,aP as on}from"./vendor-sxlzK-28.js";import{D as _e,aK as rn,S as C,m as Q,H as k,aA as de,C as z,u as W,_ as j,au as et,i as ae,bi as he,aH as X,av as ln,t as Z,n as Ae,b1 as tt,p as Re,aC as Ve,l as dn,ba as cn,bb as un,bj as pn,G as ft,U as nt,j as vt,b9 as mn,B as _t,bh as hn,y as K,aL as Dt,ab as Fe,bk as gn,aN as yt,P as bt,aa as fn,aI as vn,bl as _n,bm as Dn,an as yn,O as bn,a3 as Ge,aU as oe,A as Ne,bn as Sn,d as Cn,as as He,v as On,at as wn,q as at}from"./index-OHScCNM-.js";import{D as In}from"./DashBox-BpiuFjfe.js";import{B as G}from"./BasicForm-Btw_EEpA.js";import{u as Je,P as St,L as Mn}from"./lab_order-C2qFY7y-.js";import{v as st}from"./group_validation-Bi_lJNeS.js";import{l as Se}from"./lodash-Dt8AsbQm.js";import{g as kn,a as Ct,D as ie}from"./drug_prescription_service-C7b1JMEb.js";import{A as Nn}from"./ncd_appointment_service-DQB1A3Bw.js";import{D as An}from"./DateInputField-BiIa8E8u.js";import{D as Ot}from"./drug_service-CxAFNLxp.js";const Ln=J({components:{IonButtons:mt,IonButton:Ee,IonModal:qe,IonHeader:we,IonContent:ve,IonToolbar:Pe,IonTitle:fe,IonItem:ge,IonList:Be,IonAvatar:pt,IonImg:ut,IonLabel:Oe,IonPage:ct,IonMenu:Le,BasicForm:G,IonFooter:dt,DynamicButton:_e},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{type:Object,default:{}},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},computed:{...re(W,["patient"]),...re(Je,["labResults"])},mounted(){},methods:{dismiss(){We.dismiss()},async saveResults(){const e=await this.buildResults();this.patient.labOrders.results=[{encounter_id:"",date:k.sessionDate(),measures:e,test_id:this.labResults[0].id}];let t=!1;for(let n=0;n<this.patient.labOrders.unsaved.length;n++)if(this.patient.labOrders.unsaved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.unsaved[n].tests&&this.patient.labOrders.unsaved[n].tests.length>0){this.patient.labOrders.unsaved[n].tests[0].result=e,t=!0;break}if(!t){for(let n=0;n<this.patient.labOrders.saved.length;n++)if(this.patient.labOrders.saved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.saved[n].tests&&this.patient.labOrders.saved[n].tests.length>0){this.patient.labOrders.saved[n].tests[0].result=e;break}}await de(this.patient),z("Saved successfully"),this.$emit("saved")},async buildResults(){let e=[];return await Promise.all(this.labResults[1].data.rowData[0].colData.map(async t=>{var a;let n;C.getUseIndexDBStatus()||C.getModsStatus()?n=await Q("testResultIndicators",{whereClause:{test_type_id:t.id}}):n=await St.getTestIndicatorsWithID(t.id),e.push({indicator:{name:(a=n[0])==null?void 0:a.name,concept_id:t.id},value:t.value.name||t.value||"not done",value_modifier:"",value_type:"text"})})),e},async nav(e,t){const n=Je();t=="not_save"?(await rn(),n.setLabResults(!1)):n.setLabResults(!0),this.dismiss(),this.$router.push(e)}}}),Bn={class:"modal_wrapper"},Pn={class:"center text_12"};function En(e,t,n,a,s,l){const i=v("ion-title"),d=v("ion-button"),p=v("ion-buttons"),h=v("ion-toolbar"),_=v("ion-header"),g=v("basic-form"),y=v("ion-row"),R=v("ion-content"),S=v("DynamicButton"),f=v("ion-footer"),P=v("ion-modal");return w(),se(P,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[2]||(t[2]=O=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:c(()=>[o(_,null,{default:c(()=>[o(h,null,{default:c(()=>[o(i,null,{default:c(()=>[b("b",null,"Enter lab results for ("+$(e.labResults[0].name)+") test",1)]),_:1}),o(p,{slot:"end"},{default:c(()=>[o(d,{onClick:t[0]||(t[0]=O=>e.$emit("closeModal"))},{default:c(()=>t[3]||(t[3]=[x("Close",-1)])),_:1,__:[3]})]),_:1})]),_:1})]),_:1}),o(R,{class:"ion-padding"},{default:c(()=>[b("div",Bn,[b("div",Pn,[o(y,null,{default:c(()=>[o(g,{contentData:e.labResults},null,8,["contentData"])]),_:1})])])]),_:1}),o(f,{translucent:!0},{default:c(()=>[o(h,null,{default:c(()=>[o(S,{onClick:t[1]||(t[1]=O=>e.saveResults()),name:"Save",fill:"clear",iconSlot:"icon-only",style:{float:"right"}})]),_:1})]),_:1})]),_:1},8,["is-open","keyboard-close"])}const Tn=j(Ln,[["render",En],["__scopeId","data-v-c688c775"]]),$n=J({components:{IonButtons:mt,IonButton:Ee,IonModal:qe,IonHeader:we,IonContent:ve,IonToolbar:Pe,IonTitle:fe,IonItem:ge,IonList:Be,IonAvatar:pt,IonImg:ut,IonLabel:Oe,IonPage:ct,IonMenu:Le,BasicForm:G,IonFooter:dt,DynamicButton:_e},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{default:[]},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},methods:{dismiss(){We.dismiss()},nav(e,t){this.dismiss(),this.$router.push(e)}}}),xn={class:"modal_wrapper"},Rn={class:"center text_12"};function Fn(e,t,n,a,s,l){const i=v("ion-title"),d=v("ion-button"),p=v("ion-buttons"),h=v("ion-toolbar"),_=v("ion-header"),g=v("ion-col"),y=v("ion-row"),R=v("ion-content"),S=v("ion-modal");return w(),se(S,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[1]||(t[1]=f=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:c(()=>[o(_,null,{default:c(()=>[o(h,null,{default:c(()=>[o(i,null,{default:c(()=>[b("b",null,"Lab results for ("+$(e.content.name)+") test",1)]),_:1}),o(p,{slot:"end"},{default:c(()=>[o(d,{onClick:t[0]||(t[0]=f=>e.$emit("closeModal"))},{default:c(()=>t[2]||(t[2]=[x("Close",-1)])),_:1,__:[2]})]),_:1})]),_:1})]),_:1}),o(R,{class:"ion-padding"},{default:c(()=>[b("div",xn,[b("div",Rn,[o(y,null,{default:c(()=>[(w(!0),L(ue,null,Ie(e.content.result,(f,P)=>(w(),se(g,{size:"4",key:P},{default:c(()=>[o(y,null,{default:c(()=>[o(g,{size:"8"},{default:c(()=>[x($(f.indicator.name),1)]),_:2},1024),o(g,{class:"bold",size:"0.5"},{default:c(()=>t[3]||(t[3]=[x(":",-1)])),_:1,__:[3]}),o(g,{class:"bold",size:"2"},{default:c(()=>[x($(f.value),1)]),_:2},1024)]),_:2},1024)]),_:2},1024))),128))]),_:1})])])]),_:1})]),_:1},8,["is-open","keyboard-close"])}const Hn=j($n,[["render",Fn],["__scopeId","data-v-327a3d6c"]]),Un=J({__name:"AddLabTestModal",setup(e){const t=W(),{patient:n}=Y(t);ht();const a=ae,s=M(""),l=M(""),i=M(""),d=M(""),p=M(null),h=le(()=>[{componentType:"multiSelectInputField",name:"test",header:"Test",options:d.value,grid:{s:"6"},icon:ae.search,validation:et.required,onChange:S=>{s.value=S.name}},{componentType:"multiSelectInputField",name:"specimen",header:"Specimen",grid:{s:"6"},icon:ae.search,validation:et.required,value:i.value.length==1?i.value[0]:"",options:i.value.length>1?i.value:[]}]);Ce(s,async S=>{if(S)try{i.value=await _(S)}catch(f){i.value=[]}else i.value=[]});const _=async S=>{let f;return C.getUseIndexDBStatus()||C.getModsStatus()?f=await Q("specimens"):f=await he.getSpecimens("",1e3),await X.getConceptSet(S,"",{names:f.map(O=>O.name)})};Ce(n,async()=>{l.value=[...n.value.labOrders.saved,...n.value.labOrders.unsaved]},{deep:!0});const g=()=>{We.dismiss()},y=async()=>C.getUseIndexDBStatus()||C.getModsStatus()?await Q("testTypes"):await he.getTestTypes(),R=async()=>{var I,A,H,q,U,V;if(p.value.validateForm()){Z("Test not saved");return}if(!p.value){console.error("Form reference is not available");return}const S=p.value.getFormValues(),f=[{concept_id:S.test.concept_id,name:S.test.name,specimen:S.specimen.name,reason:"Routine",specimenConcept:await X.getConceptID(S.specimen.name,!0)}];let O=(await he.buildLabOrders("",f))[0];O.order_date=O.date,O.specimen.name=S.specimen.name,O.tests[0].name=S.test.name;const u=JSON.parse(JSON.stringify(n.value));(H=(A=(I=u.labOrders)!=null?I:u.labOrders={}).unsaved)!=null||(A.unsaved=[]),(V=(U=(q=u.labOrders)!=null?q:u.labOrders={}).saved)!=null||(U.saved=[]),u.labOrders.unsaved.push(O),await de(u),l.value=[...u.labOrders.saved,...u.labOrders.unsaved],g()};return Me(async()=>{d.value=await y()}),(S,f)=>{const P=v("ion-icon"),O=v("ion-col"),u=v("ion-row"),I=v("ion-footer");return w(),L(ue,null,[o(B(we),{style:{display:"flex","justify-content":"space-between"}},{default:c(()=>[o(B(fe),{class:"modalTitle"},{default:c(()=>f[2]||(f[2]=[x("Add Lab Test",-1)])),_:1,__:[2]}),o(P,{onClick:f[0]||(f[0]=A=>g()),style:{"padding-top":"10px","padding-right":"10px"},icon:B(a).cancel},null,8,["icon"])]),_:1}),o(B(ve),{fullscreen:!0,class:"ion-padding",style:{"--background":"#fff"}},{default:c(()=>[o(ln,{formData:h.value,ref_key:"formRef",ref:p},null,8,["formData"])]),_:1}),o(I,{collapse:"fade",class:"ion-no-border"},{default:c(()=>[o(u,null,{default:c(()=>[o(O,null,{default:c(()=>[o(_e,{onClick:f[1]||(f[1]=A=>R()),name:"Save",fill:"solid",style:{float:"right",margin:"2%",width:"130px"}})]),_:1})]),_:1})]),_:1})],64)}}}),Vn=j(Un,[["__scopeId","data-v-3e17251e"]]),Jn=J({name:"CheckInConfirmationModal",components:{IonModal:qe,IonTitle:fe,IonButton:Ee,IonContent:ve,IonIcon:ze,DynamicButton:_e},props:{isOpen:{type:Boolean,required:!0,default:!1},closeModalFunc:{type:Function,required:!0},onYes:{type:Function,required:!0},onNo:{type:Function,required:!0},title:{type:String,required:!0}},methods:{closeCircleOutline(){return Jt},closeModal(){this.closeModalFunc()}}}),qn={class:"modal-header"},Wn={class:"modal-body"},zn={class:"modal-footer"};function Gn(e,t,n,a,s,l){const i=v("ion-title"),d=v("ion-icon"),p=v("ion-button"),h=v("DynamicButton"),_=v("ion-content"),g=v("ion-modal");return w(),se(g,{"is-open":e.isOpen,"show-backdrop":!0,onDidDismiss:e.closeModal},{default:c(()=>[o(_,{class:"modal-wrapper"},{default:c(()=>[b("div",qn,[o(i,{class:"modal-title"},{default:c(()=>[x($(e.title),1)]),_:1}),o(p,{fill:"clear",class:"close-btn",onClick:e.closeModal},{default:c(()=>[o(d,{icon:e.closeCircleOutline()},null,8,["icon"])]),_:1},8,["onClick"])]),b("div",Wn,[qt(e.$slots,"default",{},()=>[t[0]||(t[0]=x(" Sending the patient to the lab will pause this consultation. You'll return to the waiting list while waiting for lab results this patient. ",-1))],!0)]),b("div",zn,[o(p,{fill:"outline",color:"danger",class:"action-btn cancel-btn",onClick:e.onNo},{default:c(()=>t[1]||(t[1]=[x(" Cancel ",-1)])),_:1,__:[1]},8,["onClick"]),o(h,{name:"Confirm",color:"success",class:"action-btn confirm-btn",fill:"solid",onClick:e.onYes},null,8,["onClick"])])]),_:3})]),_:3},8,["is-open","onDidDismiss"])}const Yn=j(Jn,[["render",Gn],["__scopeId","data-v-d754e58e"]]),ot="stages",Ue="unsavedStages";class jn extends C{static getOperationMode(){const t=C.getAPIStatus(),n=C.getModsStatus(),a=C.getUseIndexDBStatus();return t?"API_ONLY":t&&a?"API_WITH_INDEXDB":n&&!a?"MODS_ONLY":n&&a?"MODS_WITH_INDEXDB":"OFFLINE"}static async addPatientToStage(t,n,a,s){const l=this.getOperationMode();try{switch(l){case"API_ONLY":return await this._handleApiOnly(t,n,a,s);case"API_WITH_INDEXDB":return await this._handleApiWithIndexDB(t,n,a,s);case"MODS_ONLY":return await this._handleModsOnly(t,n,a,s);case"MODS_WITH_INDEXDB":return await this._handleModsWithIndexDB(t,n,a,s);default:throw new Error("Error adding patient mode")}}catch(i){throw Ae("Failed to move patient to ".concat(n)),i}}static async _handleApiOnly(t,n,a,s){return await this._addPatientToStageViaAPI(t,n,a,s)}static async _handleApiWithIndexDB(t,n,a,s){try{const l=await this._addPatientToStageViaAPI(t,n,a,s);return await this._storeInIndexDB(l),l}catch(l){return console.warn("API failed, falling back to IndexDB"),this._addPatientToStageOffline(t,n,a,s)}}static async _handleModsOnly(t,n,a,s){if(!await tt())throw new Error("MODS connection unavailable");const i=await this._addPatientToStageViaAPI(t,n,a,s);return z("Patient moved to ".concat(n," (MODS)")),i}static async _handleModsWithIndexDB(t,n,a,s){try{if(await tt()){const i=await this._addPatientToStageViaAPI(t,n,a,s);return await this._storeInIndexDB(i),z("Patient moved to ".concat(n)),i}throw new Error("MODS connection unavailable")}catch(l){return this._addPatientToStageOffline(t,n,a,s)}}static async movePatientToNextStage(t,n,a,s,l){return await this.safeDeactivateStages(t),this.addPatientToStage(t,a,s,l)}static async _addPatientToStageViaAPI(t,n,a,s){return(await super.postJson("/stages",{stage:{patient_id:t,stage:n,location_id:a,visit_id:s,arrivalTime:new Date().toISOString()}})).data}static async _addPatientToStageOffline(t,n,a,s){const l=new Date().toISOString(),i=Re(),{fullName:d}=await this._resolvePatientDetails(t,a),p={patient_id:t,visit_id:s,stage:n,location_id:a,arrivalTime:l,status:1,fullName:d,sync_status:"pending"};return await i.postData("ADD_STAGE",{storeName:Ue,data:p}),z("Patient queued for ".concat(n," (offline)")),p}static async _storeInIndexDB(t){if(!C.getUseIndexDBStatus())return;await Re().postData("ADD_STAGE",{storeName:ot,data:{...t,sync_status:"synced"}})}static async safeDeactivateStages(t){const n=this.getOperationMode();try{return n.includes("API")&&await super.patchJson("/stages/deactivate",{patientId:t}),(n.includes("INDEXDB")||n==="OFFLINE")&&await this._deactivateStagesOffline(t),1}catch(a){throw console.error("Deactivation failed:",a),a}}static async _deactivateStagesOffline(t){const n=Re(),a=new Date().toISOString();await n.postData("UPDATE_STAGE",{storeName:Ue,whereClause:{patient_id:t,status:1},data:{status:0,updated_at:a,sync_status:"pending"}}),await n.postData("UPDATE_STAGE",{storeName:ot,whereClause:{patient_id:t,status:1},data:{status:0,updated_at:a,sync_status:"pending"}})}static async getCurrentStage(t){var s;const n=this.getOperationMode();try{if(n.includes("API"))return(await super.getJson("/stages/current",{patientId:t})).stage}catch(l){console.warn("Online fetch failed, falling back to offline")}return((s=(await Q(Ue,{whereClause:{patient_id:t,status:1}}))[0])==null?void 0:s.stage)||null}static async _resolvePatientDetails(t,n){var p;const s=(await Q("patientRecords",{whereClause:{patientID:t}}))[0],l=s!=null&&s.personInformation?[s.personInformation.given_name,s.personInformation.family_name].filter(Boolean).join(" "):void 0,d=(p=(await Q("visits",{whereClause:{patientId:t,location_id:n}}))[0])==null?void 0:p.id;return{fullName:l,visit_id:d}}}const Kn={class:"container"},Xn={class:"table-responsive"},Qn=J({__name:"LabOrdersList",props:{propOrders:{default:()=>[]}},setup(e){const t=e,n=Wt(),a=ht(),s=W(),l=Je(),i=Ve(),d=dn(),{patient:p}=Y(s),{labResults:h}=Y(l),{investigations:_}=Y(i),{patientsWaitingForVitals:g,patientsWaitingForConsultation:y,patientsWaitingForLab:R,patientsWaitingForDispensation:S}=Y(d),f=M(),P=M([]),O=M(["Lab Test","Specimen","Accession Number","Order Date","Result","Action"]);M(!0);const u=M(!1),I=M(!1),A=M([]),H=M([]),q=M([]);M([]),M(!1);const U=M(""),V=M(!1),$e=M(!1),kt=M(""),ke=ae;cn(["#006401"]),un(["#636363"]);const Ye=M({responsive:!0,select:!1,layout:{topStart:"buttons",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,buttons:[{text:" <b>+ Add other tests </b>",className:"add-test text-white",action:async()=>{await Et()}},{text:" <b>Send to Lab </b>",className:"send-lab text-white",attr:{id:"send-to-lab-btn"},action:async()=>{await Tt()}}]});le(()=>q.value.some(m=>m.btn&&m.btn.includes("enter_results")));const Nt=async()=>{V.value=!1,await pe()},At=()=>{const m=document.getElementById("send-to-lab-btn");m&&(m.style.display="none")},Lt=()=>{const m=document.getElementById("send-to-lab-btn");m&&(m.style.display="inline")},Bt=()=>{nt.getProgramID()==14&&!nt.isLabTechnician()&&u.value?Lt():At()},Pt=async m=>{const N=[{concept_id:await X.getConceptID(m.name,!0),name:m.name,specimen:m.specimen,reason:"Routine",specimenConcept:await X.getConceptID(m.specimen,!0)}];let r=(await he.buildLabOrders("",N))[0];r.order_date=r.date,r.specimen.name=await X.getConceptName(r.specimen.concept_id),r.tests[0].name=await X.getConceptName(r.tests[0].concept_id),p.value.labOrders.unsaved.push(r),await de(p.value)},Et=async()=>{await vt(Vn,{class:"lab-results-modal"},!0,{title:"name"}),await pe()},Tt=async()=>{I.value=!0},$t=async()=>{try{const m=String(localStorage.getItem("locationID"));if(!m){Ae("Location not found");return}await jn.movePatientToNextStage(p.value.patientID,"CONSULTATION","LAB",m,p.value.visitID),await d.refresh(m),I.value=!1,await n.push("home"),z("The patient successfully sent to the lab. You may now attend to other patients.")}catch(m){console.error("Error sending to lab:",m),Ae("Failed to send patient to lab")}finally{I.value=!1}},je=()=>{I.value=!1},Ke=async()=>{var N,D,r,F,E;if(!((N=p.value)!=null&&N.labOrders)||(A.value=[...(r=(D=p.value)==null?void 0:D.labOrders)==null?void 0:r.saved,...(E=(F=p.value)==null?void 0:F.labOrders)==null?void 0:E.unsaved],!A.value))return;const m=await A.value.filter(T=>k.toStandardHisFormat(k.sessionDate())===k.toStandardHisFormat(T.order_date));m.length>0?_.value[0].selectedData=m:_.value[0].selectedData=""},xt=async(m,N)=>{var r,F,E;if(await ft("Do you want to delete ".concat(m.tests[0].name," ?"),N)){const T=JSON.parse(JSON.stringify(p.value));T.labOrders.saved.some(ce=>{var ye,be;return ce.order_date===m.order_date&&((ye=ce==null?void 0:ce.tests[0])==null?void 0:ye.name)==((be=m==null?void 0:m.tests[0])==null?void 0:be.name)})?(T.labOrders.saved=Xe(T.labOrders.saved,m.tests[0].name,m.order_date),(E=(F=(r=T.labOrders)!=null?r:T.labOrders={}).voided)!=null||(F.voided=[]),T.labOrders.voided.push({orderId:m.id,reason:"Mistake entry"})):T.labOrders.unsaved=Xe(T.labOrders.unsaved,m.tests[0].name,m.date),await de(T)}await pe()},Xe=(m,N,D)=>m.filter(r=>(r.order_date===D&&(r.tests=r.tests.filter(F=>F.name!==N)),r.tests.length>0)),Rt=async m=>{let N;C.getUseIndexDBStatus()||C.getModsStatus()?N=await Q("testResultIndicators",{whereClause:{test_type_id:m.concept_id}}):N=await St.getTestIndicatorsWithID(m.concept_id);const D=[m,{validationStatus:"",data:{rowData:[{colData:[]}]}}];N.forEach(r=>{let F={inputHeader:r.name,value:"",colSize:3,id:r.concept_id,name:r.name,required:!0,eventType:"input",alertsErrorMassage:""};if(r.name=="RBS"&&(F={inputHeader:r.name,value:"",colSize:3,id:r.concept_id,name:r.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),r.name=="FBS"&&(F={inputHeader:r.name,value:"",colSize:3,id:r.concept_id,name:r.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),r.name=="MRDT"||r.name=="Tuberculosis program"||r.name=="Vdrl"||r.name=="Hepatitis B"||r.name=="Lam"||r.name=="CrAg"||r.name=="CD4 count"||r.name=="Leukocytes"||r.name=="Protein"||r.name=="Nitrite"||r.name=="Urine Ketones"||r.name=="HIV test"){let E=[];(r.name=="MRDT"||r.name=="Vdrl"||r.name=="Hepatitis B"||r.name=="CrAg"||r.name=="Lam")&&(E=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),r.name=="Tuberculosis program"&&(E=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),r.name=="CD4 count"&&(E=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(r.name=="Leukocytes"||r.name=="Protein"||r.name=="Nitrite"||r.name=="Ketones"||r.name=="Urine Ketones")&&(E=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),r.name=="HIV test"&&(E=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),F={inputHeader:r.name,icon:ae.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:E,id:r.concept_id,idName:"district_id"}}D[1].data.rowData[0].colData.push(F)}),l.setLabResults(D),V.value=!0,A.value=[...p.value.labOrders.saved,...p.value.labOrders.unsaved]},Ft=async m=>{U.value=m,$e.value=!0},pe=async()=>{if(!p.value.labOrders)return;A.value=[...p.value.labOrders.saved,...p.value.labOrders.unsaved];const m=Ht(A.value),N=C.getProgramID()==32?[["FBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"FBS",specimen:"Blood"}),"'>Order Test</button> ")],["HbA1c","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"HbA1c",specimen:"Blood"}),"'>Order Test</button> ")],["RBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"RBS",specimen:"Blood"}),"'>Order Test</button> ")]]:[],D=N.filter(E=>!m.some(T=>T[0]===E[0])),r=m.filter(E=>N.some(T=>T[0]===E[0])),F=m.filter(E=>!r.some(T=>T[0]===E[0]));P.value=[...r,...D,...F],Bt(),await Ke(),Ze.use(Gt)},Ht=(m,N)=>(u.value=!1,m.length>0?m.flatMap(D=>D.tests.flatMap(r=>{var ce,ye,be,Qe;const F='<button class="btn btn-outline-success btn-sm result-btn" data-id=\''.concat(JSON.stringify(r),"'>Enter Result</button> "),E='<button class="btn btn-outline-secondary btn-sm attach-btn" data-id=\''.concat(JSON.stringify(r),"'>").concat(ke.attach2,"</button>"),T='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(r),"'>").concat(ke.view2,"</button> ");let De=F+E;((ce=r==null?void 0:r.result)==null?void 0:ce.length)==1?De=(r==null?void 0:r.result)!=null?((ye=r==null?void 0:r.result[0])==null?void 0:ye.value_modifier)+((be=r==null?void 0:r.result[0])==null?void 0:be.value):null:((Qe=r==null?void 0:r.result)==null?void 0:Qe.length)>1?(r==null||r.result,De=T):D!=null&&D.accession_number&&(u.value=!0);let xe="";return D!=null&&D.accession_number?xe='<button class="btn btn-outline-secondary btn-sm" data-id=\''.concat(JSON.stringify(D),"'>").concat(ke.print2,"</button>"):De="",[[r==null?void 0:r.name,D==null?void 0:D.specimen.name,(D==null?void 0:D.accession_number)||"",k.toStandardHisFormat(D==null?void 0:D.order_date),De,xe+'\n                        <button class="btn btn-outline-danger btn-sm delete-btn" data-id=\''.concat(JSON.stringify(D),"'>").concat(ke.delete2,"</button>\n                        ")]]})):[]);return Me(async()=>{C.getProgramID()==14&&Ye.value.buttons.push(),await Ke(),await pe(),zt(()=>{const m=f.value.dt;m.columns.adjust().draw(),m.on("click",".result-btn",N=>{const D=N.target.getAttribute("data-id");Rt(JSON.parse(D))}),m.on("click",".view-btn",N=>{const D=N.target.getAttribute("data-id");Ft(JSON.parse(D))}),m.on("click",".delete-btn",N=>{const D=N.target.getAttribute("data-id");xt(JSON.parse(D),N)}),m.on("click",".order-btn",N=>{const D=N.target.getAttribute("data-id");Pt(JSON.parse(D))})}),A.value=t.propOrders,kt.value=new pn(p.value.patientID),H.value=await C.getUserRoles()}),Ce(()=>a,async()=>{await pe()},{deep:!0}),Ce(()=>p.value,async()=>{await pe()},{deep:!0}),(m,N)=>(w(),L("div",Kn,[b("div",Xn,[o(B(Ze),{ref_key:"dataTable",ref:f,options:Ye.value,data:P.value,class:"display nowrap modern-table",width:"100%"},{default:c(()=>[b("thead",null,[b("tr",null,[(w(!0),L(ue,null,Ie(O.value,D=>(w(),L("th",{key:D},$(D),1))),128))])])]),_:1},8,["options","data"])]),o(Hn,{popoverOpen:$e.value,content:U.value,onCloseModal:N[0]||(N[0]=D=>$e.value=!1)},null,8,["popoverOpen","content"]),o(Tn,{popoverOpen:V.value,onSaved:Nt,onCloseModal:N[1]||(N[1]=D=>V.value=!1)},null,8,["popoverOpen"]),o(Yn,{isOpen:I.value,title:"Send Patient to Lab",closeModalFunc:je,onYes:$t,onNo:je},null,8,["isOpen"])]))}}),Zn=j(Qn,[["__scopeId","data-v-73017635"]]),ea=J({data:()=>({userRole:"",ready:!1,userRoleSettings:{}}),watch:{$route:{async handler(e){this.userRole=C.getUserRoles();const t=C.getProgramID(),n=C.getProgramName();this.userRole=="Lab"&&t==14&&(this.userRoleSettings={url:"home",btnName:"Back to home",stepperTitle:"Laboratory"}),t==14&&this.userRole!="Lab"&&(this.userRoleSettings={url:"home",btnName:"Go to waiting list",stepperTitle:"Consultation Plan"}),t==12&&(this.userRoleSettings={url:"contact",btnName:"Back"}),n=="LABOUR AND DELIVERY PROGRAM"&&(this.userRoleSettings={url:"labour/labourHome",btnName:"Back to home"}),n=="PNC PROGRAM"&&(this.userRoleSettings={url:"pnc/home",btnName:"Back to home"})},immediate:!0,deep:!0}}}),it=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Skull",value:"Skull",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mastoid",value:"Mastoid",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"ParaSinuses",value:"ParaSinuses",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Optic Foramen",value:"PVD",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Orbits",value:"Orbits",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Nasal Bone",value:"Nasal Bone",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mandible",value:"Mandible",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TMJs",value:"TMJs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Zygomatic",value:"Zygomatic",checked:!1}]}}],ta=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Neck",value:"Neck",checked:!1}]}}],na=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Chest",value:"Chest",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Heart",value:"Heart",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sternum",value:"Sternum",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ribs",value:"Ribs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SCJ",value:"SCJ",checked:!1}]}}],aa=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Abdomen",value:"Abdomen",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"IVP",value:"IVP",checked:!1}]}}],sa=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Clavicle",value:"Clavicle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Shoulder",value:"Shoulder",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Scapula",value:"Scapula",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Humerus",value:"Humerus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Elbow",value:"Elbow",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Forearm",value:"Forearm",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Wrist",value:"Wrist",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hand",value:"Hand",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Phalanges",value:"Phalanges",checked:!1}]}}],oa=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"CSpine",value:"CSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TSpine",value:"TSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"LSpine",value:"LSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SSpine",value:"SSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Coccyx",value:"Coccyx",checked:!1}]}}],ia=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Pelvis",value:"Pelvis",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sacroillac Joints",value:"Sacroillac Joints",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hip",value:"Hip",checked:!1}]}}],ra=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Femur",value:"Femur",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Knee",value:"Knee",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Patella",value:"Patella",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Leg",value:"Leg",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ankle",value:"Ankle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Calcaneus",value:"Calcaneus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Foot",value:"Foot",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Toe",value:"Toe",checked:!1}]}}],la=Te("RadiologyStore",{state:()=>({head:[...it],neck:[...ta],chest:[...na],abdomen:[...aa],upper_extremity:[...sa],spine:[...oa],pelvis:[...ia],lower_extremity:[...ra]}),actions:{setOPDDiagnosis(e){this.head=e},getInitial(){return[...Se.cloneDeep(it)]}}}),da=["innerHTML"],ca={class:"scrollable-container"},ua={key:0,class:"form-section"},pa={key:1,class:"form-section"},ma={key:2,class:"form-section"},ha={key:3,class:"form-section"},ga={key:4,class:"form-section"},fa={key:5,class:"form-section"},va={key:6,class:"form-section"},_a={key:7,class:"form-section"},Da=J({__name:"RadiologyInvestigation",setup(e){const t=la(),{head:n,neck:a,chest:s,abdomen:l,upper_extremity:i,spine:d,pelvis:p,lower_extremity:h}=Y(t),_=M(ae),g=M([]),y=(S,f,P)=>{document.querySelectorAll("#".concat(S," path")).forEach(u=>{u.classList.toggle("white-fill")}),document.querySelectorAll("#".concat(f," line")).forEach(u=>{u.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(f," rect")).forEach(u=>{u.classList.toggle("bright-green-fill"),u.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(f," path")).forEach(u=>{u.classList.toggle("dark-green-fill")}),document.querySelectorAll("#".concat(f," circle")).forEach(u=>{u.classList.toggle("bright-green-fill")});const O=g.value.findIndex(u=>u.id===P);O>=0?g.value.splice(O,1):g.value.unshift({id:P,active:!0})},R=()=>{const S=document.getElementById("SPINE");S.style.display==="none"||S.style.display==""?S.style.display="block":S.style.display="none",y("SPINE","SPINE_LABEL-2","spine")};return Me(()=>{const S=document.getElementById("HEAD");S&&S.addEventListener("click",()=>{y("HEAD","LABEL-6","head")});const f=document.getElementById("NECK");f&&f.addEventListener("click",()=>{y("NECK","LABEL-5","neck")});const P=document.getElementById("CHEST");P&&P.addEventListener("click",()=>{y("CHEST","LABEL-4","chest")});const O=document.getElementById("ABDOMEN_LABEL");O&&O.addEventListener("click",()=>{const V=document.getElementById("ABDOMEN-2");V.style.display==="none"||V.style.display==""?V.style.display="block":V.style.display="none",y("ABDOMEN","ABDOMEN_LABEL-2","abdomen")});const u=document.getElementById("UPPER_EXTRMITY");u&&u.addEventListener("click",()=>{y("UPPER_EXTRMITY","LABEL-3","upper_extremity")});const I=document.getElementById("SPINE"),A=document.getElementById("SPINE_LABEL"),H=document.getElementById("LOWER_SPINE_INACTIVE");I&&I.addEventListener("click",()=>{R()}),A&&A.addEventListener("click",()=>{R()}),H&&H.addEventListener("click",()=>{R()});const q=document.getElementById("PELVIS");q&&q.addEventListener("click",()=>{y("PELVIS","LABEL-2","pelvis")});const U=document.getElementById("LOWER_EXTREMITY");U&&U.addEventListener("click",()=>{y("LOWER_EXTREMITY","LABEL","lower_extremity")})}),(S,f)=>{const P=v("ion-col"),O=v("ion-row");return w(),se(O,null,{default:c(()=>[o(P,{size:"7"},{default:c(()=>[b("div",{innerHTML:_.value.full_body_sk},null,8,da)]),_:1}),o(P,{size:"5",class:"form-column"},{default:c(()=>[b("div",ca,[(w(!0),L(ue,null,Ie(g.value,u=>(w(),L(ue,null,[u.id==="head"?(w(),L("div",ua,[f[0]||(f[0]=b("h6",null,"Body Part: Head",-1)),o(G,{contentData:B(n)},null,8,["contentData"])])):u.id==="neck"?(w(),L("div",pa,[f[1]||(f[1]=b("h6",null,"Body Part: Neck",-1)),o(G,{contentData:B(a)},null,8,["contentData"])])):u.id==="chest"?(w(),L("div",ma,[f[2]||(f[2]=b("h6",null,"Body Part: Chest",-1)),o(G,{contentData:B(s)},null,8,["contentData"])])):u.id==="abdomen"?(w(),L("div",ha,[f[3]||(f[3]=b("h6",null,"Body Part: Abdomen",-1)),o(G,{contentData:B(l)},null,8,["contentData"])])):u.id==="upper_extremity"?(w(),L("div",ga,[f[4]||(f[4]=b("h6",null,"Body Part: Upper Extremity",-1)),o(G,{contentData:B(i)},null,8,["contentData"])])):u.id==="spine"?(w(),L("div",fa,[f[5]||(f[5]=b("h6",null,"Body Part: Spine",-1)),o(G,{contentData:B(d)},null,8,["contentData"])])):u.id==="pelvis"?(w(),L("div",va,[f[6]||(f[6]=b("h6",null,"Body Part: Pelvis",-1)),o(G,{contentData:B(p)},null,8,["contentData"])])):u.id==="lower_extremity"?(w(),L("div",_a,[f[7]||(f[7]=b("h6",null,"Body Part: Lower Extremity",-1)),o(G,{contentData:B(h)},null,8,["contentData"])])):ne("",!0)],64))),256))])]),_:1})]),_:1})}}}),ya=j(Da,[["__scopeId","data-v-4e8419f9"]]),ba=J({name:"Menu",mixins:[ea],components:{IonContent:ve,IonHeader:we,IonItem:ge,IonList:Be,IonMenu:Le,IonTitle:fe,IonToolbar:Pe,IonInput:gt,IonPopover:Yt,DashBox:In,SelectionPopover:hn,BasicInputField:_t,BasicForm:G,List:mn,DynamicButton:_e,LabOrdersList:Zn,RadiologyInvestigation:ya},data(){return{segmentContent:"Lab Investigations",iconsContent:ae,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:Kt,pulseOutline:jt}},computed:{...re(Ve,["investigations"]),...re(W,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var e;(e=this.patient)!=null&&e.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(e){this.segmentContent=e},async getTests(){let e;C.getUseIndexDBStatus()&&C.getModsStatus()?e=await Q("testTypes"):e=await he.getTestTypes(),K(this.investigations,"test","multiSelectData",e)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var t;if(!((t=this.patient)!=null&&t.labOrders))return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=await this.labOrders.filter(n=>k.toStandardHisFormat(k.sessionDate())===k.toStandardHisFormat(n.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),Ve().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return st(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(K(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(K(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){st(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(e,t){for(let n of t)for(let a of n.tests)if(a.name===e)return!0;return!1},async saveTest(){await new Mn().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await X.getConceptID(this.inputFields[1].value.name,!0)}]),K(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(e){if(e.inputHeader=="Test"&&this.checkTest(),K(this.investigations,"specimen","alertsErrorMassage",""),e.inputHeader=="Test"&&e.value){let t;C.getUseIndexDBStatus()&&C.getModsStatus()?t=await Q("specimens"):t=await he.getSpecimens("",1e3),this.specimen=await X.getConceptSet(e.value.name,"",{names:t.map(n=>n.name)}),this.specimen.length==1?(K(this.investigations,"specimen","value",this.specimen[0]),K(this.investigations,"specimen","disabled",!0)):(K(this.investigations,"specimen","value",""),K(this.investigations,"specimen","disabled",!1)),K(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(e){return await this.labOrders.filter(t=>t.name.toLowerCase().includes(e.toLowerCase()))},async filterSpecimen(e){var t;return(t=this.specimen[0])!=null&&t.name&&e?await this.specimen.filter(n=>n==null?void 0:n.name.toLowerCase().includes(e.toLowerCase())):[]},setTest(e){this.selectedText=e.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=e.name:this.investigations[0].data.rowData[0].colData[1].value=e.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),Sa={class:"background"},Ca={key:0},Oa={key:1},wa={key:2},Ia={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},Ma={key:3},ka={class:"ion-padding",slot:"content"},Na={key:4};function Aa(e,t,n,a,s,l){const i=v("ion-label"),d=v("ion-segment-button"),p=v("ion-segment"),h=v("VisitsHistory"),_=v("LabOrdersList"),g=v("RadiologyInvestigation");return w(),L("div",Sa,[o(p,{value:e.segmentContent,style:{"margin-top":"5px"}},{default:c(()=>[o(d,{value:"Lab Investigations",onClick:t[0]||(t[0]=y=>e.setSegmentContent("Lab Investigations"))},{default:c(()=>[o(i,null,{default:c(()=>t[3]||(t[3]=[x("Lab Investigations",-1)])),_:1,__:[3]})]),_:1}),o(d,{value:"Radiology Investigation",onClick:t[1]||(t[1]=y=>e.setSegmentContent("Radiology Investigation"))},{default:c(()=>[o(i,null,{default:c(()=>t[4]||(t[4]=[x("Radiology Investigation",-1)])),_:1,__:[4]})]),_:1}),o(d,{value:"Other Investigation",onClick:t[2]||(t[2]=y=>e.setSegmentContent("Other Investigation"))},{default:c(()=>[o(i,null,{default:c(()=>t[5]||(t[5]=[x("Other Investigation",-1)])),_:1,__:[5]})]),_:1})]),_:1},8,["value"]),e.segmentContent=="Radiology Investigation"?(w(),L("div",Ca,[o(h)])):ne("",!0),e.segmentContent=="Other Investigation"?(w(),L("div",Oa)):ne("",!0),e.segmentContent=="Lab Investigations"?(w(),L("div",wa,[b("div",Ia,[b("span",null,[o(_,{propOrders:e.labOrders},null,8,["propOrders"])])])])):ne("",!0),e.segmentContent=="Radiology Investigation"?(w(),L("div",Ma,[b("div",ka,[o(g)])])):ne("",!0),e.segmentContent=="Other Investigation"?(w(),L("div",Na)):ne("",!0)])}const Ns=j(ba,[["render",Aa],["__scopeId","data-v-c2f65a77"]]),wt=(e,t,n,a={})=>({drug_id:e,name:t,category:n,...a}),La=Te("OtherNCDMedicationsStore",{state:()=>({otherNCDMedications:[],selectedOtherNCDMedicationList:[]}),actions:{setSelectedNCDMedicationList(e){this.selectedOtherNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedOtherNCDMedicationList},addSearchedDrug(e){const t=wt(e.drug_id,e.name,"Other",e);if(t.units=e.units,!this.otherNCDMedications.some(a=>a.drug_id===t.drug_id)){this.otherNCDMedications.unshift(t);const a={dosage:{morning:null,afternoon:null,evening:null},duration:null,...t};this.setSelectedNCDMedicationList(a)}},clearOtherNCDMedications(){this.otherNCDMedications=[],this.selectedOtherNCDMedicationList=[]}},persist:!0}),ee=Te("NCDmedicationsStore",{state:()=>({medications:[],filteredMedications:[],selectedNCDMedicationList:[],frequency_selections:M({}),currentPatientID:""}),actions:{setMedications(e){this.medications=e,this.filteredMedications=e},setFilteredMedications(e){this.filteredMedications=e},initMedications(){},setSelectedNCDMedicationList(e){this.selectedNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedNCDMedicationList},clearMedicationDataStores(){this.medications=[],this.filteredMedications=[],this.selectedNCDMedicationList=[],this.frequency_selections=[]},setCurrentPatientID(e){this.currentPatientID=e}},persist:!0});function As(){try{const e=ee(),t=La();e.medications=[...t.otherNCDMedications,...e.medications],e.medications=e.medications.reduce((n,a)=>(n.some(s=>s.drug_id===a.drug_id)||n.push(a),n),[]),e.selectedNCDMedicationList=[...t.selectedOtherNCDMedicationList,...e.selectedNCDMedicationList],e.filteredMedications=e.medications,z("Medication added successfully")}catch(e){}}const Ba={name:"DiabetesMedication",ids:[337,336,280,410,729,263,812,265,264,240,266,726,728,223]},rt={name:"AntiHypertensivesMedication",ids:[]},Pa={ids:[274,168,648,289,286,164,287,288,672,257,1233,671]},Ea={ids:[559,1236,1234,558,1235,1211,276,277,278,279]},Ta={ids:[556,653,557,652,943,1238,1240,1237,942,1239,946,1503,944,1504,945,1505]},$a={ids:[116,85,117,1232,936,1364,937,1365,1366]};async function It(e){const t=ee(),n=e.ids.map(async a=>{try{const s=await Ot.getOfflineDrugById(a);if(s){const l=t.medications.findIndex(d=>d.drug_id===s.drug_id),i=wt(s.drug_id,s.name,e.name,s);l!==-1?t.medications[l]=i:t.medications.push(i)}}catch(s){console.error("Error fetching drug ID ".concat(a,":"),s)}});return t.filteredMedications=t.medications,Promise.all(n)}async function Ls(e){try{const t=await Ot.getOfflineDrugById(e);return{drug_id:e,dosage:{morning:null,afternoon:null,evening:null},duration:null,...t}}catch(t){Ae("Error fetching drug details. Please try again."),console.error("Error fetching drug details:",t)}}function Bs(){return It(Ba)}function Ps(){return rt.ids=[...Pa.ids,...Ea.ids,...Ta.ids,...$a.ids],It(rt)}function xa(){ee().clearMedicationDataStores()}function Ra(e){ee().setCurrentPatientID(e)}function Es(e){ee().currentPatientID!=e&&(xa(),Ra(e))}function Ts(){return ee().selectedNCDMedicationList.some(t=>{const{morning:n,afternoon:a,evening:s}=t.dosage,l=typeof n=="string"?Number(n):n,i=typeof a=="string"?Number(a):a,d=typeof s=="string"?Number(s):s;return typeof l=="number"&&l>0||typeof i=="number"&&i>0||typeof d=="number"&&d>0})}class Fa extends Dt{constructor(t,n){super(t,105,n)}}class Ha extends Dt{constructor(t,n){super(t,25,n)}static async get_____(t="",n=1,a=10){}}async function $s(e){var t,n,a;try{const s=W(),{patient:l}=Y(s),i=JSON.parse(JSON.stringify(l.value));return(a=(n=(t=i.allergies)!=null?t:i.allergies={}).unsaved)!=null||(n.unsaved=[]),i.allergies.unsaved.push(...e),z("Allergies appended to patient record successfully"),i}catch(s){Z("Unable to save Allegies!")}}async function xs(e){try{await de(e),z("Allergies saved successfully")}catch(t){Z("Unable to save Allegies!")}}class Rs{async onSubmitNotes(t,n,a){const s=new Fa(t,n);await s.createEncounter(),await s.saveObservationList(a)}async onSubmitAllergies(t,n,a){try{const s=new Ha(t,n);await s.createEncounter(),await s.saveObservationList(a),z("Allergies saved successfully")}catch(s){console.error("Error saving allergies:",s),Z("Failed to save allergies")}}}class Fs{constructor(){te(this,"programID");te(this,"providerID");te(this,"patientID");te(this,"date");te(this,"demographics");te(this,"previousDrugPrescriptions",[]);te(this,"previousClinicalNotes");te(this,"previousDrugAllergies");const t=W();this.demographics=t.patient,this.patientID=this.demographics.patientID,this.date=Fe.getSessionDate(),this.providerID=C.getUserID(),this.programID=Fe.getProgramID(),this.previousClinicalNotes={},this.previousDrugAllergies={}}async getPatientEncounters(){const t=await this.getPatientVisitDates(),n=t.map(async s=>{const l=s.value,i=await gn.getEncounters(this.patientID,{date:l});await Promise.all(i.map(async d=>{var p;if(d.type.name=="NOTES"){const{observations:h}=d;Se.isEmpty(h)||h.forEach(_=>{if(_.concept_id=="2688"){const g=k.toStandardHisDisplayFormat(_.obs_datetime);Se.isEmpty(this.previousClinicalNotes.hasOwnProperty(g))&&(this.previousClinicalNotes[g]=[]),this.previousClinicalNotes[g].push({date:g,notes:_.value_text})}})}if(d.type.name=="TREATMENT"){const{observations:h}=d;if(!Se.isEmpty(h))for(const _ in h){let g="<UNKNOWN CONCEPT>";const y=h[_];try{(p=y==null?void 0:y.concept)!=null&&p.concept_names?g=y.concept.concept_names[0].name:g=await X.getConceptName(y.concept_id)}catch(f){console.error(y,f)}const R=await Fe.resolvePrimaryValue(y),S=k.toStandardHisDisplayFormat(y.date_created);g=="Allergic"&&(this.previousDrugAllergies.hasOwnProperty(S)||(this.previousDrugAllergies[S]=[]),this.previousDrugAllergies[S].push({date:S,value:R}))}}}))});await Promise.all(n);const a=t.map(async s=>{const l=await yt.getOrderByPatient(this.patientID,{start_date:s.value});if(!Se.isEmpty(l)){const i=l.map(d=>({drugName:d.drug.name,value:k.toStandardHisTimeFormat(d.order.start_date),dose:d.dose,frequency:kn(d.frequency),prescription:k.toStandardHisFormat(d.order.auto_expire_date),duration:Ua(d.order.instructions),other:d}));this.previousDrugPrescriptions.push({prescriptionDate:k.toStandardHisDisplayFormat(s.value),previousPrescriptions:i})}});return await Promise.all(a),{previousDrugPrescriptions:this.previousDrugPrescriptions,previousClinicalNotes:this.previousClinicalNotes,previousDrugAllergies:this.previousDrugAllergies}}async getPatientVisitDates(){return(await bt.getPatientVisits(this.patientID,!1)).map(t=>({label:k.toStandardHisDisplayFormat(t),value:t,other:{isActive:t===fn.getSessionDate()}}))}}function Ua(e){const t=/(\d+)\s+days/i,n=e.match(t);return n&&n.length>1?parseInt(n[1]):null}async function Hs(){const e=W(),{patient:t}=Y(e),n=t.value,a=[8809,903,6410,6409];let s;C.getModsStatus()||C.getUseIndexDBStatus()?s=await Q("diagnosis",{likeClause:"",currentPage:1,itemsPerPage:2e3}).then(g=>g.records):s=await C.getJson("diagnosis",{id:7409,page_size:2e3});const l=s.filter(g=>a.includes(g.concept_id)),i=n.diagnosis.saved.map(g=>g.value_coded),d=n.diagnosis.unsaved.map(g=>g.value_coded),p=[...i,...d];return l.filter(g=>p.includes(g.concept_id)).map(g=>g.name)}const Va=J({created(){},components:{IonItem:ge,IonCol:Xt,IonLabel:Oe,IonIcon:ze},data(){return{iconsContent:ae,localMedicalDrugsList:[...this.$props._selectedMedicalDrugsList]}},props:{_selectedMedicalDrugsList:{type:Array,default:[]},show_actions_buttons:{type:Boolean,default:!0},highLightBackground:{type:String,default:"item-native"}},watch:{},methods:{highlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#006401"),this.highlightActionBtns(e)},undoHighlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#636363"),this.undohighlightActionBtns(e)},highlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="inline-block"},undohighlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="none"},asignLblID(e){return e+"_lbl"},asignSpanLblID(e){return e+"_spanlbl"},async removeItemAtIndex(e,t){await ft("Do you want to delete it?",t)&&this.$emit("remove-item",e)},editItemAtIndex(e){this.$emit("edit-item",e)},highLightBnd(e){if(e){if(e.highlightbackground!==void 0&&e.highlightbackground==!0)return this.$props.highLightBackground}else return!1}}}),Ja=["onMousemove","onMouseout"],qa={class:"route-label"};function Wa(e,t,n,a,s,l){const i=v("ion-label"),d=v("ion-col"),p=v("ion-row"),h=v("ion-icon");return w(!0),L(ue,null,Ie(e.localMedicalDrugsList,(_,g)=>(w(),L("div",{id:"df",class:"medication-item",key:g,onMousemove:y=>e.highlightItem(g),onMouseout:y=>e.undoHighlightItem(g)},[o(p,{class:"medication-header"},{default:c(()=>[o(d,{class:me(["ion-text-wrap",e.highLightBnd(_)])},{default:c(()=>[o(i,{id:e.asignLblID(g),class:"medication-name"},{default:c(()=>[x($(_.drugName),1)]),_:2},1032,["id"])]),_:2},1032,["class"])]),_:2},1024),o(p,{class:"medication-details"},{default:c(()=>[o(d,{size:"10",class:me(["ion-text-wrap details-col",e.highLightBnd(_)])},{default:c(()=>[o(i,{class:"details-text"},{default:c(()=>[x($(_.dose)+" / "+$(_.frequency)+" / daily / "+$(_.duration)+" / until "+$(_.prescription)+" ",1),b("span",qa,$(_.route_name),1)]),_:2},1024)]),_:2},1032,["class"]),e.show_actions_buttons?(w(),se(d,{key:0,class:me([e.highLightBnd(_),"actions-col"]),size:"2"},{default:c(()=>[o(i,{class:me(["action-button",e.asignSpanLblID(g)]),onClick:y=>e.editItemAtIndex(g)},{default:c(()=>[o(h,{icon:e.iconsContent.edit},null,8,["icon"])]),_:2},1032,["class","onClick"]),o(i,{class:me(["action-button",e.asignSpanLblID(g)]),onClick:y=>e.removeItemAtIndex(g,y)},{default:c(()=>[o(h,{icon:e.iconsContent.delete},null,8,["icon"])]),_:2},1032,["class","onClick"])]),_:2},1032,["class"])):ne("",!0)]),_:2},1024)],40,Ja))),128)}const Us=j(Va,[["render",Wa],["__scopeId","data-v-01c693a3"]]),za={key:0,class:"custom-allergy-container"},Ga=J({watch:{},name:"AllergiesComponent"}),Ya=J({...Ga,setup(e){const t=vn(),n=W(),a=le(()=>t.selectedMedicalAllergiesList),s=le(()=>n.patient),l=le(()=>t.medicalAllergiesList),i=M(f(8,"item-")),d=M(),p=M(!1),h=[{multi_Selection:!0,show_list_label:!0,unqueId:i.value,name_of_list:"Add/Remove allergies",placeHolder:"Search for an allergy",items:[],listUpdatedFN:y,listFilteredFN:()=>{},searchTextFN:R,use_internal_filter:!0,show_error:M(!1),error_message:"please select a User",disabled:M(!1)}],_=M(!1);Me(async()=>{g()});const g=()=>{t.current_patient.ID!=s.value.ID&&(t.clearSelectedMedicalAllergiesList(),t.setCurrentPatient(s.value))};function y(O){O.forEach(u=>{u.selected==!0&&u.name==="Other"&&(p.value=u.name==="Other")}),t.setSelectedMedicalAllergiesList(O),S()}async function R(O){const u=O,I=await X.getConceptSet("OPD Medication",u);I.map(U=>({label:U.name,value:U.name,other:U}));const A=_n(u),q=Dn(A,I).sort((U,V)=>U.name.localeCompare(V.name));t.setMedicalAllergiesList(q),S()}function S(){const O=l.value;a.value.forEach(I=>{let A=!1;O.forEach((H,q)=>{H.concept_id==I.concept_id&&I.selected===!0&&(O[q]=I,A=!0)}),!A&&I.selected===!0&&O.push(I)});const u=O.filter((I,A,H)=>A===H.findIndex(q=>q.concept_id===I.concept_id));t.setMedicalAllergiesList(u)}function f(O=8,u=""){const I="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let A=u;for(let H=0;H<O;H++)A+=I.charAt(Math.floor(Math.random()*I.length));return A+="-".concat(Date.now()),A}async function P(O){try{const u=O.trim();if(u){const I={name:u,selected:!0};t.setMedicalAllergiesList([...l.value,I]),t.setSelectedMedicalAllergiesList(I),p.value=!1,_.value=!0,d.value="";const A=t.findSelectedAllergyByName("Other");t.removeSelectedAllergy(A)}}catch(u){console.error(u)}}return(O,u)=>(w(),se(B(Qt),null,{default:c(()=>[o(B(Zt),null,{default:c(()=>[o(B(Oe),{class:"header-container"},{default:c(()=>[o(B(ze),{icon:B(en),class:"allergy-icon"},null,8,["icon"]),u[2]||(u[2]=b("span",{style:{"font-size":"16px","font-weight":"600"}}," Allergies (Medication, Healthcare items, Environment and Food) ",-1))]),_:1,__:[2]})]),_:1}),o(B(tn),null,{default:c(()=>[o(yn,{multiSelection:h[0].multi_Selection,show_label:h[0].show_list_label,uniqueId:h[0].unqueId,name_of_list:h[0].name_of_list,choose_place_holder:h[0].placeHolder,"items_-list":l.value,use_internal_filter:h[0].use_internal_filter,disabled:h[0].disabled.value,onItemListUpDated:h[0].listUpdatedFN,onItemListFiltered:h[0].listFilteredFN,onItemSearchText:h[0].searchTextFN},null,8,["multiSelection","show_label","uniqueId","name_of_list","choose_place_holder","items_-list","use_internal_filter","disabled","onItemListUpDated","onItemListFiltered","onItemSearchText"]),p.value?(w(),L("div",za,[o(B(gt),{modelValue:d.value,"onUpdate:modelValue":u[0]||(u[0]=I=>d.value=I),placeholder:"Please specify the allergy",fill:"outline",class:"custom-input"},null,8,["modelValue"]),o(B(Ee),{onClick:u[1]||(u[1]=I=>P(d.value)),class:"addCustomAllergyBtn"},{default:c(()=>u[3]||(u[3]=[x(" Add Allergy ",-1)])),_:1,__:[3]})])):ne("",!0)]),_:1})]),_:1}))}}),Vs=j(Ya,[["__scopeId","data-v-8aa98f55"]]),ja=Te("nonPharmaTherapyStore",{state:()=>({items:[{id:"wound-dressing",label:"Wound dressing",checked:!1},{id:"patient-education",label:"Patient education",checked:!1},{id:"counseling",label:"Counseling",checked:!1},{id:"minor-surgery",label:"Minor Surgery",checked:!1}],current_patient:{}}),actions:{async saveNonPharmaTherapyPatientData(){const e=bn(),t=[];this.items.forEach(n=>{n.checked==!0&&t.push({concept_id:11023,value_text:n.label,obs_datetime:k.toStandardHisFormat(C.getSessionDate()),location_id:e.facilityLocation.code})});try{t.length>0&&Ka(t)}catch(n){Z("Unable to update Non Pharma Therapy!")}this.clearSelectednonPharmaTherapyStore()},clearSelectednonPharmaTherapyStore(){this.items.forEach(e=>{e.checked=!1})},setCurrentPatient(e){this.current_patient=e}},persist:!0});async function Ka(e){var t,n,a;try{const s=W(),{patient:l}=Y(s),i=JSON.parse(JSON.stringify(l.value));(a=(n=(t=i.notes)!=null?t:i.notes={}).unsaved)!=null||(n.unsaved=[]),i.notes.unsaved.push(...e),await de(i),z("Non Pharma Therapy has been saved")}catch(s){Z("Unable to create non pharmalogical notes!")}}const Xa={class:"checklist-container"},Qa=J({watch:{},name:"xxxComponent"}),Za=J({...Qa,setup(e){const t=W(),n=le(()=>t.patient),a=ja(),s=a.items;Me(async()=>{l()});const l=()=>{a.current_patient.ID!=n.value.ID&&(a.clearSelectednonPharmaTherapyStore(),a.setCurrentPatient(n.value))};return Ce(()=>n.value,async i=>{}),(i,d)=>(w(),L("div",Xa,[(w(!0),L(ue,null,Ie(B(s),p=>(w(),se(B(ge),{key:p.id,class:"no-border"},{default:c(()=>[o(B(nn),{id:p.id,modelValue:p.checked,"onUpdate:modelValue":h=>p.checked=h,slot:"start"},null,8,["id","modelValue","onUpdate:modelValue"]),o(B(Oe),{style:{"font-size":"16px","font-weight":"600"}},{default:c(()=>[x($(p.label),1)]),_:2},1024)]),_:2},1024))),128))]))}}),Js=j(Za,[["__scopeId","data-v-371e920f"]]);async function qs(){var e,t,n;try{const a=W(),{patient:s}=Y(a),l=ts(),i=JSON.parse(JSON.stringify(s.value));if(l.length>0){(n=(t=(e=i.MedicationOrder)!=null?e:i.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const d=i.MedicationOrder.unsaved.findIndex(h=>h.NCD_Drug_Orders);if(d>=0)i.MedicationOrder.unsaved[d].NCD_Drug_Orders=[...i.MedicationOrder.unsaved[d].NCD_Drug_Orders,...l];else{const h={NCD_Drug_Orders:l};i.MedicationOrder.unsaved.push(h)}await de(i),ee().clearMedicationDataStores(),z("Drug order(s) has been created")}else Z("Unable to create drug orders!")}catch(a){Z("Unable to create drug orders!")}}function lt(){try{const e=new Date(C.getSessionDate()),n=Ge().selectedMedicalDrugsList;let a=0;if(n.forEach(h=>{const _=parseInt(h.duration,10);!isNaN(_)&&_>a&&(a=_)}),a<=0)return{date:null,formattedDate:null};const s=new Date(e);s.setDate(e.getDate()+a);const l=String(s.getDate()).padStart(2,"0"),i=String(s.getMonth()+1).padStart(2,"0"),d=s.getFullYear(),p="".concat(l,"/").concat(i,"/").concat(d);return{date:s,formattedDate:p}}catch(e){return console.error("Error calculating OPD medication run out date:",e),{date:null,formattedDate:null}}}function es(){try{const e=new Date(C.getSessionDate()),n=ee().selectedNCDMedicationList;let a=0;if(n.forEach(h=>{const _=parseInt(h.duration,10);!isNaN(_)&&_>a&&(a=_)}),a<=0)return{date:null,formattedDate:null};const s=new Date(e);s.setDate(e.getDate()+a);const l=String(s.getDate()).padStart(2,"0"),i=String(s.getMonth()+1).padStart(2,"0"),d=s.getFullYear(),p="".concat(l,"/").concat(i,"/").concat(d);return{date:s,formattedDate:p}}catch(e){return console.error("Error calculating medication run out date:",e),{date:null,formattedDate:null}}}const ts=()=>{const e=ee();return e.selectedNCDMedicationList.map(t=>{t.frequency=e.frequency_selections[t.drug_id]||"",t.totalDosage=Object.values(t.dosage).reduce((s,l)=>s+Number(l),0);const n=Ct.getSessionDate(),a=ss(t.drug_id);return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.totalDosage=="Unknown"?0:t.totalDosage*(a==null?void 0:a.value)||0,start_date:n,auto_expire_date:Mt(n,t.duration),units:t.units,instructions:"".concat(t.name," ").concat(t.totalDosage," ").concat(t.units," ").concat((a==null?void 0:a.code)||""," for ").concat(t.duration," days"),dose:ns(t),frequency:(a==null?void 0:a.code)||""}})},ns=e=>e.dose_strength!=null&&e.dose_strength?Math.trunc(e.dose_strength):1;async function Ws(){var e,t,n;try{const a=W(),{patient:s}=Y(a),l=as(),i=JSON.parse(JSON.stringify(s.value));if(l.length>0){(n=(t=(e=i.MedicationOrder)!=null?e:i.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const d=i.MedicationOrder.unsaved.findIndex(h=>h.NCD_Drug_Orders);if(d>=0)i.MedicationOrder.unsaved[d].NCD_Drug_Orders=[...i.MedicationOrder.unsaved[d].NCD_Drug_Orders,...l];else{const h={NCD_Drug_Orders:l};i.MedicationOrder.unsaved.push(h)}await de(i),Ge().clearSelectedMedicalDrugsList(),z("Drug order(s) has been created")}else Z("Unable to create drug orders!")}catch(a){Z("Unable to create drug orders!")}}const as=()=>Ge().selectedMedicalDrugsList.map(t=>{const n=Ct.getSessionDate(),a=ie.find(s=>s.label===t.frequency)||{};return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.dose=="Unknown"?0:t.dose*(a==null?void 0:a.value)||0,start_date:n,auto_expire_date:Mt(n,t.duration),units:t.units,instructions:"".concat(t.drugName,": ").concat(t.dose," ").concat(t.units," ").concat((a==null?void 0:a.code)||""," for ").concat(t.duration," days"),dose:t.dose,frequency:(a==null?void 0:a.code)||""}}),ss=e=>{const n=ee().selectedNCDMedicationList.find(s=>s.drug_id===e);if(!n||!n.dosage)return null;switch(["morning","afternoon","evening"].reduce((s,l)=>s+(n.dosage[l]?1:0),0)){case 1:return n.dosage.morning?ie.find(s=>s.code==="QAM"):n.dosage.afternoon?ie.find(s=>s.code==="QNOON"):n.dosage.evening?ie.find(s=>s.code==="QPM"):ie.find(s=>s.code==="OD");case 2:return ie.find(s=>s.code==="BD");case 3:return ie.find(s=>s.code==="TDS");default:return ie.find(s=>s.code==="Unknown")}},Mt=(e,t)=>{const n=new Date(e);return n.setDate(n.getDate()+parseInt(t)),k.toStandardHisFormat(n)},os=J({components:{IonContent:ve,IonHeader:we,IonItem:ge,IonList:Be,IonMenu:Le,IonTitle:fe,IonToolbar:Pe,BasicInputField:_t,IonDatetime:sn,IonBadge:an,DateInputField:An,DynamicButton:_e},setup(){const e=He(),t=M(0),n=le(()=>e.getDisabledDates()),a=le(()=>e.getAssignedAppointments()),s=M();return{disabledDates:n,datesCounts:a,appointment_count:t,calendarOutline:on,inputPRDate:s}},data(){return oe(),at(),{iconsContent:ae,date:new Date(C.getSessionDate()),tomorrow:new Date(C.getSessionDate()).getDate()+1,appointment:"",drugRunoutDate:"",nextAppointmentDate:"",minDate:new Date(C.getSessionDate())}},computed:{...re(oe,["nextAppointment","appointmentCountsCache","currentSelectedNextAppointmentDate"]),...re(He,["maximumNumberOfDaysForEachDay","assignedAppointmentsDates"]),...re(W,["patient"]),...re(at,["activeProgram"]),calendarDate(){const e=oe();return e.currentSelectedNextAppointmentDate?k.toStandardHisDisplayFormat(e.currentSelectedNextAppointmentDate):""},runOutDate(){var e;return((e=this.activeProgram)==null?void 0:e.program_id)===14?lt():es()}},watch:{calendarDate:{handler(){this.updateNextAppointment()},deep:!0},"$service.sessionDate":{handler(){this.updateMinDate()},immediate:!0},"patient.ID":{async handler(e,t){e!==t&&(this.cleanCurrentNextAppointmentDate(),this.checkIfSamePatientInContext())}}},async mounted(){this.checkIfSamePatientInContext(),await this.getAppointmentMents(this.runOutDate.date),await On().loadGlobalProperty(),this.validateAppointmentCountsCache(),await this.preloadAppointmentCounts(),wn();const e=C.getUserID(),t=new bt;this.appointment=new Ne(t.getID(),e),this.nextAppointmentDate=this.appointment.date,this.supposedRunOutDate(),window.addEventListener("storage",this.handleStorageChange),lt()},beforeUnmount(){window.removeEventListener("storage",this.handleStorageChange)},methods:{handleStorageChange(e){e.key==="sessionDate"&&this.updateMinDate()},updateMinDate(){this.date=new Date(C.getSessionDate()),this.minDate=new Date(C.getSessionDate())},updateNextAppointment(){oe().setNextAppointment(this.calendarDate)},async handleDateUpdate(e){e&&(He().setsssignedAppointmentsDates(e,!0),this.calendarDate=k.toStandardHisDisplayFormat(e),await this.save(),await this.getAppointmentMents(e),await this.updateAppointmentCache(e),oe().setCurrentSelectedNextAppointmentDate(e,this.patient.ID))},async getAppointmentMents(e){if(Cn().apiStatus)try{const n=await Ne.getDailiyAppointments(k.toStandardHisFormat(e),k.toStandardHisFormat(e));this.appointment_count=n.length}catch(n){}},getCounter(e){const t=k.toStandardHisFormat(e);return this.appointmentCountsCache[t]||""},async save(){if(this.assignedAppointmentsDates.length>0)try{const t=await new Nn().createOfflineAppointment()}catch(e){}},async openCornfirmModal(e){this.calendarDate=k.toStandardHisDisplayFormat(e),await this.getAppointmentMents(e),vt(Sn,{class:"otherVitalsModal"},!0,{message:"Are you sure you want to add this Appointment?"},{cancel:s=>{},confirm:async s=>{s.detail==!0&&await this.handleDateUpdate(e)}})},async handleInput(e){this.inputPRDate=k.toStandardHisDisplayFormat(e),await this.openCornfirmModal(e)},async supposedRunOutDate(){await yt.getLastDrugsReceived(this.patient.patientID)},async preloadAppointmentCounts(){try{const e=new Date(C.getSessionDate());e.setDate(1);const t=new Date(C.getSessionDate());t.setMonth(t.getMonth()+2),t.setDate(0);try{const n=await Ne.getDailiyAppointments(k.toStandardHisFormat(e),k.toStandardHisFormat(t)),a=this.filterUniqueAppointments(n),s={};a.forEach(l=>{const i=new Date(l.appointment_date),d=k.toStandardHisFormat(i);s[d]||(s[d]=0),s[d]++}),Object.keys(s).forEach(l=>{this.appointmentCountsCache[l]=s[l]})}catch(n){console.error("Error fetching appointments for date range:",n)}}catch(e){console.error("Error in preload process:",e)}},filterUniqueAppointments(e){const t=new Map;return e.forEach(n=>{const a="".concat(n.given_name,"_").concat(n.family_name,"_").concat(n.birthdate,"_").concat(n.appointment_date);t.has(a)||t.set(a,n)}),Array.from(t.values())},async updateAppointmentCache(e){try{const t=k.toStandardHisFormat(e),n=await Ne.getDailiyAppointments(k.toStandardHisFormat(e),k.toStandardHisFormat(e));this.appointmentCountsCache[t]=n.length}catch(t){console.error("Error updating appointment cache:",t)}},validateAppointmentCountsCache(){oe().checkCurrentLocationIfInContext()},isRunOutDate(e){return!this.runOutDate||!this.runOutDate.date?!1:k.toStandardHisFormat(e)===k.toStandardHisFormat(this.runOutDate.date)},cleanCurrentNextAppointmentDate(){oe().cleanCurrentSelectedNextAppointmentDate()},checkIfSamePatientInContext(){const e=oe();e.current_patient.ID!=this.patient.ID&&(this.cleanCurrentNextAppointmentDate(),e.setCurrentPatient(this.patient))}}}),is={class:"card_content"},rs={class:"count-badge"},ls={class:"dates_title"},ds={class:"sub_data"},cs={class:"dates_title"},us={class:"sub_data"},ps={class:"dates_title"},ms={class:"sub_data"},hs={class:"dates_title"},gs={class:"sub_data"};function fs(e,t,n,a,s,l){const i=v("VueDatePicker"),d=v("ion-col"),p=v("DynamicButton"),h=v("ion-item"),_=v("ion-row"),g=v("DateInputField");return w(),L("div",is,[o(_,null,{default:c(()=>[o(d,{"size-sm":"12","size-md":"12","size-lg":"12","size-xl":"8"},{default:c(()=>[o(i,{class:"calender",onDateUpdate:e.openCornfirmModal,inline:"","auto-apply":"","enable-time-picker":!1,"disabled-dates":e.disabledDates,"min-date":e.minDate,modelValue:e.runOutDate.date,"onUpdate:modelValue":t[0]||(t[0]=y=>e.runOutDate.date=y)},{day:c(({day:y,date:R})=>[(w(),L("p",{key:0,class:me({"run-out-date":e.isRunOutDate(R)}),style:{"font-weight":"600","font-size":"20px"}},[b("span",null,[x($(y),1),b("sup",rs,$(e.getCounter(R)),1)])],2))]),_:1},8,["onDateUpdate","disabled-dates","min-date","modelValue"])]),_:1}),o(d,null,{default:c(()=>[o(h,null,{default:c(()=>[b("div",ls,[t[3]||(t[3]=b("div",null,[x("Suggested Next Appointment Date "),b("span",{style:{"font-size":"16px"}},"(Medication run out date)")],-1)),b("div",ds,[x($(e.runOutDate.formattedDate||"No run out date available")+" ",1),e.runOutDate.formattedDate?(w(),se(p,{key:0,onClick:t[1]||(t[1]=y=>e.handleDateUpdate(e.runOutDate.date)),name:"Set Next Appt.",fill:"solid",iconSlot:"icon-only",style:{float:"right"}})):ne("",!0)])])]),_:1}),o(h,null,{default:c(()=>[b("div",cs,[t[4]||(t[4]=b("div",null,"User set appointment date",-1)),b("div",us,$(e.calendarDate),1)])]),_:1}),o(h,null,{default:c(()=>[b("div",ps,[t[5]||(t[5]=b("div",null,"Appointments",-1)),b("div",ms,$(e.appointment_count),1)])]),_:1}),o(h,null,{default:c(()=>[b("div",hs,[t[6]||(t[6]=b("div",null,"Appointment limit (per/day)",-1)),b("div",gs,$(e.appointment_count)+"/"+$(e.maximumNumberOfDaysForEachDay),1)])]),_:1})]),_:1})]),_:1}),o(_,null,{default:c(()=>[o(d,{size:"4"},{default:c(()=>[o(g,{inputHeader:"Preferred Next Appointment Date",bold:"600",fontSize:"17px",placeholderFontSize:"17px",placeholderFontWeight:"600",unit:"",icon:e.calendarOutline,placeholder:"press to select date",iconRight:"",inputWidth:"100%",inputValue:e.inputPRDate,eventType:"",minDate:e.minDate,maxDate:"",disabled:!1,"onUpdate:rawDateValue":t[2]||(t[2]=y=>e.handleInput(y))},null,8,["icon","inputValue","minDate"])]),_:1})]),_:1})])}const zs=j(os,[["render",fs],["__scopeId","data-v-2742dd5f"]]);export{Vs as A,Us as D,Ns as I,Ts as M,zs as N,Fs as P,jn as S,Rs as T,ea as _,xs as a,Ka as b,qs as c,ja as d,Ws as e,Es as f,Ra as g,Hs as h,Ps as i,Bs as j,xa as k,La as l,Ls as m,As as n,Js as o,$s as s,ee as u};
