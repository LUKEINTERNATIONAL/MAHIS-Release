import{d as g,ab as o,bg as B,_ as D,a2 as F,af as U,ae as P,aN as y,ck as k,aO as M,aM as C,aP as V,N as T,G as $,E as z,aa as O,cb as E,I as H,a7 as L,aR as N,bD as R,H as s,O as W,f as A,J as d,l as i}from"./vendor-CwRShy1a.js";import{aT as v,N as G,T as j,S as c,t as n,G as p,aQ as q,u as x,k as J,_ as Q}from"./index-Dxep0tg5.js";import{D as K}from"./DemographicBar-COOGLEhV.js";import{S as X,p as Y,q as Z,r as tt,s as et,t as at,w as ot}from"./Stepper-FGBokQe8.js";import{f as u,c as r,a as m}from"./formatServerData-lOuD_sH6.js";import{B as st}from"./BasicFooter-PFgPhXlb.js";import{_ as nt}from"./NextAppointment-C4j-P7QF.js";import{_ as it}from"./SetEncounter.vue_vue_type_script_lang-Hy7vbdXk.js";import"./lodash-Dt8AsbQm.js";import"./apexcharts-B7MGi37O.js";import"./OPDOutcome-WTPZ0mE3.js";import"./patient_complaints_service-di6as6j_.js";import"./DashBox-BhJ9LbXS.js";import"./BasicForm--1-sfsO7.js";import"./DateInputField-Ci2QHCNv.js";import"./drug_prescription_service-DtmFSVu0.js";import"./drug_service-BQdAoscq.js";import"./Outcome-m6tE6HTx.js";import"./VitalsMixin.vue_vue_type_script_lang-BQeaBYxy.js";import"./TreatmentPlan-B-MqwmAR.js";import"./previousDiagnosis-B0lIHFeb.js";import"./group_validation-C76G7a9T.js";import"./FeatusModal--IIt_WdR.js";import"./BasicCard-C6G6VBfA.js";import"./PastObstreticHistoryStore-Dki1lwFW.js";import"./SaveProgressModal-DuChkjq3.js";import"./lab_order-gVzJs4Hu.js";import"./UpcomingFeature-svio3jTB.js";import"./ncd_appointment_service-BF0KT24t.js";class rt extends v{constructor(t,a){super(t,57,a)}}class h extends v{constructor(t,a){super(t,151,a)}}const lt=g({name:"Home",mixins:[nt,it],components:{BasicFooter:st,IonContent:L,IonHeader:H,IonMenuButton:E,IonPage:O,IonTitle:z,IonToolbar:$,Toolbar:j,ToolbarSearch:G,DemographicBar:K,IonButton:T,IonCard:V,IonCardContent:C,IonCardHeader:M,IonCardSubtitle:k,IonCardTitle:y,IonAccordion:P,IonAccordionGroup:U,IonItem:F,IonLabel:D,IonModal:B,Stepper:X},data(){return{wizardData:[{title:"Medical follow-up",class:"common_step",checked:"",icon:!1,disabled:!1,number:1,last_step:""},{title:"Persistent behaviours and symptoms",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Intimate partner violence(IPV)",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:"last_step"}],StepperData:[{title:"Medical follow-up",component:"MedicalFollowUp",value:"1"},{title:"Persistent behaviours and symptoms",component:"PersistentBehaviour",value:"2"},{title:"Intimate partner violence(IPV)",component:"Ipv",value:"3"}],isOpen:!1,iconsContent:J}},computed:{...o(ot,["medicalFollowUp"]),...o(at,["persistentBehaviour"]),...o(et,["physiologicalSymptoms"]),...o(tt,["ipv","ipv1","additionalCare","safety_assessment","physical_violence","beaten_pregnant","strangling","murder_threat","referrals","constant_jealous","woman_threatened"]),...o(Z,["fatalMovement"]),...o(x,["patient"])},mounted(){this.markWizard()},setup(){return{chevronBackOutline:R,checkmark:N}},methods:{markWizard(){},getSaveFunction(){},getFormatedData(e){return e.map(t=>t==null?void 0:t.data)},async saveData(){this.saveMedicalFollowUp(),this.savePersistentBehaviours(),this.saveIPV(),await q(),this.$router.push("contact")},async buildMedicalFollowUp(){return[...await u(this.medicalFollowUp),...await r(this.medicalFollowUp),...await m(this.medicalFollowUp)]},async validations(e,t){return t.every(a=>Y(e,a,this[a]))},async buildPersistentBehaviours(){return[...await u(this.persistentBehaviour),...await r(this.persistentBehaviour),...await m(this.persistentBehaviour)]},async buildCurrentPhysiologicalSymptoms(){return[...await r(this.physiologicalSymptoms)]},async buildIPV(){return[...await r(this.ipv),...await m(this.ipv)]},async buildFetalMovement(){return[...await u(this.fatalMovement)]},async saveMedicalFollowUp(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new rt(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create medical follow up encounter");if(!await t.saveObservationList(await this.buildMedicalFollowUp()))return n("Unable to create patient Medical follow up details!");p("Medical follow up has been created")}console.log(await this.buildMedicalFollowUp())},async savePersistentBehaviours(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new h(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create persistent behaviour encounter");if(!await t.saveObservationList(await this.buildPersistentBehaviours()))return n("Unable to create patient persistent behaviour details!");p("Persistent behaviour details have been created")}console.log(await this.buildPersistentBehaviours())},async saveIPV(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new h(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create IPV encounter");if(!await t.saveObservationList(await this.buildIPV()))return n("Unable to create patient IPV details!");p("IPV details have been created")}console.log(await this.buildIPV())}}});function ct(e,t,a,l,pt,ut){const w=s("Toolbar"),b=s("DemographicBar"),f=s("Stepper"),I=s("ion-content"),S=s("BasicFooter"),_=s("ion-page");return A(),W(_,null,{default:d(()=>[i(w),i(I,{fullscreen:!0},{default:d(()=>[i(b),i(f,{stepperTitle:"Symptoms  and follow up",wizardData:e.wizardData,onUpdateStatus:e.markWizard,StepperData:e.StepperData,backUrl:e.userRoleSettings.url,backBtn:e.userRoleSettings.btnName,getSaveFunction:e.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),i(S,{onFinishBtn:t[0]||(t[0]=mt=>e.saveData())})]),_:1})}const Wt=Q(lt,[["render",ct]]);export{Wt as default};
