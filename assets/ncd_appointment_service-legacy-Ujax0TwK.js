!function(){function t(t,e,n){return(e=function(t){var e=function(t,e){if("object"!=typeof t||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var a=n.call(t,e||"default");if("object"!=typeof a)return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===e?String:Number)(t)}(t,"string");return"symbol"==typeof e?e:e+""}(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}System.register(["./vendor-legacy-CFX0KWSj.js","./BasicForm-legacy-X9O96rDD.js","./index-legacy-D84VBdSl.js","./app_encounter_service-legacy-Cxa6AD1t.js","./clinicalDaysStore-legacy-BNeRZsD-.js"],function(e,n){"use strict";var a,i,o,r,s,d,c,l,u,p,m,g,y,h,D,f,v,b,$,w,C,I,S,_,k,A;return{setters:[t=>{a=t.R,i=t.d,o=t.ar,r=t.G,s=t.S,d=t.a9,c=t.E,l=t.e,u=t.f,p=t.F,m=t.L,g=t.y,y=t.z,h=t.k,D=t.l,f=t.B},t=>{v=t.B},t=>{b=t._,$=t.u,w=t.S,C=t.H,I=t.t,S=t.j,_=t.a0},t=>{k=t.A},t=>{A=t.u}],execute:function(){var n=document.createElement("style");n.textContent=".card_row[data-v-47b63a8a]{justify-content:center}.registration_header[data-v-47b63a8a]{display:flex}.icon_col[data-v-47b63a8a]{justify-content:right;display:flex;align-items:center}\n/*$vite$:1*/",document.head.appendChild(n);const x=e("u",a("configurationStore",{state:()=>({registrationDisplayType:"grid",enrollmentDisplayType:"grid"}),actions:{setRegistrationDisplayType(t){this.registrationDisplayType=t},setEnrollmentDisplayType(t){this.enrollmentDisplayType=t}},persist:!0})),j=i({data:()=>({screenWidth:window.innerWidth,screenheight:window.innerHeight}),mounted(){window.addEventListener("resize",this.updateSize)},beforeDestroy(){window.removeEventListener("resize",this.updateSize)},methods:{updateSize(){this.screenWidth=window.innerWidth,this.screenheight=window.innerHeight}}}),T=i({name:"Menu",mixins:[j],components:{IonContent:d,IonHeader:s,IonItem:r,BasicForm:v},data:()=>({iconListStatus:"active_icon",iconGridStatus:"inactive_icon"}),emits:["countryChanged","update:selected","update:inputValue","clicked:button","clear:radio"],computed:{...o(x,["registrationDisplayType"])},props:{content:{default:""},contentTwo:{default:""},size:{default:""},editable:{default:!1}}}),V={key:0,class:"demographics"},P={class:"card_content"},U={class:"card_hearder"};e("B",b(T,[["render",function(t,e,n,a,i,o){const r=c("basic-form"),s=c("ion-card");return t.editable?(u(!0),l(p,{key:1},m(t.content.cards,(n,a)=>(u(),l("div",{key:a},[D(r,{contentData:n.content,initialData:n.initialData,"onUpdate:selected":e[10]||(e[10]=e=>t.$emit("update:selected",e)),"onUpdate:inputValue":e[11]||(e[11]=e=>t.$emit("update:inputValue",e)),onCountryChanged:e[12]||(e[12]=(e,n)=>t.$emit("countryChanged",e,n)),"onClicked:button":e[13]||(e[13]=e=>t.$emit("clicked:button",e)),"onClear:radio":e[14]||(e[14]=(e,n)=>t.$emit("clear:radio",e,n))},null,8,["contentData","initialData"]),D(r,{contentData:n.contentTwo,"onUpdate:selected":e[15]||(e[15]=e=>t.$emit("update:selected",e)),onCountryChanged:e[16]||(e[16]=(e,n)=>t.$emit("countryChanged",e,n)),"onUpdate:inputValue":e[17]||(e[17]=e=>t.$emit("update:inputValue",e)),"onClicked:button":e[18]||(e[18]=e=>t.$emit("clicked:button",e)),"onClear:radio":e[19]||(e[19]=(e,n)=>t.$emit("clear:radio",e,n))},null,8,["contentData"])]))),128)):(u(),l("div",V,[(u(!0),l(p,null,m(t.content.cards,(n,a)=>(u(),g(s,{class:"registration_ion_card",key:a},{default:y(()=>[h("div",P,[h("div",U,f(n.cardTitle),1),D(r,{contentData:n.content,initialData:n.initialData,"onUpdate:selected":e[0]||(e[0]=e=>t.$emit("update:selected",e)),"onUpdate:inputValue":e[1]||(e[1]=e=>t.$emit("update:inputValue",e)),"onClicked:button":e[2]||(e[2]=e=>t.$emit("clicked:button",e)),onCountryChanged:e[3]||(e[3]=(e,n)=>t.$emit("countryChanged",e,n)),"onClear:radio":e[4]||(e[4]=(e,n)=>t.$emit("clear:radio",e,n))},null,8,["contentData","initialData"]),D(r,{contentData:n.contentTwo,"onUpdate:selected":e[5]||(e[5]=e=>t.$emit("update:selected",e)),"onUpdate:inputValue":e[6]||(e[6]=e=>t.$emit("update:inputValue",e)),onCountryChanged:e[7]||(e[7]=(e,n)=>t.$emit("countryChanged",e,n)),"onClicked:button":e[8]||(e[8]=e=>t.$emit("clicked:button",e)),"onClear:radio":e[9]||(e[9]=(e,n)=>t.$emit("clear:radio",e,n))},null,8,["contentData"])])]),_:2},1024))),128))]))}],["__scopeId","data-v-47b63a8a"]]));class E extends k{constructor(e){const n=void 0!==e?e:E.getPatientID(),a=E.getProviderID();super(n,7,a),t(this,"patientID",void 0),t(this,"providerID",void 0),this.patientID=n,this.providerID=a}static getPatientID(){return $().patient.patientID}static getProviderID(){return w.getUserID()}async setPatientID(t){this.patientID=t}async createAppointment(){const t=[];A().assignedAppointmentsDates.forEach(e=>{if(1==e.markedNextApt){const n=C.toStandardHisFormat(e.date);t.push(n)}}),await this.createEncounter();const e=await this.buildValueDate("Appointment date",t[0]);return await this.saveObservationList([e])?(S("next Appointment Set Successfully"),[this.patientID,t[0]]):I("Unable set Next Appointment")}async createOfflineAppointment(){var t;const e=$();let n=JSON.parse(JSON.stringify(e.patient));const a=[];A().assignedAppointmentsDates.forEach(t=>{if(1==t.markedNextApt){const e=C.toStandardHisFormat(t.date);a.push(e)}});const i=await this.buildValueDate("Appointment date",a[0]);return console.log(JSON.stringify(i)),null==n||null===(t=n.appointments.unsaved)||void 0===t||t.push(i),await _(n),S("next Appointment Set Successfully"),a[0]}async getNextAppointment(){return k.getJson(`/programs/${this.programID}/patients/${this.patientID}/next_appointment_date`,{date:this.date})}async getDailiyAppointments(t){const e=k.getProgramID();return k.getJson(`/programs/${e}/booked_appointments`,{date:t,paginate:!1})}static async getAppointments(t,e="",n=""){const a=k.getProgramID();return k.getJson(`/programs/${a}/booked_appointments`,{date:t,end_date:e,srch_text:n,paginate:!1})}}e("A",E)}}})}();
