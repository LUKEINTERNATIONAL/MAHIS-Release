!function(){function e(e,t,a){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var a=e[Symbol.toPrimitive];if(void 0!==a){var n=a.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}System.register(["./vendor-legacy-C9lSrixH.js","./index-legacy-B5pKdIAM.js","./DashBox-legacy-yUVzW5NL.js","./BasicForm-legacy-C_vSVhH8.js","./LabOrdersList-legacy-vz7yGL0A.js","./group_validation-legacy-Da-rjCuR.js","./lodash-legacy-pOOc9Efu.js","./drug_prescription_service-legacy-IcWd-df4.js","./ncd_appointment_service-legacy-DBwJMhf8.js","./DateInputField-legacy-CEinTPuT.js"],function(t,a){"use strict";var n,i,o,s,d,r,l,c,u,p,h,m,g,v,f,y,b,D,_,x,k,S,I,w,C,M,A,B,O,L,E,N,P,F,T,R,H,z,U,$,V,q,j,J,W,Y,K,G,Q,X,Z,ee,te,ae,ne,ie,oe,se,de,re,le,ce,ue,pe,he,me,ge,ve,fe,ye,be,De,_e,xe,ke,Se,Ie,we,Ce,Me,Ae,Be,Oe,Le,Ee,Ne,Pe,Fe,Te,Re,He,ze,Ue,$e,Ve,qe;return{setters:[e=>{n=e.d,i=e.D,o=e.aV,s=e.r,d=e.a,r=e.H,l=e.O,c=e.f,u=e.J,p=e.l,h=e.k,m=e.e,g=e.P,v=e.F,f=e.m,y=e.u,b=e.ah,D=e.b5,_=e.b2,x=e.G,k=e.E,S=e.ai,I=e.aj,w=e.$,C=e.I,M=e.a4,A=e.bf,B=e.aU,O=e.Q,L=e.L,E=e.X,N=e.a6,P=e.p,F=e.K,T=e.c,R=e.aS,H=e.aR,z=e.av,U=e.aP,$=e.N,V=e.a3,q=e.w,j=e.bs,J=e.bo,W=e.bN,Y=e.aM},e=>{K=e.O,G=e.by,Q=e.t,X=e.S,Z=e.i,ee=e._,te=e.M,ae=e.be,ne=e.B,ie=e.bp,oe=e.Q,se=e.s,de=e.aP,re=e.aG,le=e.H,ce=e.u,ue=e.aW,pe=e.ag,he=e.bz,me=e.aY,ge=e.P,ve=e.a8,fe=e.K,ye=e.X,be=e.aQ,De=e.bA,_e=e.bB,xe=e.ar,ke=e.aI,Se=e.aJ,Ie=e.a1,we=e.b1,Ce=e.A,Me=e.o,Ae=e.bo,Be=e.f,Oe=e.ay,Le=e.D,Ee=e.az,Ne=e.y},e=>{Pe=e.D},e=>{Fe=e.B},e=>{Te=e.default},e=>{Re=e.v},e=>{He=e.l},e=>{ze=e.g,Ue=e.a,$e=e.D},e=>{Ve=e.A},e=>{qe=e.D}],execute:function(){var a=document.createElement("style");a.textContent="#ABDOMEN-2[data-v-5ab54fe8],#SPINE[data-v-5ab54fe8]{display:none}.white-fill[data-v-5ab54fe8]{fill:#fff!important}.dark-green-stroke[data-v-5ab54fe8]{stroke:#006401!important}.dark-green-fill[data-v-5ab54fe8]{fill:#006401!important}.bright-green-fill[data-v-5ab54fe8]{fill:#ded!important}ion-footer[data-v-5ab54fe8]{--ion-toolbar-background: #f4f4f4f4}ion-modal[data-v-5ab54fe8]{--width: 90%;--height: 94%}.form-column[data-v-5ab54fe8]{border-left:1px solid #a3a1a1;max-height:600px;display:flex;flex-direction:column}.scrollable-container[data-v-5ab54fe8]{overflow-y:auto;max-height:100%;padding-right:10px;padding-left:10px}.form-section[data-v-5ab54fe8]{margin-bottom:20px}.form-section h6[data-v-5ab54fe8]{margin-top:0;margin-bottom:10px;padding-bottom:5px;border-bottom:1px solid #eaeaea;font-weight:600}#container[data-v-c2f65a77]{text-align:center;position:absolute;left:0;right:0;top:50%;transform:translateY(-50%)}#container strong[data-v-c2f65a77]{font-size:20px;line-height:26px}#container p[data-v-c2f65a77]{font-size:16px;line-height:22px;color:#8c8c8c;margin:0}#container a[data-v-c2f65a77]{text-decoration:none}.action_buttons[data-v-c2f65a77]{color:var(--ion-color-primary);display:flex;align-items:center;float:right;max-width:70px}.modify_buttons[data-v-c2f65a77]{padding-left:20px}.item_no_border[data-v-c2f65a77]{--border-color: transparent}.search_result[data-v-c2f65a77]{padding:10px}.action_buttons[data-v-c2f65a77]{opacity:0;transition:opacity .3s}.dashed_bottom_border:hover .action_buttons[data-v-c2f65a77]{opacity:1}.dashed_bottom_border[data-v-c2f65a77]{font-weight:700}.sub_item_body[data-v-c2f65a77]{margin-left:45px}ion-segment-button[data-v-c2f65a77]{background:#fff;margin-right:1px;font-size:12px;text-transform:unset}.bottomSummary[data-v-c2f65a77]{margin-top:20px;max-width:600px}.bottomSummary .segment-button-checked[data-v-c2f65a77]{background:#fff!important;--indicator-color: none}.bottomSummary ion-segment-button[data-v-c2f65a77]{background:#e6e6e6;margin-right:5px;border-top-right-radius:10px;border-top-left-radius:10px;text-transform:unset;font-style:normal;font-weight:700;font-size:12px}.medication-item[data-v-01c693a3]{padding:16px;border-radius:8px;background:#fff;border:1px solid #e5e7eb;margin-bottom:12px;transition:all .2s ease}.medication-item[data-v-01c693a3]:hover{box-shadow:0 2px 4px rgba(0,0,0,.05);border-color:#d1d5db}.medication-header[data-v-01c693a3]{margin-bottom:8px}.medication-name[data-v-01c693a3]{color:#111827;font-size:16px;font-weight:600;line-height:1.4;font-family:Inter,system-ui,-apple-system,sans-serif}.medication-details[data-v-01c693a3]{align-items:center}.details-col[data-v-01c693a3]{padding-right:16px}.details-text[data-v-01c693a3]{color:#4b5563;font-size:14px;font-weight:500;line-height:1.5;font-family:Inter,system-ui,-apple-system,sans-serif}.route-label[data-v-01c693a3]{color:#dc2626;font-weight:600;padding:2px 6px;background-color:#fee2e2;border-radius:4px;margin-left:4px}.actions-col[data-v-01c693a3]{display:flex;justify-content:flex-end;align-items:center;gap:12px}.action-button[data-v-01c693a3]{display:none;padding:6px;border-radius:4px;cursor:pointer;transition:all .2s ease}.action-button[data-v-01c693a3]:hover{background-color:#f3f4f6}.action-button ion-icon[data-v-01c693a3]{font-size:18px;color:#6b7280}.item-native[data-v-01c693a3]{background-color:#f9fafb!important;border-radius:6px}.truncate-text[data-v-01c693a3]{overflow:hidden;white-space:nowrap;text-overflow:ellipsis;max-width:100%;display:block}.details-text[data-v-01c693a3]{font-size:600;font-size:16px;color:#4575d6}@media(max-width:640px){.medication-item[data-v-01c693a3]{padding:12px}.medication-name[data-v-01c693a3]{font-size:15px}.details-text[data-v-01c693a3]{font-size:13px}.actions-col[data-v-01c693a3]{gap:8px}}#container[data-v-4de36202]{text-align:center;position:absolute;left:0;right:0;top:50%;transform:translateY(-50%)}#container strong[data-v-4de36202]{font-size:20px;line-height:26px}#container p[data-v-4de36202]{font-size:16px;line-height:22px;color:#8c8c8c;margin:0}#container a[data-v-4de36202]{text-decoration:none}ion-item.medicalAl[data-v-4de36202]{--background: #fff;--border-radius: 5px}ion-button.medicalAlBtn[data-v-4de36202]{--background: #fecdca;--color: #b42318;text-transform:none}.error-label[data-v-4de36202]{background:#fecdca;color:#b42318;text-transform:none;padding:6%;border-radius:10px;margin-top:7px;display:flex;text-align:center}ion-button.addMedicalTpBtn[data-v-4de36202]{--background: #ddeedd;--color: #006401;text-transform:none;font-weight:600;font-size:16px}ion-button.medicalAlAddBtn[data-v-4de36202]{font-size:large}ion-icon.icon-al[data-v-4de36202]{font-size:x-large;margin-bottom:-5px}.item-al[data-v-4de36202]{cursor:pointer;padding:5px;background-color:#ebebeb;margin-top:8px}.item-al[data-v-4de36202]:hover{background-color:rgba(85,81,81,.282);padding:5px;border-radius:3px}ion-popover.popover-al[data-v-4de36202]{--background: #fff}ion-content.content-al[data-v-4de36202]{--background: #fff}ion-list.list-al[data-v-4de36202]{--background: #fff;-ion-item-background:#fff}.checkLbltp[data-v-4de36202]{border-bottom:2px dotted var(--ion-color-medium);--inner-border-width: 0}.tpStndCls[data-v-4de36202]{font-size:16px;font-weight:600;line-height:24px}.action_buttons[data-v-4de36202]{color:var(--ion-color-primary);display:flex;align-items:center;float:right}.action_buttons[data-v-4de36202]:hover{cursor:pointer}.spcls[data-v-4de36202]{display:flex;align-items:center}.previousView[data-v-4de36202]{width:100%;border-radius:10px;margin-top:10px}.previousLabel[data-v-4de36202]{font-weight:600;color:#000}.previousLabelDate[data-v-4de36202]{font-weight:600;color:#000;margin:2%}.previousSecDrgs[data-v-4de36202]{margin:2%}.notes_p[data-v-4de36202]{margin:4%}.custom-allergy-container[data-v-4de36202]{display:flex;align-items:center;gap:10px}.custom-input[data-v-4de36202]{max-width:300px;width:100%}.header-container[data-v-4de36202]{display:flex;align-items:center;gap:8px}.allergy-icon[data-v-4de36202]{font-size:24px;color:#b42318}.checklist-container[data-v-371e920f]{padding:16px}.no-border[data-v-371e920f]{--border-width: 0;--inner-border-width: 0}ion-item[data-v-371e920f]{--padding-start: 0;--inner-padding-end: 0;margin-bottom:12px}ion-checkbox[data-v-371e920f]{margin-right:12px}ion-label[data-v-371e920f]{font-size:16px}.demographics[data-v-5d96ce77]{display:block;width:40vw;margin:50px auto 0;text-align:center}.demographics_title[data-v-5d96ce77]{font-weight:700;font-size:24px}.sub_title[data-v-5d96ce77]{font-weight:400;font-size:14px;color:#636363;margin:10px 0 30px;padding-top:20px;line-height:25px}.card_hearder[data-v-5d96ce77]{font-weight:600;color:#00190e;font-size:16px;padding-bottom:20px}.input_fields[data-v-5d96ce77]{padding:10px 100px 70px;text-align:left}.gender[data-v-5d96ce77]{display:flex;justify-content:space-between;max-width:170px;padding-top:10px}.gender_title[data-v-5d96ce77]{margin-top:30px}.marital_status[data-v-5d96ce77]{display:flex;justify-content:space-between}ion-datetime[data-v-5d96ce77]::part(calendar-day){padding:25px;margin:10px}.dp__flex_display[data-v-5d96ce77]{display:inherit}.enrollment_card[data-v-5d96ce77]{padding:20px;width:1200px}.card_content[data-v-5d96ce77]{width:100%}.sub_data[data-v-5d96ce77]{padding-top:10px;padding-bottom:5px;font-size:20px;font-weight:600;color:#00190e}.dates_title[data-v-5d96ce77]{color:gray;padding:20px;font-size:20px;font-weight:600}.calender[data-v-5d96ce77]{--dp-cell-padding: 30px;--dp-menu-padding: 20px 5px;--dp-font-size: 18px}.count-badge[data-v-5d96ce77]{padding:1px 4px;font-size:19px;margin-left:1px;position:relative;font-weight:700}.run-out-date[data-v-5d96ce77]{background-color:var(--dp-primary-color);border-radius:10%;color:#000;padding:7px}\n/*$vite$:1*/",document.head.appendChild(a),t({a:async function(){try{const n=ce(),{patient:i}=o(n),s=Nt(),d=JSON.parse(JSON.stringify(i.value));if(s.length>0){var e,t,a;null!==(t=(e=null!==(a=d.MedicationOrder)&&void 0!==a?a:d.MedicationOrder={}).unsaved)&&void 0!==t||(e.unsaved=[]);const n=d.MedicationOrder.unsaved.findIndex(e=>e.NCD_Drug_Orders);if(n>=0)d.MedicationOrder.unsaved[n].NCD_Drug_Orders=[...d.MedicationOrder.unsaved[n].NCD_Drug_Orders,...s];else{const e={NCD_Drug_Orders:s};d.MedicationOrder.unsaved.push(e)}return ke().clearSelectedMedicalDrugsList(),fe("Drug order(s) has been created"),d}Q("Unable to create drug orders!")}catch(n){Q("Unable to create drug orders!")}},c:async function(){try{const n=ce(),{patient:i}=o(n),s=Lt(),d=JSON.parse(JSON.stringify(i.value));if(s.length>0){var e,t,a;null!==(t=(e=null!==(a=d.MedicationOrder)&&void 0!==a?a:d.MedicationOrder={}).unsaved)&&void 0!==t||(e.unsaved=[]);const n=d.MedicationOrder.unsaved.findIndex(e=>e.NCD_Drug_Orders);if(n>=0)d.MedicationOrder.unsaved[n].NCD_Drug_Orders=[...d.MedicationOrder.unsaved[n].NCD_Drug_Orders,...s];else{const e={NCD_Drug_Orders:s};d.MedicationOrder.unsaved.push(e)}const i=Se();return i.setMedicationRunOutDate(function(){try{const e=new Date(X.getSessionDate()),t=Se().selectedNCDMedicationList;let a=0;if(t.forEach(e=>{const t=parseInt(e.duration,10);!isNaN(t)&&t>a&&(a=t)}),a<=0)return{date:null,formattedDate:null};const n=new Date(e);n.setDate(e.getDate()+a);const i=String(n.getDate()).padStart(2,"0"),o=String(n.getMonth()+1).padStart(2,"0"),s=n.getFullYear();return{date:n,formattedDate:`${i}/${o}/${s}`}}catch(e){return console.error("Error calculating medication run out date:",e),{date:null,formattedDate:null}}}()),i.clearMedicationDataStores(),fe("Drug order(s) has been created"),d}Q("Unable to create drug orders!")}catch(n){Q("Unable to create drug orders!")}},g:async function(){const e=ce(),{patient:t}=o(e),a=t.value,n=[8809,903,6410,6409];let i;i=X.getModsStatus()||X.getUseIndexDBStatus()?await se("diagnosis",{likeClause:"",currentPage:1,itemsPerPage:2e3}).then(e=>e.records):await X.getJson("diagnosis",{id:7409,page_size:2e3});const s=i.filter(e=>n.includes(e.concept_id));s.push({concept_id:8809,concept_name_id:926,concept_name_type:"FULLY_SPECIFIED",creator:1,date_created:"2004-06-25T00:00:00.000+02:00",date_voided:null,id:72,locale:"en",locale_preferred:0,name:"Hypertension",uuid:"b99faa1e-8d80-11d8-abbb-0024217bb78e",void_reason:null,voided:0,voided_by:null});const d=a.diagnosis.saved.map(e=>e.value_coded),r=a.diagnosis.unsaved.map(e=>e.value_coded),l=[...d,...r],c=s.filter(e=>l.includes(e.concept_id));return c.map(e=>e.name)},s:async function(e){try{var t,a,n;const i=ce(),{patient:s}=o(i),d=JSON.parse(JSON.stringify(s.value));return null!==(a=(t=null!==(n=d.allergies)&&void 0!==n?n:d.allergies={}).unsaved)&&void 0!==a||(t.unsaved=[]),d.allergies.unsaved.push(...e),fe("Allergies appended to patient record successfully"),d}catch(i){Q("Unable to save Allegies!")}}});class je extends K{constructor(){super()}async postActivities(e,t){const a=t.location_id,n=new G(parseInt(e),-1,a),i=await n.createEncounter();if(i){const e=await K.buildLabOrders(i,t.orders||t);if(!(await K.saveOrdersArray(i.encounter_id,e)))return Q("Unable to save lab orders")}}}t("L",je);const Je=t("_",n({data:()=>({userRole:"",ready:!1,userRoleSettings:{}}),watch:{$route:{async handler(e){this.userRole=X.getUserRoles();const t=X.getProgramID(),a=X.getProgramName();"Lab"==this.userRole&&14==t&&(this.userRoleSettings={url:"home",btnName:"Back to home",stepperTitle:"Laboratory"}),14==t&&"Lab"!=this.userRole&&(this.userRoleSettings={url:"home",btnName:"Go to waiting list",stepperTitle:"Consultation Plan"}),12==t&&(this.userRoleSettings={url:"contact",btnName:"Back"}),"LABOUR AND DELIVERY PROGRAM"==a&&(this.userRoleSettings={url:"labour/labourHome",btnName:"Back to home"}),"PNC PROGRAM"==a&&(this.userRoleSettings={url:"pnc/home",btnName:"Back to home"})},immediate:!0,deep:!0}}})),We=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Skull",value:"Skull",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mastoid",value:"Mastoid",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"ParaSinuses",value:"ParaSinuses",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Optic Foramen",value:"PVD",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Orbits",value:"Orbits",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Nasal Bone",value:"Nasal Bone",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mandible",value:"Mandible",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TMJs",value:"TMJs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Zygomatic",value:"Zygomatic",checked:!1}]}}],Ye=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Neck",value:"Neck",checked:!1}]}}],Ke=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Chest",value:"Chest",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Heart",value:"Heart",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sternum",value:"Sternum",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ribs",value:"Ribs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SCJ",value:"SCJ",checked:!1}]}}],Ge=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Abdomen",value:"Abdomen",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"IVP",value:"IVP",checked:!1}]}}],Qe=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Clavicle",value:"Clavicle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Shoulder",value:"Shoulder",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Scapula",value:"Scapula",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Humerus",value:"Humerus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Elbow",value:"Elbow",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Forearm",value:"Forearm",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Wrist",value:"Wrist",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hand",value:"Hand",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Phalanges",value:"Phalanges",checked:!1}]}}],Xe=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"CSpine",value:"CSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TSpine",value:"TSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"LSpine",value:"LSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SSpine",value:"SSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Coccyx",value:"Coccyx",checked:!1}]}}],Ze=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Pelvis",value:"Pelvis",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sacroillac Joints",value:"Sacroillac Joints",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hip",value:"Hip",checked:!1}]}}],et=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Femur",value:"Femur",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Knee",value:"Knee",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Patella",value:"Patella",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Leg",value:"Leg",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ankle",value:"Ankle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Calcaneus",value:"Calcaneus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Foot",value:"Foot",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Toe",value:"Toe",checked:!1}]}}],tt=i("RadiologyStore",{state:()=>({head:[...We],neck:[...Ye],chest:[...Ke],abdomen:[...Ge],upper_extremity:[...Qe],spine:[...Xe],pelvis:[...Ze],lower_extremity:[...et]}),actions:{setOPDDiagnosis(e){this.head=e},getInitial:()=>[...He.cloneDeep(We)]}}),at=["innerHTML"],nt={class:"scrollable-container"},it={key:0,class:"form-section"},ot={key:1,class:"form-section"},st={key:2,class:"form-section"},dt={key:3,class:"form-section"},rt={key:4,class:"form-section"},lt={key:5,class:"form-section"},ct={key:6,class:"form-section"},ut={key:7,class:"form-section"},pt=n({name:"Menu",mixins:[Je],components:{IonContent:M,IonHeader:C,IonItem:w,IonList:I,IonMenu:S,IonTitle:k,IonToolbar:x,IonInput:_,IonPopover:D,DashBox:Pe,SelectionPopover:ie,BasicInputField:ne,BasicForm:Fe,List:ae,DynamicButton:te,LabOrdersList:Te,RadiologyInvestigation:ee(n({__name:"RadiologyInvestigation",setup(e){const t=tt(),{head:a,neck:n,chest:i,abdomen:b,upper_extremity:D,spine:_,pelvis:x,lower_extremity:k}=o(t),S=s(Z),I=s([]),w=(e,t,a)=>{document.querySelectorAll(`#${e} path`).forEach(e=>{e.classList.toggle("white-fill")}),document.querySelectorAll(`#${t} line`).forEach(e=>{e.classList.toggle("dark-green-stroke")}),document.querySelectorAll(`#${t} rect`).forEach(e=>{e.classList.toggle("bright-green-fill"),e.classList.toggle("dark-green-stroke")}),document.querySelectorAll(`#${t} path`).forEach(e=>{e.classList.toggle("dark-green-fill")}),document.querySelectorAll(`#${t} circle`).forEach(e=>{e.classList.toggle("bright-green-fill")});const n=I.value.findIndex(e=>e.id===a);n>=0?I.value.splice(n,1):I.value.unshift({id:a,active:!0})},C=()=>{const e=document.getElementById("SPINE");"none"===e.style.display||""==e.style.display?e.style.display="block":e.style.display="none",w("SPINE","SPINE_LABEL-2","spine")};return d(()=>{const e=document.getElementById("HEAD");e&&e.addEventListener("click",()=>{w("HEAD","LABEL-6","head")});const t=document.getElementById("NECK");t&&t.addEventListener("click",()=>{w("NECK","LABEL-5","neck")});const a=document.getElementById("CHEST");a&&a.addEventListener("click",()=>{w("CHEST","LABEL-4","chest")});const n=document.getElementById("ABDOMEN_LABEL");n&&n.addEventListener("click",()=>{const e=document.getElementById("ABDOMEN-2");"none"===e.style.display||""==e.style.display?e.style.display="block":e.style.display="none",w("ABDOMEN","ABDOMEN_LABEL-2","abdomen")});const i=document.getElementById("UPPER_EXTRMITY");i&&i.addEventListener("click",()=>{w("UPPER_EXTRMITY","LABEL-3","upper_extremity")});const o=document.getElementById("SPINE"),s=document.getElementById("SPINE_LABEL"),d=document.getElementById("LOWER_SPINE_INACTIVE");o&&o.addEventListener("click",()=>{C()}),s&&s.addEventListener("click",()=>{C()}),d&&d.addEventListener("click",()=>{C()});const r=document.getElementById("PELVIS");r&&r.addEventListener("click",()=>{w("PELVIS","LABEL-2","pelvis")});const l=document.getElementById("LOWER_EXTREMITY");l&&l.addEventListener("click",()=>{w("LOWER_EXTREMITY","LABEL","lower_extremity")})}),(e,t)=>{const o=r("ion-col"),s=r("ion-row");return c(),l(s,null,{default:u(()=>[p(o,{size:"7"},{default:u(()=>[h("div",{innerHTML:S.value.full_body_sk},null,8,at)]),_:1}),p(o,{size:"5",class:"form-column"},{default:u(()=>[h("div",nt,[(c(!0),m(v,null,g(I.value,e=>(c(),m(v,null,["head"===e.id?(c(),m("div",it,[t[0]||(t[0]=h("h6",null,"Body Part: Head",-1)),p(Fe,{contentData:y(a)},null,8,["contentData"])])):"neck"===e.id?(c(),m("div",ot,[t[1]||(t[1]=h("h6",null,"Body Part: Neck",-1)),p(Fe,{contentData:y(n)},null,8,["contentData"])])):"chest"===e.id?(c(),m("div",st,[t[2]||(t[2]=h("h6",null,"Body Part: Chest",-1)),p(Fe,{contentData:y(i)},null,8,["contentData"])])):"abdomen"===e.id?(c(),m("div",dt,[t[3]||(t[3]=h("h6",null,"Body Part: Abdomen",-1)),p(Fe,{contentData:y(b)},null,8,["contentData"])])):"upper_extremity"===e.id?(c(),m("div",rt,[t[4]||(t[4]=h("h6",null,"Body Part: Upper Extremity",-1)),p(Fe,{contentData:y(D)},null,8,["contentData"])])):"spine"===e.id?(c(),m("div",lt,[t[5]||(t[5]=h("h6",null,"Body Part: Spine",-1)),p(Fe,{contentData:y(_)},null,8,["contentData"])])):"pelvis"===e.id?(c(),m("div",ct,[t[6]||(t[6]=h("h6",null,"Body Part: Pelvis",-1)),p(Fe,{contentData:y(x)},null,8,["contentData"])])):"lower_extremity"===e.id?(c(),m("div",ut,[t[7]||(t[7]=h("h6",null,"Body Part: Lower Extremity",-1)),p(Fe,{contentData:y(k)},null,8,["contentData"])])):f("",!0)],64))),256))])]),_:1})]),_:1})}}}),[["__scopeId","data-v-5ab54fe8"]])},data:()=>({segmentContent:"Lab Investigations",iconsContent:Z,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}),setup:()=>({checkmark:B,pulseOutline:A}),computed:{...b(re,["investigations"]),...b(ce,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var e;null!==(e=this.patient)&&void 0!==e&&e.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(e){this.segmentContent=e},async getTests(){let e;e=X.getUseIndexDBStatus()&&X.getModsStatus()?await se("testTypes"):await K.getTestTypes(),oe(this.investigations,"test","multiSelectData",e)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var e;if(null===(e=this.patient)||void 0===e||!e.labOrders)return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const t=await this.labOrders.filter(e=>le.toStandardHisFormat(le.sessionDate())===le.toStandardHisFormat(e.order_date));t.length>0?this.investigations[0].selectedData=t:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard();re().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return Re(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(oe(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(oe(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){Re(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(e,t){for(let a of t)for(let t of a.tests)if(t.name===e)return!0;return!1},async saveTest(){const e=new je;await e.postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await de.getConceptID(this.inputFields[1].value.name,!0)}]),oe(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(e){if("Test"==e.inputHeader&&this.checkTest(),oe(this.investigations,"specimen","alertsErrorMassage",""),"Test"==e.inputHeader&&e.value){let t;t=X.getUseIndexDBStatus()&&X.getModsStatus()?await se("specimens"):await K.getSpecimens("",1e3),this.specimen=await de.getConceptSet(e.value.name,"",{names:t.map(e=>e.name)}),1==this.specimen.length?(oe(this.investigations,"specimen","value",this.specimen[0]),oe(this.investigations,"specimen","disabled",!0)):(oe(this.investigations,"specimen","value",""),oe(this.investigations,"specimen","disabled",!1)),oe(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(e){return await this.labOrders.filter(t=>t.name.toLowerCase().includes(e.toLowerCase()))},async filterSpecimen(e){var t;return null!==(t=this.specimen[0])&&void 0!==t&&t.name&&e?await this.specimen.filter(t=>null==t?void 0:t.name.toLowerCase().includes(e.toLowerCase())):[]},setTest(e){this.selectedText=e.name,"Test"==this.inputFields[1].inputHeader?this.investigations[0].data.rowData[0].colData[0].value=e.name:this.investigations[0].data.rowData[0].colData[1].value=e.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),ht={class:"background"},mt={key:0},gt={key:1},vt={key:2},ft={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},yt={key:3},bt={class:"ion-padding",slot:"content"},Dt={key:4};t("I",ee(pt,[["render",function(e,t,a,n,i,o){const s=r("ion-label"),d=r("ion-segment-button"),l=r("ion-segment"),g=r("VisitsHistory"),v=r("LabOrdersList"),y=r("RadiologyInvestigation");return c(),m("div",ht,[p(l,{value:e.segmentContent,style:{"margin-top":"5px"}},{default:u(()=>[p(d,{value:"Lab Investigations",onClick:t[0]||(t[0]=t=>e.setSegmentContent("Lab Investigations"))},{default:u(()=>[p(s,null,{default:u(()=>[...t[3]||(t[3]=[O("Lab Investigations",-1)])]),_:1})]),_:1}),p(d,{value:"Radiology Investigation",onClick:t[1]||(t[1]=t=>e.setSegmentContent("Radiology Investigation"))},{default:u(()=>[p(s,null,{default:u(()=>[...t[4]||(t[4]=[O("Radiology Investigation",-1)])]),_:1})]),_:1}),p(d,{value:"Other Investigation",onClick:t[2]||(t[2]=t=>e.setSegmentContent("Other Investigation"))},{default:u(()=>[p(s,null,{default:u(()=>[...t[5]||(t[5]=[O("Other Investigation",-1)])]),_:1})]),_:1})]),_:1},8,["value"]),"Radiology Investigation"==e.segmentContent?(c(),m("div",mt,[p(g)])):f("",!0),"Other Investigation"==e.segmentContent?(c(),m("div",gt)):f("",!0),"Lab Investigations"==e.segmentContent?(c(),m("div",vt,[h("div",ft,[h("span",null,[p(v,{propOrders:e.labOrders},null,8,["propOrders"])])])])):f("",!0),"Radiology Investigation"==e.segmentContent?(c(),m("div",yt,[h("div",bt,[p(y)])])):f("",!0),"Other Investigation"==e.segmentContent?(c(),m("div",Dt)):f("",!0)])}],["__scopeId","data-v-c2f65a77"]]));class _t extends ue{constructor(e,t){super(e,105,t)}}class xt extends ue{constructor(e,t){super(e,25,t)}static async get_____(e="",t=1,a=10){}}t("T",class{async onSubmitNotes(e,t,a){const n=new _t(e,t);await n.createEncounter(),await n.saveObservationList(a)}async onSubmitAllergies(e,t,a){try{const n=new xt(e,t);await n.createEncounter(),await n.saveObservationList(a),fe("Allergies saved successfully")}catch(n){console.error("Error saving allergies:",n),Q("Failed to save allergies")}}});function kt(e){const t=e.match(/(\d+)\s+days/i);return t&&t.length>1?parseInt(t[1]):null}t("P",class{constructor(){e(this,"programID",void 0),e(this,"providerID",void 0),e(this,"patientID",void 0),e(this,"date",void 0),e(this,"demographics",void 0),e(this,"previousDrugPrescriptions",[]),e(this,"previousClinicalNotes",void 0),e(this,"previousDrugAllergies",void 0);const t=ce();this.demographics=t.patient,this.patientID=this.demographics.patientID,this.date=pe.getSessionDate(),this.providerID=X.getUserID(),this.programID=pe.getProgramID(),this.previousClinicalNotes={},this.previousDrugAllergies={}}async getPatientEncounters(){const e=await this.getPatientVisitDates(),t=e.map(async e=>{const t=e.value,a=await he.getEncounters(this.patientID,{date:t});await Promise.all(a.map(async e=>{if("NOTES"==e.type.name){const{observations:t}=e;He.isEmpty(t)||t.forEach(e=>{if("2688"==e.concept_id){const t=le.toStandardHisDisplayFormat(e.obs_datetime);He.isEmpty(this.previousClinicalNotes.hasOwnProperty(t))&&(this.previousClinicalNotes[t]=[]),this.previousClinicalNotes[t].push({date:t,notes:e.value_text})}})}if("TREATMENT"==e.type.name){const{observations:n}=e;if(!He.isEmpty(n))for(const e in n){let i="<UNKNOWN CONCEPT>";const o=n[e];try{var t;i=null!=o&&null!==(t=o.concept)&&void 0!==t&&t.concept_names?o.concept.concept_names[0].name:await de.getConceptName(o.concept_id)}catch(a){console.error(o,a)}const s=await pe.resolvePrimaryValue(o),d=le.toStandardHisDisplayFormat(o.date_created);"Allergic"==i&&(this.previousDrugAllergies.hasOwnProperty(d)||(this.previousDrugAllergies[d]=[]),this.previousDrugAllergies[d].push({date:d,value:s}))}}}))});await Promise.all(t);const a=e.map(async e=>{const t=await me.getOrderByPatient(this.patientID,{start_date:e.value});if(!He.isEmpty(t)){const a=t.map(e=>({drugName:e.drug.name,value:le.toStandardHisTimeFormat(e.order.start_date),dose:e.dose,frequency:ze(e.frequency),prescription:le.toStandardHisFormat(e.order.auto_expire_date),duration:kt(e.order.instructions),other:e}));this.previousDrugPrescriptions.push({prescriptionDate:le.toStandardHisDisplayFormat(e.value),previousPrescriptions:a})}});return await Promise.all(a),{previousDrugPrescriptions:this.previousDrugPrescriptions,previousClinicalNotes:this.previousClinicalNotes,previousDrugAllergies:this.previousDrugAllergies}}async getPatientVisitDates(){return(await ge.getPatientVisits(this.patientID,!1)).map(e=>({label:le.toStandardHisDisplayFormat(e),value:e,other:{isActive:e===ve.getSessionDate()}}))}});const St=n({created(){},components:{IonItem:w,IonCol:N,IonLabel:E,IonIcon:L},data(){return{iconsContent:Z,localMedicalDrugsList:[...this.$props._selectedMedicalDrugsList]}},props:{_selectedMedicalDrugsList:{type:Array,default:[]},show_actions_buttons:{type:Boolean,default:!0},highLightBackground:{type:String,default:"item-native"}},watch:{},methods:{highlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#006401"),this.highlightActionBtns(e)},undoHighlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#636363"),this.undohighlightActionBtns(e)},highlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let a=0;a<t.length;a++)t[a].style.display="inline-block"},undohighlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let a=0;a<t.length;a++)t[a].style.display="none"},asignLblID:e=>e+"_lbl",asignSpanLblID:e=>e+"_spanlbl",async removeItemAtIndex(e,t){await ye("Do you want to delete it?",t)&&this.$emit("remove-item",e)},editItemAtIndex(e){this.$emit("edit-item",e)},highLightBnd(e){return!!e&&(void 0!==e.highlightbackground&&1==e.highlightbackground?this.$props.highLightBackground:void 0)}}}),It=["onMousemove","onMouseout"],wt={class:"route-label"};t("D",ee(St,[["render",function(e,t,a,n,i,o){const s=r("ion-label"),d=r("ion-col"),y=r("ion-row"),b=r("ion-icon");return c(!0),m(v,null,g(e.localMedicalDrugsList,(t,a)=>(c(),m("div",{id:"df",class:"medication-item",key:a,onMousemove:t=>e.highlightItem(a),onMouseout:t=>e.undoHighlightItem(a)},[p(y,{class:"medication-header"},{default:u(()=>[p(d,{class:P(["ion-text-wrap",e.highLightBnd(t)])},{default:u(()=>[p(s,{id:e.asignLblID(a),class:"medication-name"},{default:u(()=>[O(F(t.drugName),1)]),_:2},1032,["id"])]),_:2},1032,["class"])]),_:2},1024),p(y,{class:"medication-details"},{default:u(()=>[p(d,{size:"10",class:P(["ion-text-wrap details-col",e.highLightBnd(t)])},{default:u(()=>[p(s,{class:"details-text"},{default:u(()=>[O(F(t.dose)+" / "+F(t.frequency)+" / daily / "+F(t.duration)+" / until "+F(t.prescription)+" ",1),h("span",wt,F(t.route_name),1)]),_:2},1024)]),_:2},1032,["class"]),e.show_actions_buttons?(c(),l(d,{key:0,class:P([e.highLightBnd(t),"actions-col"]),size:"2"},{default:u(()=>[p(s,{class:P(["action-button",e.asignSpanLblID(a)]),onClick:t=>e.editItemAtIndex(a)},{default:u(()=>[p(b,{icon:e.iconsContent.edit},null,8,["icon"])]),_:1},8,["class","onClick"]),p(s,{class:P(["action-button",e.asignSpanLblID(a)]),onClick:t=>e.removeItemAtIndex(a,t)},{default:u(()=>[p(b,{icon:e.iconsContent.delete},null,8,["icon"])]),_:1},8,["class","onClick"])]),_:2},1032,["class"])):f("",!0)]),_:2},1024)],40,It))),128)}],["__scopeId","data-v-01c693a3"]]));const Ct={key:0,class:"custom-allergy-container"},Mt={class:"button-group"},At=n({watch:{},name:"AllergiesComponent"}),Bt=n({...At,setup(e){const t=be(),a=ce(),n=T(()=>t.selectedMedicalAllergiesList),i=T(()=>a.patient),o=T(()=>t.medicalAllergiesList),r=s(S(8,"item-")),g=s(""),v=s(!1),b=[{multi_Selection:!0,show_list_label:!0,unqueId:r.value,name_of_list:"Add/Remove allergies",placeHolder:"Search for an allergy",items:[],listUpdatedFN:function(e){e.forEach(e=>{1==e.selected&&"Other"===e.name&&(v.value="Other"===e.name),0==e.selected&&"Other"===e.name&&I()}),t.setSelectedMedicalAllergiesList(e),k()},listFilteredFN:()=>{},searchTextFN:async function(e){const a=e,n=await de.getConceptSet("OPD Medication",a);n.map(e=>({label:e.name,value:e.name,other:e}));const i=De(a),o=_e(i,n).sort((e,t)=>e.name.localeCompare(t.name));t.setMedicalAllergiesList(o),k()},use_internal_filter:!0,show_error:s(!1),error_message:"please select a User",disabled:s(!1)}],D=s(!1);d(async()=>{x()});const x=()=>{t.current_patient.ID!=i.value.ID&&(t.clearSelectedMedicalAllergiesList(),t.setCurrentPatient(i.value))};function k(){const e=o.value;n.value.forEach(t=>{let a=!1;e.forEach((n,i)=>{n.concept_id==t.concept_id&&!0===t.selected&&(e[i]=t,a=!0)}),a||!0!==t.selected||e.push(t)});const a=e.filter((e,t,a)=>t===a.findIndex(t=>(null==t?void 0:t.concept_id)===(null==e?void 0:e.concept_id)));t.setMedicalAllergiesList(a)}function S(e=8,t=""){const a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let n=t;for(let i=0;i<e;i++)n+=a.charAt(Math.floor(62*Math.random()));return n+=`-${Date.now()}`,n}const I=()=>{v.value=!1,g.value="",D.value=!1;const e=t.findSelectedAllergyByName("Other");e&&t.unselectOther(e)};return(e,a)=>(c(),l(y(R),null,{default:u(()=>[p(y(H),null,{default:u(()=>[p(y(E),{class:"header-container"},{default:u(()=>[p(y(L),{icon:y(z),class:"allergy-icon"},null,8,["icon"]),a[3]||(a[3]=h("span",{style:{"font-size":"16px","font-weight":"600"}}," Allergies (Medication, Healthcare items, Environment and Food) ",-1))]),_:1})]),_:1}),p(y(U),null,{default:u(()=>[p(xe,{multiSelection:b[0].multi_Selection,show_label:b[0].show_list_label,uniqueId:b[0].unqueId,name_of_list:b[0].name_of_list,choose_place_holder:b[0].placeHolder,"items_-list":o.value,use_internal_filter:b[0].use_internal_filter,disabled:b[0].disabled.value,onItemListUpDated:b[0].listUpdatedFN,onItemListFiltered:b[0].listFilteredFN,onItemSearchText:b[0].searchTextFN},null,8,["multiSelection","show_label","uniqueId","name_of_list","choose_place_holder","items_-list","use_internal_filter","disabled","onItemListUpDated","onItemListFiltered","onItemSearchText"]),v.value?(c(),m("div",Ct,[p(y(_),{modelValue:g.value,"onUpdate:modelValue":a[0]||(a[0]=e=>g.value=e),placeholder:"Please specify the allergy",fill:"outline",class:"custom-input"},null,8,["modelValue"]),h("div",Mt,[p(y($),{onClick:a[1]||(a[1]=e=>async function(e){try{const a=e.trim();if(a){const e={name:a,selected:!0,concept_id:S(8,"12"),concept_name_id:S(8,"34")};t.setMedicalAllergiesList([...o.value,e]),t.setSelectedMedicalAllergiesList(e),v.value=!1,D.value=!0,g.value="";const n=t.findSelectedAllergyByName("Other");t.unselectOther(n)}}catch(a){console.error(a)}}(g.value)),class:"addCustomAllergyBtn"},{default:u(()=>[...a[4]||(a[4]=[O(" Add Allergy ",-1)])]),_:1}),p(y($),{onClick:a[2]||(a[2]=e=>I()),fill:"clear",class:"cancelBtn"},{default:u(()=>[p(y(L),{icon:y(V),slot:"icon-only"},null,8,["icon"])]),_:1})])])):f("",!0)]),_:1})]),_:1}))}});t("A",ee(Bt,[["__scopeId","data-v-4de36202"]]));function Ot(){try{const e=new Date(X.getSessionDate()),t=ke().selectedMedicalDrugsList;let a=0;if(t.forEach(e=>{const t=parseInt(e.duration,10);!isNaN(t)&&t>a&&(a=t)}),a<=0)return{date:null,formattedDate:null};const n=new Date(e);n.setDate(e.getDate()+a);const i=String(n.getDate()).padStart(2,"0"),o=String(n.getMonth()+1).padStart(2,"0"),s=n.getFullYear();return{date:n,formattedDate:`${i}/${o}/${s}`}}catch(e){return console.error("Error calculating OPD medication run out date:",e),{date:null,formattedDate:null}}}const Lt=()=>{const e=Se();return e.selectedNCDMedicationList.map(t=>{t.frequency=e.frequency_selections[t.drug_id]||"",t.totalDosage=Object.values(t.dosage).reduce((e,t)=>e+Number(t),0);const a=Ue.getSessionDate(),n=Pt(t.drug_id);return{drug_inventory_id:t.drug_id,equivalent_daily_dose:"Unknown"==t.totalDosage?0:t.totalDosage*(null==n?void 0:n.value)||0,start_date:a,auto_expire_date:Ft(a,t.duration),units:t.units,instructions:`${t.name} ${t.totalDosage} ${t.units} ${(null==n?void 0:n.code)||""} for ${t.duration} days`,dose:Et(t),frequency:(null==n?void 0:n.code)||""}})},Et=e=>null!=e.dose_strength&&e.dose_strength?Math.trunc(e.dose_strength):1;const Nt=()=>ke().selectedMedicalDrugsList.map(e=>{const t=Ue.getSessionDate(),a=$e.find(t=>t.label===e.frequency)||{};return{drug_inventory_id:e.drug_id,equivalent_daily_dose:"Unknown"==e.dose?0:e.dose*(null==a?void 0:a.value)||0,start_date:t,auto_expire_date:Ft(t,e.duration),units:e.units,instructions:`${e.drugName}: ${e.dose} ${e.units} ${(null==a?void 0:a.code)||""} for ${e.duration} days`,dose:e.dose,frequency:(null==a?void 0:a.code)||""}}),Pt=e=>{const t=Se().selectedNCDMedicationList.find(t=>t.drug_id===e);if(!t||!t.dosage)return null;switch(["morning","afternoon","evening"].reduce((e,a)=>e+(t.dosage[a]?1:0),0)){case 1:return t.dosage.morning?$e.find(e=>"QAM"===e.code):t.dosage.afternoon?$e.find(e=>"QNOON"===e.code):t.dosage.evening?$e.find(e=>"QPM"===e.code):$e.find(e=>"OD"===e.code);case 2:return $e.find(e=>"BD"===e.code);case 3:return $e.find(e=>"TDS"===e.code);default:return $e.find(e=>"Unknown"===e.code)}},Ft=(e,t)=>{const a=new Date(e);return a.setDate(a.getDate()+parseInt(t)),le.toStandardHisFormat(a)},Tt=t("u",i("nonPharmaTherapyStore",{state:()=>({items:[{id:"wound-dressing",label:"Wound dressing",checked:!1},{id:"patient-education",label:"Patient education",checked:!1},{id:"counseling",label:"Counseling",checked:!1},{id:"minor-surgery",label:"Minor Surgery",checked:!1}],current_patient:{}}),actions:{async saveNonPharmaTherapyPatientData(){const e=Ie(),t=[];this.items.forEach(a=>{1==a.checked&&t.push({concept_id:11023,value_text:a.label,obs_datetime:le.toStandardHisFormat(X.getSessionDate()),location_id:e.facilityLocation.code})});const a=ke().nonPharmalogicalTherapyAndOtherNotes;a&&t.push({concept_id:2592,obs_datetime:X.getSessionDate(),value_text:a,location_id:e.facilityLocation.code});try{if(t.length>0)return this.clearSelectednonPharmaTherapyStore(),fe("Non Pharma Therapy staged successfully!"),await async function(e){try{var t,a,n;const i=ce(),{patient:s}=o(i),d=JSON.parse(JSON.stringify(s.value));return null!==(a=(t=null!==(n=d.notes)&&void 0!==n?n:d.notes={}).unsaved)&&void 0!==a||(t.unsaved=[]),d.notes.unsaved.push(...e),d}catch(i){Q("Unable to create non pharmalogical notes!")}}(t)}catch(n){Q("Unable to update Non Pharma Therapy!")}},clearSelectednonPharmaTherapyStore(){this.items.forEach(e=>{e.checked=!1})},setCurrentPatient(e){this.current_patient=e}},persist:!0}));const Rt={class:"checklist-container"},Ht=n({watch:{},name:"xxxComponent"}),zt=n({...Ht,setup(e){const t=ce(),a=T(()=>t.patient),n=Tt(),i=n.items;d(async()=>{o()});const o=()=>{n.current_patient.ID!=a.value.ID&&(n.clearSelectednonPharmaTherapyStore(),n.setCurrentPatient(a.value))};return q(()=>a.value,async e=>{}),(e,t)=>(c(),m("div",Rt,[(c(!0),m(v,null,g(y(i),e=>(c(),l(y(w),{key:e.id,class:"no-border"},{default:u(()=>[p(y(j),{id:e.id,modelValue:e.checked,"onUpdate:modelValue":t=>e.checked=t,slot:"start"},null,8,["id","modelValue","onUpdate:modelValue"]),p(y(E),{style:{"font-size":"16px","font-weight":"600"}},{default:u(()=>[O(F(e.label),1)]),_:2},1024)]),_:2},1024))),128))]))}}),Ut=(t("b",ee(zt,[["__scopeId","data-v-371e920f"]])),n({components:{IonContent:M,IonHeader:C,IonItem:w,IonList:I,IonMenu:S,IonTitle:k,IonToolbar:x,BasicInputField:ne,IonDatetime:W,IonBadge:J,DateInputField:qe,DynamicButton:te},props:{showPeripheral:{type:Boolean,default:!0}},setup(e){const t=Oe(),a=s(0),n=T(()=>t.getDisabledDates()),i=T(()=>t.getAssignedAppointments()),o=s(),d=T(()=>e.showPeripheral);return{disabledDates:n,datesCounts:i,appointment_count:a,calendarOutline:Y,inputPRDate:o,show_peripheral:d}},data:()=>(we(),Ne(),{iconsContent:Z,date:new Date(X.getSessionDate()),tomorrow:new Date(X.getSessionDate()).getDate()+1,appointment:"",drugRunoutDate:"",nextAppointmentDate:"",minDate:new Date(X.getSessionDate())}),computed:{...b(we,["nextAppointment","appointmentCountsCache","currentSelectedNextAppointmentDate"]),...b(Oe,["maximumNumberOfDaysForEachDay","assignedAppointmentsDates"]),...b(ce,["patient"]),...b(Ne,["activeProgram"]),calendarDate(){const e=we();return e.currentSelectedNextAppointmentDate?le.toStandardHisDisplayFormat(e.currentSelectedNextAppointmentDate):""},runOutDate(){var e;const t=we();return 14===(null===(e=this.activeProgram)||void 0===e?void 0:e.program_id)?Ot():t.getAppointmentMedicationRunOutDate()}},watch:{calendarDate:{handler(){this.updateNextAppointment()},deep:!0},"$service.sessionDate":{handler(){this.updateMinDate()},immediate:!0},"patient.ID":{async handler(e,t){e!==t&&(this.cleanCurrentNextAppointmentDate(),this.checkIfSamePatientInContext(),this.clearNextAppointment())}}},async mounted(){this.checkIfSamePatientInContext(),await this.getAppointmentMents(this.runOutDate.date),await Le().loadGlobalProperty(),this.validateAppointmentCountsCache(),await this.preloadAppointmentCounts(),Ee();const e=X.getUserID(),t=new ge;this.appointment=new Ce(t.getID(),e),this.nextAppointmentDate=this.appointment.date,this.supposedRunOutDate(),window.addEventListener("storage",this.handleStorageChange),Ot()},beforeUnmount(){window.removeEventListener("storage",this.handleStorageChange)},methods:{handleStorageChange(e){"sessionDate"===e.key&&this.updateMinDate()},updateMinDate(){this.date=new Date(X.getSessionDate()),this.minDate=new Date(X.getSessionDate())},updateNextAppointment(){we().setNextAppointment(this.calendarDate)},async handleDateUpdate(e){if(e){Oe().setAssignedAppointmentsDates(e,!0),this.calendarDate=le.toStandardHisDisplayFormat(e),await this.save(),await this.getAppointmentMents(e),await this.updateAppointmentCache(e);we().setCurrentSelectedNextAppointmentDate(e,this.patient.ID)}},async getAppointmentMents(e){if(Be().apiStatus)try{const t=await Ce.getDailyAppointments(le.toStandardHisFormat(e),le.toStandardHisFormat(e));this.appointment_count=t.length}catch(t){}},getCounter(e){const t=le.toStandardHisFormat(e);return this.appointmentCountsCache[t]||""},async save(){if(this.assignedAppointmentsDates.length>0)try{const e=new Ve;await e.createOfflineAppointment()}catch(e){}},async openCornfirmModal(e){this.calendarDate=le.toStandardHisDisplayFormat(e),await this.getAppointmentMents(e);Me(Ae,{class:"otherVitalsModal"},!0,{message:"Are you sure you want to add this Appointment?"},{cancel:e=>{},confirm:async t=>{1==t.detail&&await this.handleDateUpdate(e)}})},async handleInput(e){this.inputPRDate=le.toStandardHisDisplayFormat(e),await this.openCornfirmModal(e)},async supposedRunOutDate(){await me.getLastDrugsReceived(this.patient.patientID)},async preloadAppointmentCounts(){try{const t=new Date(X.getSessionDate());t.setDate(1);const a=new Date(X.getSessionDate());a.setMonth(a.getMonth()+2),a.setDate(0);try{const e=await Ce.getDailyAppointments(le.toStandardHisFormat(t),le.toStandardHisFormat(a)),n=this.filterUniqueAppointments(e),i={};n.forEach(e=>{const t=new Date(e.appointment_date),a=le.toStandardHisFormat(t);i[a]||(i[a]=0),i[a]++}),Object.keys(i).forEach(e=>{this.appointmentCountsCache[e]=i[e]})}catch(e){console.error("Error fetching appointments for date range:",e)}}catch(e){console.error("Error in preload process:",e)}},filterUniqueAppointments(e){const t=new Map;return e.forEach(e=>{const a=`${e.given_name}_${e.family_name}_${e.birthdate}_${e.appointment_date}`;t.has(a)||t.set(a,e)}),Array.from(t.values())},async updateAppointmentCache(e){try{const t=le.toStandardHisFormat(e),a=await Ce.getDailyAppointments(le.toStandardHisFormat(e),le.toStandardHisFormat(e));this.appointmentCountsCache[t]=a.length}catch(t){console.error("Error updating appointment cache:",t)}},validateAppointmentCountsCache(){we().checkCurrentLocationIfInContext()},isRunOutDate(e){return!(!this.runOutDate||!this.runOutDate.date)&&le.toStandardHisFormat(e)===le.toStandardHisFormat(this.runOutDate.date)},cleanCurrentNextAppointmentDate(){we().cleanCurrentSelectedNextAppointmentDate()},checkIfSamePatientInContext(){const e=we();e.current_patient.ID!=this.patient.ID&&(this.cleanCurrentNextAppointmentDate(),e.setCurrentPatient(this.patient))},clearNextAppointment(){we().clearAppointmentMedicationRunOutDate()}}})),$t={class:"card_content"},Vt={class:"count-badge"},qt={class:"dates_title"},jt={class:"sub_data"},Jt={class:"dates_title"},Wt={class:"sub_data"},Yt={class:"dates_title"},Kt={class:"sub_data"},Gt={class:"dates_title"},Qt={class:"sub_data"};t("N",ee(Ut,[["render",function(e,t,a,n,i,o){const s=r("VueDatePicker"),d=r("ion-col"),g=r("DynamicButton"),v=r("ion-item"),y=r("ion-row"),b=r("DateInputField");return c(),m("div",$t,[p(y,null,{default:u(()=>[p(d,{"size-sm":"12","size-md":"12","size-lg":"12","size-xl":"8"},{default:u(()=>[p(s,{class:"calender",onDateUpdate:e.openCornfirmModal,inline:"","auto-apply":"","enable-time-picker":!1,"disabled-dates":e.disabledDates,"min-date":e.minDate,modelValue:e.runOutDate.date,"onUpdate:modelValue":t[0]||(t[0]=t=>e.runOutDate.date=t)},{day:u(({day:t,date:a})=>[(c(),m("p",{key:0,class:P({"run-out-date":e.isRunOutDate(a)}),style:{"font-weight":"600","font-size":"20px"}},[h("span",null,[O(F(t),1),h("sup",Vt,F(e.getCounter(a)),1)])],2))]),_:1},8,["onDateUpdate","disabled-dates","min-date","modelValue"])]),_:1}),e.show_peripheral?(c(),l(d,{key:0},{default:u(()=>[p(v,null,{default:u(()=>[h("div",qt,[t[3]||(t[3]=h("div",null,[O("Suggested Next Appointment Date "),h("span",{style:{"font-size":"16px"}},"(Medication run out date)")],-1)),h("div",jt,[O(F(e.runOutDate.formattedDate||"No run out date available")+" ",1),e.runOutDate.formattedDate?(c(),l(g,{key:0,onClick:t[1]||(t[1]=t=>e.handleDateUpdate(e.runOutDate.date)),name:"Set Next Appt.",fill:"solid",iconSlot:"icon-only",style:{float:"right"}})):f("",!0)])])]),_:1}),p(v,null,{default:u(()=>[h("div",Jt,[t[4]||(t[4]=h("div",null,"User set appointment date",-1)),h("div",Wt,F(e.calendarDate),1)])]),_:1}),p(v,null,{default:u(()=>[h("div",Yt,[t[5]||(t[5]=h("div",null,"Appointments",-1)),h("div",Kt,F(e.appointment_count),1)])]),_:1}),p(v,null,{default:u(()=>[h("div",Gt,[t[6]||(t[6]=h("div",null,"Appointment limit (per/day)",-1)),h("div",Qt,F(e.appointment_count)+"/"+F(e.maximumNumberOfDaysForEachDay),1)])]),_:1})]),_:1})):f("",!0)]),_:1}),e.show_peripheral?(c(),l(y,{key:0},{default:u(()=>[p(d,{size:"4"},{default:u(()=>[p(b,{inputHeader:"Preferred Next Appointment Date",bold:"600",fontSize:"17px",placeholderFontSize:"17px",placeholderFontWeight:"600",unit:"",icon:e.calendarOutline,placeholder:"press to select date",iconRight:"",inputWidth:"100%",inputValue:e.inputPRDate,eventType:"",minDate:e.minDate,maxDate:"",disabled:!1,"onUpdate:rawDateValue":t[2]||(t[2]=t=>e.handleInput(t))},null,8,["icon","inputValue","minDate"])]),_:1})]),_:1})):f("",!0)])}],["__scopeId","data-v-5d96ce77"]]))}}})}();
