import{d as C,af as u,be as P,b1 as k,a1 as y,ai as M,ah as B,aP as N,cb as U,aQ as F,aO as z,aR as T,M as $,G as W,E as O,ae as H,c1 as L,I as G,a8 as R,$ as J,bC as Q,H as p,N as Y,f as j,J as x,l as g}from"./vendor-BZ7g1BTw.js";import{aO as I,N as q,T as K,n as X,S as f,t as d,M as E,H as Z,s as A,aL as aa,u as ta,k as ea,_ as sa}from"./index-B6K7paAL.js";import{D as ia}from"./DemographicBar-DhaKjzJe.js";import{S as na}from"./SaveProgressModal-Bgzd1wSS.js";import{S as ra,V as _,m as oa,n as la,o as ca}from"./Stepper-BxbSZQy5.js";import{a as s,f as n,c as i}from"./formatServerData-DbkvbedA.js";import"./lodash-NJiRuGo9.js";import{u as V}from"./FeatusModal-DG42BecY.js";import{B as ma}from"./BasicFooter-BtqnS5Kf.js";import{_ as pa}from"./NextAppointment-BhiIt1Uv.js";import{_ as da}from"./SetEncounter.vue_vue_type_script_lang-BZ9EfOOr.js";import"./apexcharts-CB079Wu3.js";import"./OPDOutcome-DW1h0LZT.js";import"./patient_complaints_service-DL9eF8lg.js";import"./DashBox-ChCdosUi.js";import"./useExposeFromStandardForm-BLjN8Sbx.js";import"./BasicForm-COY2TYXW.js";import"./DateInputField-CyP6-1es.js";import"./drug_prescription_service-BmCXWbki.js";import"./drug_service-DZ303QNU.js";import"./Outcome-Dp5t-4ui.js";import"./VitalsMixin.vue_vue_type_script_lang-BnGinmdq.js";import"./TreatmentPlan-B2qxf0P4.js";import"./previousDiagnosis-Dgq_43GC.js";import"./group_validation-D_YYZ2iT.js";import"./BasicCard-CYsIBRIU.js";import"./PastObstreticHistoryStore-nY02_vHh.js";import"./lab_order-DS2QwWr0.js";import"./UpcomingFeature-j6ESHlfP.js";import"./ncd_appointment_service-BLp_vUdS.js";class ha extends I{constructor(a,e){super(a,95,e)}}class ua extends I{constructor(a,e){super(a,116,e)}}class ga extends I{constructor(a,e){super(a,210,e)}}const fa=C({name:"PhysicalExam",mixins:[pa,da],components:{BasicFooter:ma,IonContent:R,IonHeader:G,IonMenuButton:L,IonPage:H,IonTitle:O,IonToolbar:W,Toolbar:K,ToolbarSearch:q,DemographicBar:ia,IonButton:$,IonCard:T,IonCardContent:z,IonCardHeader:F,IonCardSubtitle:U,IonCardTitle:N,IonAccordion:B,IonAccordionGroup:M,IonItem:y,IonLabel:k,IonModal:P,Stepper:ra},data(){return{wizardData:[{title:"Vitals",class:"common_step",checked:!1,disabled:!1,number:1,last_step:""},{title:"Maternal exam",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Abdominal examination",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:""},{title:"Presenting signs for IPV",class:"common_step",checked:"",icon:!1,disabled:!1,number:4,last_step:"last_step"}],StepperData:[{title:"Vitals",component:"",value:"1"},{title:"Maternal exam",component:"MaternalExam",value:"2"},{title:"Abdominal examination",component:"AbdominalExamination",value:"3"},{title:"Presenting signs or conditions for IPV ",component:"PresentingSigns",value:"4"}],isOpen:!1,iconsContent:ea}},computed:{...u(ta,["patient"]),...u(ca,["ANCVitals"]),...u(la,["respiratory","pallor","breastExam","vaginalInspection","cervicalExam","oedemaPresence"]),...u(V,["fetalAssessment","fetalDetails"]),...u(oa,["presentingSigns"])},mounted(){this.markWizard()},watch:{vitals:{handler(){this.markWizard()},deep:!0},DangerSigns:{handler(){this.markWizard()},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},diagnosis:{handler(){this.markWizard()},deep:!0}},setup(){return{chevronBackOutline:Q,checkmark:J,hasValidationErrors:[]}},methods:{markWizard(){},getSaveFunction(){},deleteDisplayData(t){return t.map(a=>(a==null||delete a.display,a==null?void 0:a.data))},async saveData(){if(await this.validaterowData()){A("Vitals form has errors");return}if(!await V().validate()){A("Abdominal exam section has errors");return}this.saveVitals(),this.saveMaternalExam(),this.saveAbdominalExam(),this.savePresentingSigns(),await this.$router.push("contact"),await aa()},async buildVitals(){return[...await s(this.ANCVitals),...await i(this.ANCVitals)]},async buildMaternalExam(){return[...await n(this.pallor),...await i(this.pallor),...await s(this.pallor),...await n(this.respiratory),...await i(this.respiratory),...await s(this.respiratory),...await i(this.breastExam),...await s(this.breastExam),...await n(this.breastExam),...await i(this.vaginalInspection),...await s(this.vaginalInspection),...await n(this.vaginalInspection),...await i(this.cervicalExam),...await s(this.cervicalExam),...await n(this.cervicalExam),...await i(this.oedemaPresence),...await s(this.oedemaPresence),...await n(this.oedemaPresence)]},async buildAbdominalExam(){return[...await s(this.fetalAssessment),...await n(this.fetalAssessment),...await i(this.fetalAssessment),...await s(this.fetalDetails),...await n(this.fetalDetails),...await i(this.fetalDetails)]},async buildPresentingSigns(){return[...await s(this.presentingSigns),...await n(this.presentingSigns),...await i(this.presentingSigns)]},async saveVitals(){const t=f.getUserID();await new _(this.patient.patientID,t).onFinish(this.ANCVitals)},async validaterowData(){var D,v;const t=f.getUserID(),a=new _(this.patient.patientID,t),e=Z.getAgeInYears((v=(D=this.patient)==null?void 0:D.personInformation)==null?void 0:v.birthdate);this.hasValidationErrors=[];let r=!1;return this.ANCVitals.forEach((l,c)=>{var b;(b=l==null?void 0:l.data)!=null&&b.rowData&&l.data.rowData.forEach((S,m)=>{S.colData.some((w,h)=>{const o=a.validator(w);return w.name==="Respiratory rate"&&e<=5?(o==null?void 0:o.length)>0?(r=!0,this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage=o.flat(1/0)[0]):this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage="":(o==null?void 0:o.length)>0?(r=!0,this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage=o.flat(1/0)[0]):this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage="",!1})})}),this.ANCVitals.validationStatus=!r,r},async saveMaternalExam(){if(this.pallor.length>=0||this.cervicalExam.length>=0||this.vaginalInspection.length>=0||this.breastExam.length>=0){const t=f.getUserID(),a=new ha(this.patient.patientID,t);if(!await a.createEncounter())return d("Unable to create maternal exam encounter");if(!await a.saveObservationList(await this.buildMaternalExam()))return d("Unable to create maternal exam details!");E("Maternal exam details have been created")}console.log(await this.buildMaternalExam())},async saveAbdominalExam(){if(this.fetalAssessment.length>=0||this.fetalDetails.length>=0){const t=f.getUserID(),a=new ua(this.patient.patientID,t);if(!await a.createEncounter())return d("Unable to create abdominal exam encounter");if(!await a.saveObservationList(await this.buildAbdominalExam()))return d("Unable to create abdominal exam details!");E("Abdominal exam details have been created")}console.log(await this.buildAbdominalExam())},async savePresentingSigns(){if(this.presentingSigns.length>=0){const t=f.getUserID(),a=new ga(this.patient.patientID,t);if(!await a.createEncounter())return d("Unable to create presenting signs encounter");if(!await a.saveObservationList(await this.buildPresentingSigns()))return d("Unable to create presenting signs details!");E("Presenting signs details have been created")}console.log(await this.buildPresentingSigns())},openModal(){X(na)}}});function ba(t,a,e,r,D,v){const l=p("Toolbar"),c=p("DemographicBar"),b=p("Stepper"),S=p("ion-content"),m=p("BasicFooter"),w=p("ion-page");return j(),Y(w,null,{default:x(()=>[g(l),g(S,{fullscreen:!0},{default:x(()=>[g(c),g(b,{stepperTitle:"Physical examination",wizardData:t.wizardData,onUpdateStatus:t.markWizard,StepperData:t.StepperData,backUrl:t.userRoleSettings.url,backBtn:t.userRoleSettings.btnName,getSaveFunction:t.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),g(m,{onFinishBtn:a[0]||(a[0]=h=>t.saveData())})]),_:1})}const Ya=sa(fa,[["render",ba]]);export{Ya as default};
