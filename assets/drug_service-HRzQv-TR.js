import{S as r,p as g}from"./index-DGxusY5z.js";class d extends r{constructor(){super()}static getDrugs(e={}){return super.getJson("/drugs",e)}static getOPDDrugs(e={}){return super.getJson("OPD_drugslist",e)}static async getOfflineOPDDrugs(e={}){if(r.getUseIndexDBStatus()||r.getModsStatus())try{const{name:t="",page:s=1,page_size:u=10}=e,a=t?{name:"%".concat(t,"%")}:{};return await g("drugs",{likeClause:a,currentPage:s,itemsPerPage:u}).then(n=>n.records)}catch(t){throw console.error("Error fetching offline OPD drugs:",t.message),t}else return await this.getOPDDrugs(e)}static getDrugById(e){return super.getJson("drug",{drug_id:e})}static async getOfflineDrugById(e){return r.getUseIndexDBStatus()||r.getModsStatus()?await g("drugs",{whereClause:{drug_id:e},currentPage:1,itemsPerPage:1}).then(s=>s.records[0]):await this.getDrugById(e)}}export{d as D};
