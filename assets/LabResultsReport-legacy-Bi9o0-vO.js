System.register(["./index-legacy-BPlb_Khg.js","./age_groups-legacy-PcrIMUD9.js","./lodash-legacy-C-x9g9Na.js","./vendor-legacy-Cw5iBHBf.js","./apexcharts-legacy-D8xiNEZ3.js","./chartjs-legacy-g8e0qBV0.js","./barcode-qrcode-reader-legacy-COy1wQvY.js"],(function(e,a){"use strict";var t,l,r,s,u,i,o,n,d,p,g,c,b,h,v,m;return{setters:[e=>{t=e.h,l=e.L,r=e.g,s=e.d,u=e.p,i=e.e,o=e.R,n=e.l,d=e.a},e=>{p=e.A},e=>{g=e.l},e=>{c=e.d,b=e.r,h=e.c,v=e.y,m=e.f},null,null,null],execute:function(){class a extends t{constructor(){super(),this.programId=l}buildLabPatientLevelData(e){return e.flatMap((e=>e.measures.map((a=>({...e,test_name:a.name,result:`${a.modifier} ${a.value}`})))))}buildLabResultRowData(e,a,t){const l=e.filter((e=>e.gender===t&&e.age_group===a)).map((({patient_id:e})=>e));return{ageGroup:a,gender:t,viral_load:l}}buildLabDisaggregatedData(e){const a=[],t=[];return p.forEach((l=>{a.push(this.buildLabResultRowData(e,l,"M")),t.push(this.buildLabResultRowData(e,l,"F"))})),[...t,...a]}async getLabResultReport(){const e=await this.getReport("lab_test_results");if(!e)return{};const a=this.buildLabPatientLevelData(e);return{patientLevelData:a,disaggregatedData:this.buildLabDisaggregatedData(a)}}}e("default",c({__name:"LabResultsReport",setup(e){const t=b("-"),l=b(""),p=[r("patient_id")],c=b({}),R=h((()=>g.isEmpty(c.value)?[]:"disaggregated"===l.value?c.value.disaggregatedData:c.value.patientLevelData)),D=h((()=>"disaggregated"===l.value?[{path:"ageGroup",label:"Age Group"},{path:"gender",label:"Gender",formatter:s},{path:"viral_load",label:"HIV viral load",drillable:!0}]:[{path:"arv_number",label:"ARV Number",preSort:u,initialSort:!0},{path:"gender",label:"Gender",formatter:s},{path:"birthdate",label:"Birthdate",formatter:i},{path:"order_date",label:"Ordered",formatter:i},{path:"test",label:"Specimen"},{path:"test_name",label:"Test"},{path:"result",label:"Result"},{path:"result_date",label:"Released",formatter:i}])),f=h((()=>[{id:"type",label:"Select report type",required:!1,type:"select",options:[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}],onUpdate:e=>{l.value=e.value}}]));async function y(e){await n.show();try{const l=new a;l.setStartDate(e.dateRange.startDate),l.setEndDate(e.dateRange.endDate),l.setOccupation(e.occupation),t.value=l.getDateIntervalPeriod(),c.value=await l.getLabResultReport()}catch(l){d("Unable to load report data"),console.error(l)}await n.hide()}return(e,a)=>(m(),v(o,{"report-type":"Clinic",title:"Lab Test Result(s) Report",columns:D.value,rows:R.value,period:t.value,"row-action-buttons":p,"custom-filters":f.value,"use-date-range-filter":"","use-secure-export":"",onGenerate:y},null,8,["columns","rows","period","custom-filters"]))}}))}}}));
