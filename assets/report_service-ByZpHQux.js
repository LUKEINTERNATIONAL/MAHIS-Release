var Q=Object.defineProperty;var b=(i,t,e)=>t in i?Q(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var o=(i,t,e)=>b(i,typeof t!="symbol"?t+"":t,e);import{dy as c,S as $,eJ as F}from"./vendor-BZmhsiOO.js";import{l as f}from"./lodash-Dt8AsbQm.js";import{h as _,i as l,e as g,A as P,j as m}from"./index-EBUpS4L5.js";const M={async show(i){return(await c.create({message:i||"Loading...",spinner:"crescent",translucent:!0})).present()},async hide(){c.getTop().then(i=>i?c.dismiss():null)}},B=1,R=23;class O{constructor(){o(this,"date");o(this,"startDate");o(this,"endDate");o(this,"programId");o(this,"useDefaultParams");this.programId=B,this.date=_(),this.endDate="",this.startDate="",this.useDefaultParams=!0}setDate(t){this.date=l(t)}setStartDate(t){this.startDate=l(t)}setEndDate(t){this.endDate=l(t)}getDateIntervalPeriod(){return this.startDate&&this.endDate?"".concat(g(this.startDate)," - ").concat(g(this.endDate)):"-"}buildParams(t){let e={};return this.useDefaultParams&&(e.date=this.date,e.program_id=this.programId),this.startDate&&(e.start_date=this.startDate),this.endDate&&(e.end_date=this.endDate),t&&(e={...e,...t}),e}async getReport(t,e){return(await P.get(m(t,this.buildParams(e)))).json()}static getReportQuarters(t=5){const e=[];let a=new Date,r=a.getFullYear();const n=r;a=new Date("".concat(n,"-").concat(a.getMonth()+1,"-").concat(a.getDate()," 00:00"));let s=this.getQtrByDate(a).qtr,u=0;for(s===4&&e.push(this.buildQtrObj("Q1",r+1));u<t;)u===0&&s<4&&e.push(this.buildQtrObj("Q".concat(s+1),r)),e.push(this.buildQtrObj("Q".concat(s),r)),s=s>0?s-=1:s,r=s==0?r-1:r,s=s==0?s+=4:s,u++;return e}static getQtrByDate(t){const e=this.getQuarterBounds(t.getFullYear());for(const a in e){const{start:r,end:n}=e[a];if(t>=new Date(r)&&t<=new Date(n))return e[a]}return null}static buildQtrObj(t,e){const a=this.getQuarterBounds(e),{start:r,end:n}=a[t];return{start:r,end:n,name:"".concat(t," ").concat(e)}}static getQuarterBounds(t){const e=n=>$("".concat(t,"-").concat(n,"-01")).daysInMonth(),a=n=>"".concat(t,"-").concat(n,"-01 00:00"),r=n=>"".concat(t,"-").concat(n,"-").concat(e(n)," 00:00");return{Q1:{qtr:1,start:a("01"),end:r("03")},Q2:{qtr:2,start:a("04"),end:r("06")},Q3:{qtr:3,start:a("07"),end:r("09")},Q4:{qtr:4,start:a("10"),end:r("12")}}}async getMaternalStatus(t,e="pepfar"){var n;if(f.isEmpty(t))return{FP:[],FBf:[]};const a=m("vl_maternal_status",this.buildParams({report_definition:e}));return(n=(await F.postJson(a,{patient_ids:t})).data)!=null?n:{FP:[],FBf:[]}}async buildMaternityAgreggateRows(t,e="pepfar"){const a=f.uniq(Object.values(t).flat(1).map(s=>s instanceof Object?s.patient_id:s)),r=Object.keys(t),n=await this.getMaternalStatus(a,e),h=n.FBf.concat(n.FP);return["FP","FNP","FBf"].map(s=>r.reduce((u,p)=>({[p]:t[p].filter(d=>{const D=d instanceof Object?d.patient_id:d;return s==="FNP"?!h.includes(D):n[s].includes(D)}),...u}),{ageGroup:"All",gender:s}))}}export{R as L,O as R,M as l};
