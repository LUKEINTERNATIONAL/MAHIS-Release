import{d as S,ao as u,cx as b,U as y,T as _,ap as O,ak as C,G as M,S as R,ah as B,cA as k,X as N,a9 as F,aa as H,E as f,e as l,f as c,m as v,l as D,k as h,z as A,F as P,L as $,B as W}from"./vendor-CbvKnZbu.js";import{D as E,c6 as V,H as p,bi as m,i as w,G as z,aR as q,a9 as J,l as L,aH as I,C as U,bj as G,S as K,bb as j,ba as x,aC as X,u as Q,_ as Y}from"./index-_RqcDjoK.js";import{P as Z,u as T,L as ee}from"./lab_order-DwdZ1LMa.js";import{D as ae}from"./DashBox-CkpsoJdQ.js";import"./lodash-Dt8AsbQm.js";import"./apexcharts-BbGV9YyK.js";const te=S({name:"Menu",components:{CheckInConfirmationModal:V,IonContent:B,IonHeader:R,IonItem:M,IonList:C,IonMenu:O,IonTitle:_,IonToolbar:y,DynamicButton:E,DashBox:ae,DataTable:b},computed:{...u(Q,["patient"]),...u(T,["labResults"]),...u(X,["investigations"]),...u(L,["patientsWaitingForVitals","patientsWaitingForConsultation","patientsWaitingForLab","patientsWaitingForDispensation"]),hasEnterResults(){return this.listOrders.some(e=>e.btn&&e.btn.includes("enter_results"))}},props:{propOrders:{default:[]}},data(){return{loading:!1,tableData:[],options:{responsive:!0,select:!1,layout:{topStart:"",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,order:[[3,"desc"]]},header:["Lab Test","Specimen","Accession Number","Order Date","Result"],iconsContent:w,valueNumericArray:[],obsDatetime:[],graphIcon:x(["#006401"]),listIcon:j(["#636363"]),displayGraph:!0,sendToLabModalOpen:!1,orders:[],userRoles:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],listOrders:[],listResults:[],hasPatientsWaitingForLab:!1,labResultsContent:"",listHeaderOrders:"",service:"",openModal:!1,openResultsModal:!1,series:[{name:"",data:[]}]}},setup(){return{checkmark:H,pulseOutline:F}},async mounted(){this.loading=!0,await this.updateInvestigationWizard(),await this.setListData(),this.loading=!1,this.$nextTick(()=>{const e=this.$refs.dataTable.dt;e.columns.adjust().draw(),e.on("click",".result-btn",t=>{const n=t.target.getAttribute("data-id");this.openResultsForm(JSON.parse(n))}),e.on("click",".view-btn",t=>{const n=t.target.getAttribute("data-id");this.viewLabOrder(JSON.parse(n))}),e.on("click",".delete-btn",t=>{const n=t.target.getAttribute("data-id");this.voidLabOrder(JSON.parse(n),t)}),e.on("click",".order-btn",t=>{const n=t.target.getAttribute("data-id");this.saveTest(JSON.parse(n))})}),this.orders=this.propOrders,this.service=new G(this.patient.patientID),this.userRoles=await K.getUserRoles()},watch:{$route:{async handler(){await this.setListData()},deep:!0},patient:{async handler(e){e&&e.patientID&&await this.setListData()},immediate:!0},tableData:{handler(e){if(this.$refs.dataTable){const t=this.$refs.dataTable.dt;t.clear(),t.rows.add(e),t.draw()}},deep:!0}},methods:{async closeModal(){this.openModal=!1,await this.setListData()},async saveTest(e){await new ee().postActivities(this.patient.patientID,[{concept_id:await I.getConceptID(e.name,!0),name:e.name,specimen:e.specimen,reason:"Routine",specimenConcept:await I.getConceptID(e.specimen,!0)}]),U("Successfully saved"),this.orders=await m.getOrders(this.patient.patientID),this.tableData=this.generateListItems(this.orders,"order"),this.tableData.sort((s,a)=>{const r=new Date(s[3]);return new Date(a[3]).getTime()-r.getTime()});const n=this.$refs.dataTable.dt;n.clear(),n.rows.add(this.tableData),n.draw()},toggleSendToLabModal(){this.sendToLabModalOpen=!this.sendToLabModalOpen},async fetchPatientLabStageData(){const e=await q(),t=e?e.code:null;if(t){const n=await J.getPatientList("LAB",t);await L().refresh(t),this.patient.patientID&&(this.hasPatientsWaitingForLab=n.some(s=>s.patient_id===this.patient.patientID))}},async updateInvestigationWizard(){this.orders=await m.getOrders(this.patient.patientID);const e=await this.orders.filter(t=>p.toStandardHisFormat(p.sessionDate())===p.toStandardHisFormat(t.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},dismiss(){N.dismiss()},async voidLabOrder(e,t){await z("Do you want to delete ".concat(e.tests[0].name," ?"),t)&&await this.service.voidOrder(e.id,"Mistake entry"),await this.setListData()},async openResultsForm(e){const t=await Z.getTestIndicatorsWithID(e.concept_id);console.log({testIndicators:t});const n=[e,{validationStatus:"",data:{rowData:[{colData:[]}]}}];t.forEach(a=>{let r={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:""};if(a.name=="RBS"&&(r={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:"",validationFunctionName:"validateRBS",unit:"mg/dL"}),a.name=="FBS"&&(r={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:"",validationFunctionName:"validateFBS",unit:"mg/dL"}),a.name=="MRDT"||a.name=="Tuberculosis program"||a.name=="Vdrl"||a.name=="Hepatitis B"||a.name=="Lam"||a.name=="CrAg"||a.name=="CD4 count"||a.name=="Leukocytes"||a.name=="Protein"||a.name=="Nitrite"||a.name=="Urine Ketones"||a.name=="HIV test"){let i=[];(a.name=="MRDT"||a.name=="Vdrl"||a.name=="Hepatitis B"||a.name=="CrAg"||a.name=="Lam")&&(i=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),a.name=="Tuberculosis program"&&(i=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),a.name=="CD4 count"&&(i=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(a.name=="Leukocytes"||a.name=="Protein"||a.name=="Nitrite"||a.name=="Ketones"||a.name=="Urine Ketones")&&(i=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),a.name=="HIV test"&&(i=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),r={inputHeader:a.name,icon:w.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:i,id:a.concept_id,idName:"district_id"}}n[1].data.rowData[0].colData.push(r)}),T().setLabResults(n),this.openModal=!0,this.orders=await m.getOrders(this.patient.patientID),console.log("ðŸš€ ~ openResultsForm ~ this.orders:",this.orders)},async viewLabOrder(e){this.labResultsContent=e,this.openResultsModal=!0},async setListData(){this.loading=!0,this.orders=await m.getOrders(this.patient.patientID);let e=this.generateListItems(this.orders,"order");e.sort((r,i)=>{const o=new Date(r[3]);return new Date(i[3]).getTime()-o.getTime()});const t=[],n=t.filter(r=>!e.some(i=>i[0]===r[0])),s=e.filter(r=>t.some(i=>i[0]===r[0])),a=e.filter(r=>!s.some(i=>i[0]===r[0]));this.tableData=[...s,...n,...a],await this.updateInvestigationWizard(),this.loading=!1,b.use(k)},generateListItems(e,t){return e.length>0?e.flatMap(n=>n.tests.flatMap(s=>{var i,o,d,g;const a='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(s),"'>").concat(this.iconsContent.view2,"</button> ");let r="";return((i=s==null?void 0:s.result)==null?void 0:i.length)==1?r=(s==null?void 0:s.result)!=null?((o=s==null?void 0:s.result[0])==null?void 0:o.value_modifier)+((d=s==null?void 0:s.result[0])==null?void 0:d.value):null:((g=s==null?void 0:s.result)==null?void 0:g.length)>1&&(s==null||s.result,r=a),[[s.name,n.specimen.name,n.accession_number,p.toStandardHisFormat(n.order_date),r]]})):[]}}}),se={class:"container"},ne={key:0,class:"loading-container"},ie={key:1,class:"table-responsive"};function re(e,t,n,s,a,r){const i=f("ion-spinner"),o=f("DataTable");return c(),l("div",se,[e.loading?(c(),l("div",ne,[D(i,{name:"crescent"}),t[0]||(t[0]=h("p",null,"Loading lab results...",-1))])):v("",!0),e.loading?v("",!0):(c(),l("div",ie,[D(o,{ref:"dataTable",options:e.options,data:e.tableData,class:"display nowrap",width:"100%"},{default:A(()=>[h("thead",null,[h("tr",null,[(c(!0),l(P,null,$(e.header,d=>(c(),l("th",{key:d,"data-orderable":!0},W(d),1))),128))])])]),_:1},8,["options","data"])]))])}const me=Y(te,[["render",re],["__scopeId","data-v-22bef1f8"]]);export{me as default};
