import{d as x,r as p,c_ as C,a as V,y as v,f as _,z as n,l as i,u as s,aY as b,bm as q,m as B,aa as P,ab as F,k as g,A as N,a$ as k}from"./vendor-BsZAuWFl.js";import{P as A,t as u,j as I,_ as R}from"./index-xeAXLgY8.js";import{l as h}from"./lodash-Dt8AsbQm.js";import{P as y}from"./patient_type_service-D9afuUQ0.js";import{S as E}from"./SelectFacility-BNO4OXTB.js";import{B as L}from"./BasicRadioSelect-qS85uLxy.js";import"./app_encounter_service-CmxD9NQd.js";const M=x({__name:"ARTPatientType",setup($,{expose:w}){const c=p(!1),d=p([]);p([]);const f=new A,r=new y(f.getID(),-1),o=p({}),e=C({patientType:null,prevType:null,transerFacility:null});function T(){return o.value={},e.patientType||(o.value.patientType="Patient type is required",u("Patient type is required")),!/new patient/i.test(e.patientType)&&e.patientType!==e.prevType&&!e.transerFacility&&(o.value.transerFacility="Facility is required",u("Facility is required")),h.isEmpty(o.value)}async function S(a=null){var l;if(e.patientType===e.prevType)return!0;if(!T())return!1;const t=new y(a!=null?a:f.getID(),-1);t.setPatientType(e.patientType),t.setLocationName(((l=e.transerFacility)==null?void 0:l.name)||"");try{return await t.save()?(I("Patient type saved successfully"),!0):(u("Failed to save patient type"),!1)}catch(m){return u("Failed to save patient type: ".concat(m)),!1}}return V(()=>{c.value=!0,d.value=y.getPatientTypes(),r.loadPatientType().then(()=>{const a=r.getType();a&&!/n\/a/i.test(a)&&(e.prevType=r.getType(),e.patientType=r.getType())}).finally(()=>{c.value=!1})}),w({validateAll:T,onSubmit:S}),(a,t)=>(_(),v(s(k),null,{default:n(()=>[i(s(b),null,{default:n(()=>[i(s(q),null,{default:n(()=>[i(s(P),null,{default:n(()=>[i(s(F),null,{default:n(()=>[i(L,{required:"",label:"Patient Type",modelValue:e.patientType,"onUpdate:modelValue":t[0]||(t[0]=l=>e.patientType=l),options:d.value},null,8,["modelValue","options"])]),_:1})]),_:1}),e.prevType!==e.patientType&&!/new patient/i.test(e.patientType)?(_(),v(s(P),{key:0},{default:n(()=>[i(s(F),null,{default:n(()=>[t[2]||(t[2]=g("h2",{style:{"font-weight":"bold",margin:"12px"}},[N("Facility "),g("span",{style:{color:"red"}},"*")],-1)),i(E,{show_error:!1,selected_district_ids:[],selected_location:null,onFacilitySelected:t[1]||(t[1]=l=>{e.transerFacility=l.selected_location})})]),_:1,__:[2]})]),_:1})):B("",!0)]),_:1})]),_:1})]),_:1}))}}),H=R(M,[["__scopeId","data-v-98d98bfd"]]);export{H as default};
