import{d as y,ar as I,bd as C,D as k,G as O,M as E,J as B,aZ as F,bH as L,a_ as z,aY as N,a$ as U,W as M,U as $,T as H,af as W,bf as A,S as R,a9 as G,a2 as Y,cp as j,E as h,y as q,f as V,z as _,e as J,m as Z,l as u,k as K}from"./vendor-CIegBHSo.js";import{y as Q,T as X,f as x,S as g,H as r,a4 as aa,j as v,aH as b,g as w,l as ta,h as D,t as P,aA as sa,x as ea,ab as ia,u as oa,i as ra,_ as na}from"./index-CUlU9rSI.js";import{B as la}from"./BasicFooter-O9QhOE1P.js";import{D as da}from"./DemographicBar-D6SPyumy.js";import{S as pa}from"./SaveProgressModal-D748PrpC.js";import{S as ca}from"./Stepper-DqP1pXWJ.js";import{V as T}from"./vitals_service-j91akOj5.js";import{d as ha,f as ma}from"./formatServerData-j8Bn71xu.js";import"./lodash-Dt8AsbQm.js";import"./app_encounter_service-F3MLsbNN.js";import"./Outcome-DdJcM3qx.js";import"./SvgDynamicColor-juimvI69.js";import"./BasicForm-BsBti_sv.js";import"./DateInputField-DGZQGEhM.js";import"./group_validation-CPifEDpk.js";import"./drug_prescription_service-1LaAFD-U.js";import"./drug_service-C5YTLHM1.js";import"./appointment_service-hCtkAEva.js";import"./clinicalDaysStore-DA0UKYdX.js";import"./ncd_appointment_service-C8_FLiSf.js";import"./SelectFacility-DQmQ2DwN.js";import"./patient_complaints_service-CgDVVRzY.js";import"./StandardForm.vue_vue_type_script_setup_true_lang-BBMQBnnH.js";import"./useExposeFromStandardForm-DC7fv1lL.js";import"./patient_lab_service-C7ZYncW-.js";import"./UpcomingFeature-C58fXHsC.js";import"./previousVitals-Dmsfaa3N.js";import"./apexcharts-uyb6bGBl.js";import"./FeatusModal-DA8k8_J2.js";const ua=y({name:"Home",components:{IonContent:G,IonHeader:R,IonMenuButton:A,IonPage:W,IonTitle:H,IonToolbar:$,Toolbar:X,ToolbarSearch:Q,DemographicBar:da,IonButton:M,IonCard:U,IonCardContent:N,IonCardHeader:z,IonCardSubtitle:L,IonCardTitle:F,IonAccordion:B,IonAccordionGroup:E,IonItem:O,IonLabel:k,IonModal:C,Stepper:ca,BasicFooter:la},data(){return{isLoading:!1,hasValidationErrors:[],outcomes:"",actionBtn:"",wizardData:[{title:"Vital Signs",class:"common_step",checked:!1,disabled:!1,number:1,last_step:"last_step"}],StepperData:[{title:"Vital Signs",component:"VitalSigns",value:"1"}],isOpen:!1,iconsContent:ra}},computed:{...I(oa,["patient"]),...I(ia,["vitals"]),"Height Weight Reason"(){return ea(this.vitals,"Height Weight Reason","value")}},async created(){},mounted(){this.markWizard()},watch:{vitals:{handler(){this.markWizard()},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},diagnosis:{handler(){this.markWizard()},deep:!0},selectedMedicalDrugsList:{handler(){this.markWizard()}}},setup(){return{chevronBackOutline:j,checkmark:Y}},methods:{markWizard(){this.actionBtn=this.vitals[0].actionBtn;const t=r.sessionDate(),e=sa("vitals").some(n=>r.toStandardHisFormat(n.obs_datetime)===r.toStandardHisFormat(t));this.vitals.validationStatus||e?(this.wizardData[0].checked=!0,this.wizardData[0].class="open_step common_step"):this.wizardData[0].checked=!1},async getSaveFunction(){g.getUserID();const t=g.getUserRoles();this.isLoading=!0;try{if(await this.validaterowData(),this.actionBtn!="Finish")if(this.vitals.validationStatus){await this.saveVitals(),await b();const a=await w(),e=a?a.code:null;t.includes("Nurse")?(await D.addPatientToStage(this.patient.patientID,r.todayDateFormatted(),"CONSULTATION",e),v("Vitals have been saved!"),this.$router.push("patientProfile")):(await D.addPatientToStage(this.patient.patientID,r.todayDateFormatted(),"CONSULTATION",e),v("Vitals have been saved!"),this.$router.push("OPDConsultationPlan"))}else P("Please fill all required fields");else{const a=await w(),e=a?a.code:null;t.includes("Nurse")?(await D.addPatientToStage(this.patient.patientID,r.todayDateFormatted(),"CONSULTATION",e),v("Vitals have been saved!"),this.$router.push("patientProfile")):(await D.addPatientToStage(this.patient.patientID,r.todayDateFormatted(),"CONSULTATION",e),v("Vitals have been saved!"),this.$router.push("OPDConsultationPlan"))}}catch(a){console.error("Error in saveData: ",a)}finally{this.isLoading=!1}},async saveData(){this.isLoading=!0;try{if(this.actionBtn!="Finish")if(this.vitals.validationStatus){await this.saveVitals(),b();const t=await w(),a=t?t.code:null;if(!a){ta("Location ID could not be found. Please check your settings.");return}await D.addPatientToStage(this.patient.patientID,r.todayDateFormatted(),"CONSULTATION",a),this.$router.push("OPDConsultationPlan")}else await this.validaterowData(),P("Please correct validation errors in form");else this.$router.push("OPDConsultationPlan")}catch(t){console.error("Error in saveData: ",t)}finally{this.isLoading=!1}},async saveVitals(){var e,n,c,i;const t=g.getUserID(),a=new T(this.patient.patientID,t);try{await a.onFinish(this.vitals);const s=await ha(this.vitals),d=await ma(this.vitals);(d.length>0||s.length>0)&&((i=(c=(n=(e=this.patient).vitals)!=null?n:e.vitals={}).unsaved)!=null||(c.unsaved=[]),this.patient.vitals.unsaved.push(...d,...s),await aa(this.patient)),v("Vitals saved successfully")}catch(s){throw console.error("Vitals save failed:",s),s}},async validaterowData(){var n,c;this.hasValidationErrors=[];const t=g.getUserID(),a=new T(this.patient.patientID,t),e=r.getAgeInYears((c=(n=this.patient)==null?void 0:n.personInformation)==null?void 0:c.birthdate);this.vitals.forEach((i,s)=>{var d,f;(d=i==null?void 0:i.data)!=null&&d.rowData&&((f=i==null?void 0:i.data)==null||f.rowData.forEach((S,l)=>{S.colData.some((m,p)=>{if(m.name==="Respiratory rate"&&e<=5){const o=a.validator(m);if((o==null?void 0:o.length)>0)return this.hasValidationErrors.push("false"),this.vitals[s].data.rowData[l].colData[p].alertsErrorMassage=o.flat(1/0)[0],!0;this.hasValidationErrors.push("true"),this.vitals[s].data.rowData[l].colData[p].alertsErrorMassage=!1,this.vitals[s].data.rowData[l].colData[p].alertsErrorMassage=""}else{const o=a.validator(m);if((o==null?void 0:o.length)>0)return this.hasValidationErrors.push("false"),this.vitals[s].data.rowData[l].colData[p].alertsErrorMassage=o.flat(1/0)[0],!0;this.hasValidationErrors.push("true"),this.vitals[s].data.rowData[l].colData[p].alertsErrorMassage=!1,this.vitals[s].data.rowData[l].colData[p].alertsErrorMassage=""}return!1})}))}),this.vitals.validationStatus=!this.hasValidationErrors.includes("false")},openModal(){x(pa)}}}),va={key:0,class:"spinner-overlay"};function Da(t,a,e,n,c,i){const s=h("ion-spinner"),d=h("Toolbar"),f=h("DemographicBar"),S=h("Stepper"),l=h("ion-content"),m=h("ion-page");return V(),q(m,null,{default:_(()=>[t.isLoading?(V(),J("div",va,[u(s,{name:"bubbles"}),a[1]||(a[1]=K("div",{class:"loading-text"},"Please wait...",-1))])):Z("",!0),u(d),u(l,{fullscreen:!0},{default:_(()=>[u(f),u(S,{stepperTitle:"Vitals",wizardData:t.wizardData,onUpdateStatus:t.markWizard,onFinishBtn:a[0]||(a[0]=p=>t.saveData()),StepperData:t.StepperData,getSaveFunction:t.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","getSaveFunction"])]),_:1})]),_:1})}const ja=na(ua,[["render",Da],["__scopeId","data-v-9b3985d9"]]);export{ja as default};
