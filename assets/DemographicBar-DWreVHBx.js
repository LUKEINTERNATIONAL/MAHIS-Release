import{d as Q,ak as U,aT as L,r as g,w as h,a as q,H as X,O as Y,f as c,J as Z,k as o,e as O,u as t,Q as r,K as n,l as $,dy as ee,L as oe}from"./vendor-C-fC0sMU.js";import{u as le,y as ne,aG as se,P as re,be as te,bf as p,H as b,bg as ie,_ as ae}from"./index-DFvWJGDn.js";const ue={style:{width:"97%",overflow:"scroll"}},me={key:0,class:"second_bar_list"},de={key:1,class:"second_bar_list"},pe=Q({__name:"DemographicBar",emits:["openPopover"],setup(ve,{emit:R}){const j=R;U();const F=le(),W=ne(),{patient:l}=L(F),{activeProgram:z,authorizedPrograms:fe}=L(W),u=g({}),I=g(""),f=g(),E=async(s,e)=>{var m,i,a,v;if((m=l==null?void 0:l.value.personInformation)!=null&&m.gender&&((i=l==null?void 0:l.value.personInformation)!=null&&i.birthdate)){const d=await ie.getBMI(parseInt(s),parseInt(e),(a=l==null?void 0:l.value.personInformation)==null?void 0:a.gender,b.calculateAge((v=l==null?void 0:l.value.personInformation)==null?void 0:v.birthdate,b.sessionDate()));I.value=d==null?void 0:d.index}},y=async()=>{let s=se("vitals");f.value=new re().getBloodGlucose(l.value);const e=te(s);u.value={weight:p(e,"Weight (kg)","value_numeric"),height:p(e,"Height (cm)","value_numeric"),temperature:p(e,"Temperature (c)","value_numeric"),pulse:p(e,"Pulse","value_numeric"),diastolic:p(e,"Diastolic blood pressure","value_numeric"),systolic:p(e,"Systolic blood pressure","value_numeric")},await E(u.value.weight,u.value.height)},B=()=>{var s,e;return b.getBirthdateAge((e=(s=l.value)==null?void 0:s.personInformation)==null?void 0:e.birthdate)},J=s=>{var m,i,a;return[(m=s==null?void 0:s.personInformation)==null?void 0:m.current_district,(i=s==null?void 0:s.personInformation)==null?void 0:i.current_traditional_authority,(a=s==null?void 0:s.personInformation)==null?void 0:a.current_village].filter(Boolean).join(",")};return h(()=>l,async()=>{await y()},{deep:!0}),q(async()=>{await y()}),(s,e)=>{const m=X("ion-card");return c(),Y(m,{class:"second_bar",style:{display:"flex"}},{default:Z(()=>{var i,a,v,d,D,w,_,N,C,P,S,k,x,M,G,T,V,A,H;return[o("div",ue,[t(z).program_id==32?(c(),O("ul",me,[o("li",null,[e[1]||(e[1]=r(" NCDNumber: ",-1)),o("b",null,n((i=t(l))==null?void 0:i.NcdID),1)]),o("li",null,[e[2]||(e[2]=r(" Birthday: ",-1)),o("b",null,n(B()),1)]),o("li",null,[e[3]||(e[3]=r(" Gender: ",-1)),o("b",null,n((v=(a=t(l))==null?void 0:a.personInformation)==null?void 0:v.gender),1)]),o("li",null,[e[4]||(e[4]=r(" Blood Pressure: ",-1)),o("b",null,n((d=u.value)==null?void 0:d.systolic)+"/"+n((D=u.value)==null?void 0:D.diastolic),1)]),o("li",null,[e[5]||(e[5]=r(" Blood Glucose: ",-1)),o("b",null,n((w=f.value)==null?void 0:w.value)+" "+n((_=f.value)==null?void 0:_.unit),1)]),o("li",null,[e[6]||(e[6]=r(" BMI: ",-1)),o("b",null,n(I.value),1)]),o("li",null,[e[7]||(e[7]=r(" Pulse rate: ",-1)),o("b",null,n((N=u.value)==null?void 0:N.pulse),1)]),o("li",null,[e[8]||(e[8]=r(" Temperature: ",-1)),o("b",null,n((C=u.value)==null?void 0:C.temperature),1)])])):(c(),O("ul",de,[o("li",null,[e[9]||(e[9]=r(" Fullname: ",-1)),o("b",null,n((S=(P=t(l))==null?void 0:P.personInformation)==null?void 0:S.given_name)+" "+n((x=(k=t(l))==null?void 0:k.personInformation)==null?void 0:x.middle_name)+" "+n((G=(M=t(l))==null?void 0:M.personInformation)==null?void 0:G.family_name),1)]),o("li",null,[e[10]||(e[10]=r(" NCDNumber: ",-1)),o("b",null,n((T=t(l))==null?void 0:T.NcdID),1)]),o("li",null,[e[11]||(e[11]=r(" MRN: ",-1)),o("b",null,n((V=t(l))==null?void 0:V.ID),1)]),o("li",null,[e[12]||(e[12]=r(" Birthday: ",-1)),o("b",null,n(B()),1)]),o("li",null,[e[13]||(e[13]=r(" Gender: ",-1)),o("b",null,n((H=(A=t(l))==null?void 0:A.personInformation)==null?void 0:H.gender),1)]),o("li",null,[e[14]||(e[14]=r(" Address: ",-1)),o("b",null,n(J(t(l))),1)])]))]),o("div",{style:{"margin-top":"15px",cursor:"pointer"},onClick:e[0]||(e[0]=K=>j("openPopover",K))},[$(t(oe),{icon:t(ee)},null,8,["icon"])])]}),_:1})}}}),be=ae(pe,[["__scopeId","data-v-55d0738c"]]);export{be as D};
