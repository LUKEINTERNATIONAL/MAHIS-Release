import{cE as p,cD as m,cv as d,cu as o,aE as n,aD as u}from"./index-7qwbP5UI.js";import{d as h,r as s,y as b,f}from"./vendor-8nEYVyB7.js";import"./lodash-Dt8AsbQm.js";class _ extends p{constructor(){super()}async generate(){const t=await this.getReport("incomplete_visits",{tool_name:"INCOMPLETE VISITS"});return Object.values(t!=null?t:{})}}const w=h({__name:"IncompleteVisits",setup(l){const t=s("-"),r=s([]),i=[{path:"arv_number",label:"ARV Number"},{path:"national_id",label:"NHID"},{path:"given_name",label:"First name",exportable:!1},{path:"family_name",label:"Last name",exportable:!1},{path:"gender",label:"Gender",formatter:d},{path:"birthdate",label:"Date of Birth",formatter:o},{path:"dates",label:"Date(s)",formatter:a=>a.map(o).join(", ")}];async function c(a){await n.show();try{const e=new _;e.setStartDate(a.dateRange.startDate),e.setEndDate(a.dateRange.endDate),e.setOccupation(a.occupation),t.value=e.getDateIntervalPeriod(),r.value=await e.generate()}catch(e){u("Unable to load report data"),console.error(e)}await n.hide()}return(a,e)=>(f(),b(m,{title:"Incomplete Visits Clinic Report","report-type":"Clinic",columns:i,rows:r.value,period:t.value,"use-date-range-filter":"","use-secure-export":"","show-indices":"",onGenerate:c},null,8,["rows","period"]))}});export{w as default};
