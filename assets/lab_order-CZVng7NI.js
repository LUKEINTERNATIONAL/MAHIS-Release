var ve=Object.defineProperty;var ye=(s,t,e)=>t in s?ve(s,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):s[t]=e;var $=(s,t,e)=>ye(s,typeof t!="symbol"?t+"":t,e);import{R as he,d as F,ao as X,V as te,ap as se,an as ne,D as oe,dr as ae,dy as le,ak as ie,G as re,T as E,U as de,ah as P,S as V,b8 as J,W as U,aR as ue,X as W,E as a,y as M,f as O,z as o,l as n,k as v,B as R,A as b,e as ce,F as pe,L as ge,a$ as Ie,cl as De,r as k,c as Se,w as x,a as we,u as L,I as Oe,ag as Ce,j as $e}from"./vendor-BV0gyDVt.js";import{aP as K,az as y,D as q,aO as ke,S as w,m as A,H as Re,ax as _e,z as Te,u as me,_ as z,ar as Q,i as N,as as Be,t as fe,ay as Z,bn as Le}from"./index-1YBLjhMF.js";import{B as be}from"./BasicForm-FP_QVSX9.js";const ee=he("labResultsStore",{state:()=>({labResults:[]}),actions:{setLabResults(s){this.labResults=s}},persist:!0});class Me extends K{constructor(e){super(e,32);$(this,"patientID");$(this,"testTypeID");$(this,"resultDate");$(this,"testID");this.patientID=e,this.testTypeID=-1,this.resultDate="",this.testID=-1}createLabResult(e){return K.postJson("lab/tests/".concat(this.testID,"/results"),{encounter_id:this.encounterID,date:this.resultDate,measures:e})}getTestID(){return this.testID}getTestTypeID(){return this.testTypeID}setTestTypeID(e){this.testTypeID=e}setResultDate(e){this.resultDate=e}setTestID(e){this.testID=e}getTestsWithoutResults(){return y.getOrders(this.patientID,{status:"drawn"})}getTestIndicators(){return y.getJson("lab/test_result_indicators",{test_type_id:this.testTypeID})}static getTestIndicatorsWithID(e){return y.getJson("lab/test_result_indicators",{test_type_id:e})}}const Fe=F({components:{IonButtons:ue,IonButton:U,IonModal:J,IonHeader:V,IonContent:P,IonToolbar:de,IonTitle:E,IonItem:re,IonList:ie,IonAvatar:le,IonImg:ae,IonLabel:oe,IonPage:ne,IonMenu:se,BasicForm:be,IonFooter:te,DynamicButton:q},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{type:Object,default:{}},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},computed:{...X(me,["patient"]),...X(ee,["labResults"])},mounted(){},methods:{dismiss(){W.dismiss()},async saveResults(){const s=await this.buildResults();this.patient.labOrders.results=[{encounter_id:"",date:Re.sessionDate(),measures:s,test_id:this.labResults[0].id}];let t=!1;for(let e=0;e<this.patient.labOrders.unsaved.length;e++)if(this.patient.labOrders.unsaved[e].tests[0].id===this.labResults[0].id&&this.patient.labOrders.unsaved[e].tests&&this.patient.labOrders.unsaved[e].tests.length>0){this.patient.labOrders.unsaved[e].tests[0].result=s,t=!0;break}if(!t){for(let e=0;e<this.patient.labOrders.saved.length;e++)if(this.patient.labOrders.saved[e].tests[0].id===this.labResults[0].id&&this.patient.labOrders.saved[e].tests&&this.patient.labOrders.saved[e].tests.length>0){this.patient.labOrders.saved[e].tests[0].result=s;break}}await _e(this.patient),Te("Saved successfully"),this.$emit("saved")},async buildResults(){let s=[];return await Promise.all(this.labResults[1].data.rowData[0].colData.map(async t=>{var _;let e;w.getUseIndexDBStatus()||w.getModsStatus()?e=await A("testResultIndicators",{whereClause:{test_type_id:t.id}}):e=await Me.getTestIndicatorsWithID(t.id),s.push({indicator:{name:(_=e[0])==null?void 0:_.name,concept_id:t.id},value:t.value.name||t.value||"not done",value_modifier:"",value_type:"text"})})),s},async nav(s,t){const e=ee();t=="not_save"?(await ke(),e.setLabResults(!1)):e.setLabResults(!0),this.dismiss(),this.$router.push(s)}}}),Ee={class:"modal_wrapper"},Pe={class:"center text_12"};function qe(s,t,e,_,D,m){const r=a("ion-title"),f=a("ion-button"),c=a("ion-buttons"),h=a("ion-toolbar"),g=a("ion-header"),p=a("basic-form"),S=a("ion-row"),C=a("ion-content"),i=a("DynamicButton"),l=a("ion-footer"),I=a("ion-modal");return O(),M(I,{"is-open":s.popoverOpen,"show-backdrop":!0,onDidDismiss:t[2]||(t[2]=d=>s.$emit("closePopoover",!1)),"keyboard-close":s.keyboardClose},{default:o(()=>[n(g,null,{default:o(()=>[n(h,null,{default:o(()=>[n(r,null,{default:o(()=>[v("b",null,"Enter lab results for ("+R(s.labResults[0].name)+") test",1)]),_:1}),n(c,{slot:"end"},{default:o(()=>[n(f,{onClick:t[0]||(t[0]=d=>s.$emit("closeModal"))},{default:o(()=>t[3]||(t[3]=[b("Close")])),_:1,__:[3]})]),_:1})]),_:1})]),_:1}),n(C,{class:"ion-padding"},{default:o(()=>[v("div",Ee,[v("div",Pe,[n(S,null,{default:o(()=>[n(p,{contentData:s.labResults},null,8,["contentData"])]),_:1})])])]),_:1}),n(l,{translucent:!0},{default:o(()=>[n(h,null,{default:o(()=>[n(i,{onClick:t[1]||(t[1]=d=>s.saveResults()),name:"Save",fill:"clear",iconSlot:"icon-only",style:{float:"right"}})]),_:1})]),_:1})]),_:1},8,["is-open","keyboard-close"])}const Qe=z(Fe,[["render",qe],["__scopeId","data-v-a9001ab2"]]),ze=F({components:{IonButtons:ue,IonButton:U,IonModal:J,IonHeader:V,IonContent:P,IonToolbar:de,IonTitle:E,IonItem:re,IonList:ie,IonAvatar:le,IonImg:ae,IonLabel:oe,IonPage:ne,IonMenu:se,BasicForm:be,IonFooter:te,DynamicButton:q},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{default:[]},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},methods:{dismiss(){W.dismiss()},nav(s,t){this.dismiss(),this.$router.push(s)}}}),Ne={class:"modal_wrapper"},Ae={class:"center text_12"};function Ve(s,t,e,_,D,m){const r=a("ion-title"),f=a("ion-button"),c=a("ion-buttons"),h=a("ion-toolbar"),g=a("ion-header"),p=a("ion-col"),S=a("ion-row"),C=a("ion-content"),i=a("ion-modal");return O(),M(i,{"is-open":s.popoverOpen,"show-backdrop":!0,onDidDismiss:t[1]||(t[1]=l=>s.$emit("closePopoover",!1)),"keyboard-close":s.keyboardClose},{default:o(()=>[n(g,null,{default:o(()=>[n(h,null,{default:o(()=>[n(r,null,{default:o(()=>[v("b",null,"Lab results for ("+R(s.content.name)+") test",1)]),_:1}),n(c,{slot:"end"},{default:o(()=>[n(f,{onClick:t[0]||(t[0]=l=>s.$emit("closeModal"))},{default:o(()=>t[2]||(t[2]=[b("Close")])),_:1,__:[2]})]),_:1})]),_:1})]),_:1}),n(C,{class:"ion-padding"},{default:o(()=>[v("div",Ne,[v("div",Ae,[n(S,null,{default:o(()=>[(O(!0),ce(pe,null,ge(s.content.result,(l,I)=>(O(),M(p,{size:"4",key:I},{default:o(()=>[n(S,null,{default:o(()=>[n(p,{size:"8"},{default:o(()=>[b(R(l.indicator.name),1)]),_:2},1024),n(p,{class:"bold",size:"0.5"},{default:o(()=>t[3]||(t[3]=[b(":")])),_:1,__:[3]}),n(p,{class:"bold",size:"2"},{default:o(()=>[b(R(l.value),1)]),_:2},1024)]),_:2},1024)]),_:2},1024))),128))]),_:1})])])]),_:1})]),_:1},8,["is-open","keyboard-close"])}const Ze=z(ze,[["render",Ve],["__scopeId","data-v-5d6713fe"]]),Je=F({__name:"EnterResultModal",setup(s){const t=me(),{patient:e}=Ie(t);De();const _=N,D=k(""),m=k(""),r=k(""),f=k(""),c=k(null),h=Se(()=>[{componentType:"multiSelectInputField",name:"test",header:"Test",options:f.value,grid:{s:"6"},icon:N.search,validation:Q.required,onChange:i=>{D.value=i.name}},{componentType:"multiSelectInputField",name:"specimen",header:"Specimen",grid:{s:"6"},icon:N.search,validation:Q.required,value:r.value.length==1?r.value[0]:"",options:r.value.length>1?r.value:[]}]);x(D,async i=>{if(i)try{r.value=await g(i)}catch(l){r.value=[]}else r.value=[]});const g=async i=>{let l;return w.getUseIndexDBStatus()||w.getModsStatus()?l=await A("specimens"):l=await y.getSpecimens("",1e3),await Z.getConceptSet(i,"",{names:l.map(d=>d.name)})};x(e,async()=>{m.value=[...e.value.labOrders.saved,...e.value.labOrders.unsaved]},{deep:!0});const p=()=>{W.dismiss()},S=async()=>w.getUseIndexDBStatus()||w.getModsStatus()?await A("testTypes"):await y.getTestTypes(),C=async()=>{var T,B,j,H,Y,G;if(c.value.validateForm()){fe("Test not saved");return}if(!c.value){console.error("Form reference is not available");return}const i=c.value.getFormValues(),l=[{concept_id:i.test.concept_id,name:i.test.name,specimen:i.specimen.name,reason:"Routine",specimenConcept:await Z.getConceptID(i.specimen.name,!0)}];let d=(await y.buildLabOrders("",l))[0];d.order_date=d.date,d.specimen.name=i.specimen.name,d.tests[0].name=i.test.name;const u=JSON.parse(JSON.stringify(e.value));(j=(B=(T=u.labOrders)!=null?T:u.labOrders={}).unsaved)!=null||(B.unsaved=[]),(G=(Y=(H=u.labOrders)!=null?H:u.labOrders={}).saved)!=null||(Y.saved=[]),u.labOrders.unsaved.push(d),await _e(u),m.value=[...u.labOrders.saved,...u.labOrders.unsaved],p()};return we(async()=>{f.value=await S()}),(i,l)=>{const I=a("ion-icon"),d=a("ion-col"),u=a("ion-row"),T=a("ion-footer");return O(),ce(pe,null,[n(L(V),{style:{display:"flex","justify-content":"space-between"}},{default:o(()=>[n(L(E),{class:"modalTitle"},{default:o(()=>l[2]||(l[2]=[b("Add Lab Test")])),_:1,__:[2]}),n(I,{onClick:l[0]||(l[0]=B=>p()),style:{"padding-top":"10px","padding-right":"10px"},icon:L(_).cancel},null,8,["icon"])]),_:1}),n(L(P),{fullscreen:!0,class:"ion-padding",style:{"--background":"#fff"}},{default:o(()=>[n(Be,{formData:h.value,ref_key:"formRef",ref:c},null,8,["formData"])]),_:1}),n(T,{collapse:"fade",class:"ion-no-border"},{default:o(()=>[n(u,null,{default:o(()=>[n(d,null,{default:o(()=>[n(q,{onClick:l[1]||(l[1]=B=>C()),name:"Save",fill:"solid",style:{float:"right",margin:"2%",width:"130px"}})]),_:1})]),_:1})]),_:1})],64)}}}),et=z(Je,[["__scopeId","data-v-7d276145"]]),Ue=F({name:"CheckInConfirmationModal",components:{IonModal:J,IonTitle:E,IonButton:U,IonContent:P,IonIcon:Oe,DynamicButton:q},props:{isOpen:{type:Boolean,required:!0,default:!1},closeModalFunc:{type:Function,required:!0},onYes:{type:Function,required:!0},onNo:{type:Function,required:!0},title:{type:String,required:!0}},methods:{closeCircleOutline(){return Ce},closeModal(){this.closeModalFunc()}}}),We={class:"modal-header"},je={class:"modal-body"},He={class:"modal-footer"};function Ye(s,t,e,_,D,m){const r=a("ion-title"),f=a("ion-icon"),c=a("ion-button"),h=a("DynamicButton"),g=a("ion-content"),p=a("ion-modal");return O(),M(p,{"is-open":s.isOpen,"show-backdrop":!0,onDidDismiss:s.closeModal},{default:o(()=>[n(g,{class:"modal-wrapper"},{default:o(()=>[v("div",We,[n(r,{class:"modal-title"},{default:o(()=>[b(R(s.title),1)]),_:1}),n(c,{fill:"clear",class:"close-btn",onClick:s.closeModal},{default:o(()=>[n(f,{icon:s.closeCircleOutline()},null,8,["icon"])]),_:1},8,["onClick"])]),v("div",je,[$e(s.$slots,"default",{},()=>[t[0]||(t[0]=b(" Sending the patient to the lab will pause this consultation. You’ll return to the waiting list while waiting for lab results this patient. "))],!0)]),v("div",He,[n(c,{fill:"outline",color:"danger",class:"action-btn",onClick:s.onNo,style:{"--border-color":"#b42318"}},{default:o(()=>t[1]||(t[1]=[b(" Cancel ")])),_:1,__:[1]},8,["onClick"]),n(h,{name:"Confirm",color:"success",class:"action-btn confirm-btn",fill:"solid",onClick:s.onYes},null,8,["onClick"])])]),_:3})]),_:3},8,["is-open","onDidDismiss"])}const tt=z(Ue,[["render",Ye],["__scopeId","data-v-72d46b65"]]);class st extends y{constructor(){super()}async postActivities(t,e){const _=e.location_id,m=await new Le(parseInt(t),-1,_).createEncounter();if(m){const r=await y.buildLabOrders(m,e.orders||e);if(!await y.saveOrdersArray(m.encounter_id,r))return fe("Unable to save lab orders")}}}export{et as E,Ze as L,Me as P,tt as S,Qe as a,st as b,ee as u};
