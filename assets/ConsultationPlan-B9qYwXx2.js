import{d as te,ao as K,cw as we,U as Fe,T as Le,ap as Be,ak as Ae,G as Ne,S as xe,ah as le,cz as ot,X as rt,a9 as $e,aa as He,E as C,e as F,f as k,k as f,l as r,z as b,F as Ve,L as lt,B as ct,a8 as dt,ab as ut,m as q,A as Y,r as w,c as j,a as We,ar as pt,cl as mt,a$ as H,w as V,y as De,u as G,dE as gt,i as E,bG as ht,v as z,an as vt}from"./vendor-BV0gyDVt.js";import{D as ce,aw as ft,H as L,S as B,m as oe,i as g,F as bt,ax as Z,a6 as yt,l as Te,j as Ee,ay as A,az as re,aA as St,aB as _t,aC as wt,aD as ee,u as de,_ as ze,aE as Dt,B as Tt,aF as Ct,x as M,aG as ae,ar as y,as as Ot,g as Rt,t as kt,P as It,z as Je,a8 as Ce,aH as Oe,aI as Pt,a1 as Mt,c as Ft,aJ as Lt,f as Bt,K as At,d as Nt,T as xt,y as $t,aK as Q,aL as Ht,aM as Vt,N as Re}from"./index-1YBLjhMF.js";import{D as Wt}from"./DemographicBar-BrCLhP31.js";import{u as ie,D as Et,C as zt,T as Jt}from"./TreatmentPlan-BfXuVf9D.js";import{D as Ue}from"./DashBox-CtLmLXAv.js";import{B as Ut}from"./BasicForm-FP_QVSX9.js";import{S as Gt,L as qt,a as Kt,P as jt,u as ke,E as Xt,b as Qt}from"./lab_order-CZVng7NI.js";import{a as Yt}from"./userService-BT_j44Qz.js";import{v as Ie}from"./group_validation-BDj4UbNl.js";import{_ as Zt,u as ea,N as ta,M as aa,s as na,a as sa,c as ia,b as oa}from"./NextAppointment-rB7LsCBc.js";import{_ as ra}from"./RiskAssessment.vue_vue_type_script_setup_true_lang-Da8nngtF.js";import{l as Pe}from"./lodash-Dt8AsbQm.js";import{a as Me,b as la}from"./formatServerData-Dj2AeevK.js";import{u as ca}from"./useFormWizard-CIfJhRRE.js";import{C as da}from"./Registration-C66BXcWr.js";import{u as ua}from"./usePatientProfile-BfTK57hC.js";import"./apexcharts-rmVesNUY.js";import"./previousDiagnosis-Ba-Xevt2.js";import"./drug_service-1xjEj5vG.js";import"./DateInputField-DDANF4aI.js";import"./drug_prescription_service-D6N8YCPa.js";import"./ncd_appointment_service-Cvy3sjZj.js";import"./useLocation-CPs4kTgH.js";import"./useExposeFromStandardForm-DdMfwyUB.js";import"./vaccines_service-osfTGjP8.js";import"./sms_service-DTBYRz3p.js";import"./EIRreportsStore-Cg9gEj_v.js";import"./Export-CV4jxTXB.js";import"./Outcome-D4talkAa.js";const pa=te({name:"Menu",components:{CheckInConfirmationModal:ft,IonContent:le,IonHeader:xe,IonItem:Ne,IonList:Ae,IonMenu:Be,IonTitle:Le,IonToolbar:Fe,DynamicButton:ce,DashBox:Ue,LabModal:Kt,LabViewResultsModal:qt,SendToLabConfirmationModal:Gt,DataTable:we},computed:{...K(de,["patient"]),...K(ke,["labResults"]),...K(ee,["investigations"]),...K(Te,["patientsWaitingForVitals","patientsWaitingForConsultation","patientsWaitingForLab","patientsWaitingForDispensation"]),hasEnterResults(){return this.listOrders.some(t=>t.btn&&t.btn.includes("enter_results"))}},props:{propOrders:{default:[]}},data(){return{tableData:[],options:{responsive:!0,select:!1,layout:{topStart:"buttons",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,buttons:[{text:" <b>+ Add other tests </b>",className:"add-test text-white",action:async()=>{await this.openEnterResultModal()}}]},header:["Lab Test","Specimen","Accession Number","Order Date","Result","Action"],iconsContent:g,valueNumericArray:[],obsDatetime:[],graphIcon:wt(["#006401"]),listIcon:_t(["#636363"]),displayGraph:!0,sendToLabModalOpen:!1,orders:[],userRoles:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],listOrders:[],listResults:[],hasPatientsWaitingForLab:!1,labResultsContent:"",listHeaderOrders:"",service:"",openModal:!1,openResultsModal:!1,series:[{name:"",data:[]}]}},setup(){return{checkmark:He,pulseOutline:$e}},async mounted(){await this.updateInvestigationWizard(),await this.setListData(),this.$nextTick(()=>{const t=this.$refs.dataTable.dt;t.columns.adjust().draw(),t.on("click",".result-btn",n=>{const e=n.target.getAttribute("data-id");this.openResultsForm(JSON.parse(e))}),t.on("click",".view-btn",n=>{const e=n.target.getAttribute("data-id");this.viewLabOrder(JSON.parse(e))}),t.on("click",".delete-btn",n=>{const e=n.target.getAttribute("data-id");this.voidLabOrder(JSON.parse(e),n)}),t.on("click",".order-btn",n=>{const e=n.target.getAttribute("data-id");this.saveTest(JSON.parse(e))})}),this.orders=this.propOrders,this.service=new St(this.patient.patientID),this.userRoles=await B.getUserRoles()},watch:{$route:{async handler(){await this.setListData()},deep:!0},patient:{async handler(){await this.setListData()},deep:!0}},methods:{async closeModal(){this.openModal=!1,await this.setListData()},async saveTest(t){const n=[{concept_id:await A.getConceptID(t.name,!0),name:t.name,specimen:t.specimen,reason:"Routine",specimenConcept:await A.getConceptID(t.specimen,!0)}];let s=(await re.buildLabOrders("",n))[0];s.order_date=s.date,s.specimen.name=await A.getConceptName(s.specimen.concept_id),s.tests[0].name=await A.getConceptName(s.tests[0].concept_id),this.patient.labOrders.unsaved.push(s),await Z(this.patient)},async openEnterResultModal(){await Ee(Xt,{class:"lab-results-modal"},!0,{title:"name"}),await this.setListData()},toggleSendToLabModal(){this.sendToLabModalOpen=!this.sendToLabModalOpen},async fetchPatientLabStageData(){const t=await Yt(),n=t?t.code:null;if(n){const e=await yt.getPatientList("LAB",n);await Te().refresh(n),this.patient.patientID&&(this.hasPatientsWaitingForLab=e.some(s=>s.patient_id===this.patient.patientID))}},async updateInvestigationWizard(){var n,e,s,a,l;if(!((n=this.patient)!=null&&n.labOrders)||(this.orders=[...(s=(e=this.patient)==null?void 0:e.labOrders)==null?void 0:s.saved,...(l=(a=this.patient)==null?void 0:a.labOrders)==null?void 0:l.unsaved],!this.orders))return;const t=await this.orders.filter(i=>L.toStandardHisFormat(L.sessionDate())===L.toStandardHisFormat(i.order_date));t.length>0?this.investigations[0].selectedData=t:this.investigations[0].selectedData=""},dismiss(){rt.dismiss()},async voidLabOrder(t,n){var s,a,l;if(await bt("Do you want to delete ".concat(t.tests[0].name," ?"),n)){const i=JSON.parse(JSON.stringify(this.patient));i.labOrders.saved.some(p=>{var m,d;return p.order_date===t.order_date&&((m=p==null?void 0:p.tests[0])==null?void 0:m.name)==((d=t==null?void 0:t.tests[0])==null?void 0:d.name)})?(i.labOrders.saved=this.removeTestByNameAndDate(i.labOrders.saved,t.tests[0].name,t.order_date),(l=(a=(s=i.labOrders)!=null?s:i.labOrders={}).voided)!=null||(a.voided=[]),i.labOrders.voided.push({orderId:t.id,reason:"Mistake entry"})):i.labOrders.unsaved=this.removeTestByNameAndDate(i.labOrders.unsaved,t.tests[0].name,t.date),await Z(i)}await this.setListData()},removeTestByNameAndDate(t,n,e){return t.filter(s=>(s.order_date===e&&(s.tests=s.tests.filter(a=>a.name!==n)),s.tests.length>0))},async openResultsForm(t){let n;B.getUseIndexDBStatus()||B.getModsStatus()?any=await oe("testResultIndicators",{whereClause:{test_type_id:t.concept_id}}):n=await jt.getTestIndicatorsWithID(t.concept_id);const e=[t,{validationStatus:"",data:{rowData:[{colData:[]}]}}];n.forEach(a=>{let l={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:""};if(a.name=="RBS"&&(l={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),a.name=="FBS"&&(l={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),a.name=="MRDT"||a.name=="Tuberculosis program"||a.name=="Vdrl"||a.name=="Hepatitis B"||a.name=="Lam"||a.name=="CrAg"||a.name=="CD4 count"||a.name=="Leukocytes"||a.name=="Protein"||a.name=="Nitrite"||a.name=="Urine Ketones"||a.name=="HIV test"){let i=[];(a.name=="MRDT"||a.name=="Vdrl"||a.name=="Hepatitis B"||a.name=="CrAg"||a.name=="Lam")&&(i=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),a.name=="Tuberculosis program"&&(i=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),a.name=="CD4 count"&&(i=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(a.name=="Leukocytes"||a.name=="Protein"||a.name=="Nitrite"||a.name=="Ketones"||a.name=="Urine Ketones")&&(i=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),a.name=="HIV test"&&(i=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),l={inputHeader:a.name,icon:g.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:i,id:a.concept_id,idName:"district_id"}}e[1].data.rowData[0].colData.push(l)}),ke().setLabResults(e),this.openModal=!0,this.orders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async viewLabOrder(t){this.labResultsContent=t,this.openResultsModal=!0},async setListData(){if(!this.patient.labOrders)return;this.orders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const t=this.generateListItems(this.orders,"order"),n=[["FBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"FBS",specimen:"Blood"}),"'>Order Test</button> ")],["HbA1c","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"HbA1c",specimen:"Blood"}),"'>Order Test</button> ")],["RBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"RBS",specimen:"Blood"}),"'>Order Test</button> ")]],e=n.filter(l=>!t.some(i=>i[0]===l[0])),s=t.filter(l=>n.some(i=>i[0]===l[0])),a=t.filter(l=>!s.some(i=>i[0]===l[0]));this.tableData=[...s,...e,...a],await this.updateInvestigationWizard(),we.use(ot)},generateListItems(t,n){return t.length>0?t.flatMap(e=>e.tests.flatMap(s=>{var p,m,d,O;const a='<button class="btn btn-outline-success btn-sm result-btn" data-id=\''.concat(JSON.stringify(s),"'>Enter Result</button> "),l='<button class="btn btn-outline-secondary btn-sm attach-btn" data-id=\''.concat(JSON.stringify(s),"'>").concat(this.iconsContent.attach2,"</button>"),i='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(s),"'>").concat(this.iconsContent.view2,"</button> ");let S=a+l;((p=s==null?void 0:s.result)==null?void 0:p.length)==1?S=(s==null?void 0:s.result)!=null?((m=s==null?void 0:s.result[0])==null?void 0:m.value_modifier)+((d=s==null?void 0:s.result[0])==null?void 0:d.value):null:((O=s==null?void 0:s.result)==null?void 0:O.length)>1&&(s==null||s.result,S=i);let D="";return e!=null&&e.accession_number?D='<button class="btn btn-outline-secondary btn-sm" data-id=\''.concat(JSON.stringify(e),"'>").concat(this.iconsContent.print2,"</button>"):S="",[[s==null?void 0:s.name,e==null?void 0:e.specimen.name,(e==null?void 0:e.accession_number)||"",L.toStandardHisFormat(e==null?void 0:e.order_date),S,D+'\n                                <button class="btn btn-outline-danger btn-sm delete-btn" data-id=\''.concat(JSON.stringify(e),"'>").concat(this.iconsContent.delete2,"</button>\n                                ")]]})):[]}}}),ma={class:"container"},ga={class:"table-responsive"};function ha(t,n,e,s,a,l){const i=C("DataTable"),S=C("LabViewResultsModal"),D=C("LabModal");return k(),F("div",ma,[f("div",ga,[r(i,{ref:"dataTable",options:t.options,data:t.tableData,class:"display nowrap modern-table",width:"100%"},{default:b(()=>[f("thead",null,[f("tr",null,[(k(!0),F(Ve,null,lt(t.header,p=>(k(),F("th",{key:p},ct(p),1))),128))])])]),_:1},8,["options","data"])]),r(S,{popoverOpen:t.openResultsModal,content:t.labResultsContent,onCloseModal:n[0]||(n[0]=p=>t.openResultsModal=!1)},null,8,["popoverOpen","content"]),r(D,{popoverOpen:t.openModal,onSaved:t.closeModal,onCloseModal:n[1]||(n[1]=p=>t.openModal=!1)},null,8,["popoverOpen","onSaved"])])}const va=ze(pa,[["render",ha],["__scopeId","data-v-dbef2797"]]),fa=te({name:"Menu",mixins:[Zt],components:{IonContent:le,IonHeader:xe,IonItem:Ne,IonList:Ae,IonMenu:Be,IonTitle:Le,IonToolbar:Fe,IonInput:ut,IonPopover:dt,DashBox:Ue,SelectionPopover:Ct,BasicInputField:Tt,BasicForm:Ut,List:Dt,DynamicButton:ce,labOrderResults:va},data(){return{segmentContent:"Lab Investigations",iconsContent:g,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:He,pulseOutline:$e}},computed:{...K(ee,["investigations"]),...K(de,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var t;(t=this.patient)!=null&&t.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(t){this.segmentContent=t},async getTests(){let t;B.getUseIndexDBStatus()&&B.getModsStatus()?t=await oe("testTypes"):t=await re.getTestTypes(),M(this.investigations,"test","multiSelectData",t)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var n;if(!((n=this.patient)!=null&&n.labOrders))return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const t=await this.labOrders.filter(e=>L.toStandardHisFormat(L.sessionDate())===L.toStandardHisFormat(e.order_date));t.length>0?this.investigations[0].selectedData=t:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),ee().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return Ie(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(M(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(M(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){Ie(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(t,n){for(let e of n)for(let s of e.tests)if(s.name===t)return!0;return!1},async saveTest(){await new Qt().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await A.getConceptID(this.inputFields[1].value.name,!0)}]),M(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(t){if(t.inputHeader=="Test"&&this.checkTest(),M(this.investigations,"specimen","alertsErrorMassage",""),t.inputHeader=="Test"&&t.value){let n;B.getUseIndexDBStatus()&&B.getModsStatus()?n=await oe("specimens"):n=await re.getSpecimens("",1e3),this.specimen=await A.getConceptSet(t.value.name,"",{names:n.map(e=>e.name)}),this.specimen.length==1?(M(this.investigations,"specimen","value",this.specimen[0]),M(this.investigations,"specimen","disabled",!0)):(M(this.investigations,"specimen","value",""),M(this.investigations,"specimen","disabled",!1)),M(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(t){return await this.labOrders.filter(n=>n.name.toLowerCase().includes(t.toLowerCase()))},async filterSpecimen(t){var n;return(n=this.specimen[0])!=null&&n.name&&t?await this.specimen.filter(e=>e==null?void 0:e.name.toLowerCase().includes(t.toLowerCase())):[]},setTest(t){this.selectedText=t.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=t.name:this.investigations[0].data.rowData[0].colData[1].value=t.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),ba={class:"background"},ya={key:0},Sa={key:1},_a={key:2},wa={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},Da={key:3},Ta={key:4};function Ca(t,n,e,s,a,l){const i=C("ion-label"),S=C("ion-segment-button"),D=C("ion-segment"),p=C("VisitsHistory"),m=C("labOrderResults");return k(),F("div",ba,[r(D,{value:t.segmentContent,style:{"margin-top":"5px"}},{default:b(()=>[r(S,{value:"Lab Investigations",onClick:n[0]||(n[0]=d=>t.setSegmentContent("Lab Investigations"))},{default:b(()=>[r(i,null,{default:b(()=>n[3]||(n[3]=[Y("Lab Investigations")])),_:1,__:[3]})]),_:1}),r(S,{value:"Radiology Investigation",onClick:n[1]||(n[1]=d=>t.setSegmentContent("Radiology Investigation"))},{default:b(()=>[r(i,null,{default:b(()=>n[4]||(n[4]=[Y("Radiology Investigation")])),_:1,__:[4]})]),_:1}),r(S,{value:"Other Investigation",onClick:n[2]||(n[2]=d=>t.setSegmentContent("Other Investigation"))},{default:b(()=>[r(i,null,{default:b(()=>n[5]||(n[5]=[Y("Other Investigation")])),_:1,__:[5]})]),_:1})]),_:1},8,["value"]),t.segmentContent=="Radiology Investigation"?(k(),F("div",ya,[r(p)])):q("",!0),t.segmentContent=="Other Investigation"?(k(),F("div",Sa)):q("",!0),t.segmentContent=="Lab Investigations"?(k(),F("div",_a,[f("div",wa,[f("span",null,[r(m,{propOrders:t.labOrders},null,8,["propOrders"])])])])):q("",!0),t.segmentContent=="Radiology Investigation"?(k(),F("div",Da)):q("",!0),t.segmentContent=="Other Investigation"?(k(),F("div",Ta)):q("",!0)])}const Oa=ze(fa,[["render",Ca],["__scopeId","data-v-db5a3e37"]]),Ra=()=>{const t=ae(),n=w(""),e=async()=>{n.value=await t.checkHeight()},s=j(()=>[{componentType:"Heading",name:"Height and weight",grid:{s:"3"}},{componentType:"inputField",name:"height",header:"Height",unit:"cm",type:"number",icon:g.height,value:n.value||"",grid:{s:"4.5"},validation:a=>y.vitalsHeight(a),disabled:a=>a["Check height not done"]||n.value},{componentType:"inputField",name:"weight",header:"Weight",unit:"kg",icon:g.weight,type:"number",grid:{s:"4.5"},validation:a=>y.vitalsWeight(a),disabled:a=>a["Check weight not done"]},{grid:{s:"3"}},{componentType:"Alert",condition:async a=>y.vitalsWeight(a.weight)==null&&y.vitalsHeight(a.height)==null?await t.setBMI(a.height,a.weight):!1,grid:{s:"9"}},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check height not done",type:"single",label:"Height not done",value:"",grid:{s:"4.5"},disabled:a=>n.value},{componentType:"checkboxField",name:"Check weight not done",type:"single",label:"Weight not done",grid:{s:"4.5"}},{grid:{s:"3"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"height",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:g.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:a=>!a||a.length===0?"Please select at least one option":null,condition:a=>a["Check height not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Weight",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:g.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:a=>!a||a.length===0?"Please select at least one option":null,condition:a=>a["Check weight not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}]);return{height:n,loadHeight:e,heightWeightFormSection:s}},ka=()=>{const t=ae();return{bloodPressureFormSection:j(()=>[{componentType:"Heading",name:"Blood pressure",grid:{s:"3"}},{componentType:"inputField",name:"Systolic",header:"Systolic Pressure",unit:"mmHg",type:"number",icon:g.systolicPressure,grid:{s:"4.5"},validation:e=>y.vitalsSystolic(e),disabled:e=>e["Check blood pressure not done"]},{componentType:"inputField",name:"Diastolic",header:"Diastolic pressure",unit:"mmHg",icon:g.diastolicPressure,type:"number",grid:{s:"4.5"},validation:e=>y.vitalsDiastolic(e),disabled:e=>e["Check blood pressure not done"]},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>y.vitalsSystolic(e.Systolic)==null&&y.vitalsDiastolic(e.Diastolic)==null?await t.updateBP(e.Systolic,e.Diastolic):!1},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check blood pressure not done",type:"single",label:"Blood pressure not done",value:"",grid:{s:"4.5"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Blood Pressure",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:g.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check blood pressure not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}])}},Ia=()=>{const t=ae();return{temperaturePulseRateForm:j(()=>[{componentType:"Heading",name:"Temperature and rates",grid:{s:"3"}},{componentType:"inputField",name:"Temperature",header:"Temperature",unit:"°C",type:"number",icon:g.temprature,grid:{s:"4.5"},validation:e=>y.vitalsTemperature(e),disabled:e=>e["Check temperature not done"]},{componentType:"inputField",name:"Pulse",header:"Pulse rate",unit:"BMP",icon:g.pulse,type:"number",grid:{s:"4.5"},validation:e=>y.vitalsPulseRate(e),disabled:e=>e["Check pulse rate not done"]},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(y.vitalsTemperature(e.Temperature)==null){const s=t.getTemperatureStatus(e.Temperature);return await t.updateRate("temp",e.Temperature,"°C",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(y.vitalsPulseRate(e.Pulse)==null){const s=t.getPulseRateStatus(e.Pulse);return await t.updateRate("pulse",e.Pulse,"BMP",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check temperature not done",type:"single",label:"Temperature not done",grid:{s:"4.5"}},{componentType:"checkboxField",name:"Check pulse rate not done",type:"single",label:"Pulse not done",grid:{s:"4.5"}},{grid:{s:"3"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Temperature",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:g.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check temperature not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Pulse",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:g.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check pulse rate not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}])}},Pa=()=>{const t=ae();return{respiratoryRateOxygenForm:j(()=>[{grid:{s:"3"}},{componentType:"inputField",name:"Respiratory rate",header:"Respiratory rate",unit:"BMP",icon:g.respiratory,type:"number",grid:{s:"4.5"},validation:e=>y.vitalsRespiratoryRate(e),disabled:e=>e["Check respiratory rate not done"]},{componentType:"inputField",name:"SAO2",header:"Oxygen saturation",unit:"%",icon:g.oxgenStaturation,type:"number",grid:{s:"4.5"},validation:e=>y.vitalsOxygenSaturation(e),disabled:e=>e["Check oxygen saturation not done"]},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(y.vitalsRespiratoryRate(e["Respiratory rate"])==null){const s=t.getRespiratoryRateStatus(e["Respiratory rate"]);return await t.updateRate("respiratory",e["Respiratory rate"],"BMP",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(y.vitalsOxygenSaturation(e.SAO2)==null){const s=t.getOxygenSaturationStatus(e.SAO2);return await t.updateRate("oxygen",e.SAO2,"%",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check respiratory rate not done",type:"single",label:"Respiratory rate not done",grid:{s:"4.5"}},{componentType:"checkboxField",name:"Check oxygen saturation not done",type:"single",label:"Oxygen saturation not done",value:"",grid:{s:"4.5"}},{grid:{s:"3"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Respiratory rate",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:g.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check respiratory rate not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0},{componentType:"multiSelectInputField",header:"Specify Reason",name:"SAO2",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:g.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check oxygen saturation not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}])}},Ma={class:"ion-padding",slot:"content"},Fa=te({__name:"Vitals",setup(t,{expose:n}){const e=Ra(),s=ka(),a=Ia(),l=Pa(),i=w(null),S=async()=>{var _,N,J;if(!i.value){console.error("Form reference is not available");return}const m=i.value.getFormValues(),{newVitals:d,vitalsReasons:O}=await D(m);if(!d.length&&!O.length||i.value.validateForm()){kt("Vitals not saved");return}const T=new It().getObj();(J=(N=(_=T.vitals)!=null?_:T.vitals={}).unsaved)!=null||(N.unsaved=[]),T.vitals.unsaved.push(...d,...O),await Z(T),i.value.resetForm(),Je("Vitals saved successful")},D=async m=>{const d=[],O=[];for(const[T,_]of Object.entries(m))typeof _=="string"&&_||typeof _=="number"?d.push(await Ce.buildValueNumber(T,parseInt(String(_)))):_!=null&&_.name&&O.push(await Ce.buildValueText(T,_.name));return{newVitals:d,vitalsReasons:O}};We(async()=>{await e.loadHeight()});const p=j(()=>[...e.heightWeightFormSection.value,{grid:{s:"3"}},{grid:{s:"9"},componentType:"Dashes"},...s.bloodPressureFormSection.value,{grid:{s:"3"}},{grid:{s:"9"},componentType:"Dashes"},...a.temperaturePulseRateForm.value,...l.respiratoryRateOxygenForm.value]);return n({validateForm:()=>{var m;return(m=i.value)==null?void 0:m.validateForm()},onSubmit:S}),(m,d)=>{const O=C("ion-label"),T=C("ion-item"),_=C("ion-accordion"),N=C("ion-accordion-group"),J=C("ion-row");return k(),F(Ve,null,[r(Ot,{formData:p.value,ref_key:"formRef",ref:i},null,8,["formData"]),r(J,null,{default:b(()=>[r(N,{ref:"accordionGroup",class:"previousView"},{default:b(()=>[r(_,{value:"first","toggle-icon-slot":"start",style:{"border-radius":"10px","background-color":"#fff"}},{default:b(()=>[r(T,{slot:"header",color:"light"},{default:b(()=>[r(O,{class:"previousLabel"},{default:b(()=>d[0]||(d[0]=[Y("Previous measurements")])),_:1,__:[0]})]),_:1}),f("div",Ma,[r(Rt)])]),_:1})]),_:1},512)]),_:1})],64)}}}),La={style:{width:"88vw",margin:"0 auto","margin-top":"10px"}},Ba={class:"back_profile"},pn=te({__name:"ConsultationPlan",setup(t,{expose:n}){const{onTabBeforeChange:e,onChangeCurrentTab:s,currentTabIndex:a}=ca("Consultation Plan"),{printVisitSummary:l}=ua(),i=pt(),S=mt();w([]),w([]),w(!1);const D=w(!0),p=Oe(),m=de(),d=ee(),O=Pt(),T=Mt(),_=ea(),N=Ft();Lt();const J=Bt(),Ge=ie(),qe=At(),{patient:I}=H(m),{vitals:Ke}=H(p),{investigations:je}=H(d),{diagnosis:Xe}=H(O),{substance:Qe}=H(J),{selectedNCDMedicationList:ue}=H(_),{FootScreening:Ye,visualScreening:Ze,cvScreening:et}=H(Ge),{sessionDate:pe}=H(qe),{apiStatus:Aa}=H(Nt()),tt=()=>{i.push("patientProfile")},ne=()=>N.NCDActivities.map(o=>({title:o,icon:""})),h=w(ne()),me=w(null),ge=w(null),he=w(null),ve=w(null),fe=w(null),be=w(null),ye=w(null),W=()=>{var u;if(!h.value||h.value.length===0)return console.log("Tabs not yet initialized"),null;const o=a.value>=0&&a.value<h.value.length?a.value:0;switch((u=h.value[o])==null?void 0:u.title){case"Vital Signs":return"Vitals";case"Risk Assessment":return"RiskAssessment";case"Investigations":return"Investigations";case"Diagnosis":return"DiagnosisComponent";case"Complications Screening":return"ComplicationsScreening";case"Treatment Plan":return"TreatmentPlan";case"Next Appointment":return"NextAppointment";default:if(N.NCDActivities.length>0)switch(N.NCDActivities[0]){case"Vital Signs":return"Vitals";case"Risk Assessment":return"RiskAssessment";case"Investigations":return"Investigations";case"Diagnosis":return"DiagnosisComponent";case"Complications Screening":return"ComplicationsScreening";case"Treatment Plan":return"TreatmentPlan";case"Next Appointment":return"NextAppointment"}return null}},se=()=>{D.value=!1,setTimeout(()=>{a.value=0,D.value=!0},0)},Se=()=>{const o=Oe();o.setVitals(o.getInitialVitals(I.value.ID))},x=async()=>{var u,P;const o=$t(pe.value,"sessionDate","value")||L.sessionDate(),c=Q("vitals");for(let v=0;v<h.value.length;v++){const $=h.value[v];if($.title==="Vital Signs")h.value[v].icon=X(o,c)?"check":"";else if($.title==="Risk Assessment"){const R=Q("substanceAbuse");h.value[v].icon=X(o,R)?"check":""}else if($.title==="Investigations"){const R=(P=(u=I==null?void 0:I.value)==null?void 0:u.labOrders)==null?void 0:P.saved,U=R==null?void 0:R.filter(it=>L.toStandardHisFormat(o)===L.toStandardHisFormat(it.order_date));h.value[v].icon=(U==null?void 0:U.length)>0?"check":""}else if($.title==="Diagnosis"){const R=Q("diagnosis");h.value[v].icon=X(o,R)?"check":""}else if($.title==="Complications Screening"){const R=Q("screening");h.value[v].icon=X(o,R)?"check":""}else $.title==="Treatment Plan"&&(ue.value.length>0?h.value[v].icon=aa()?"check":"":h.value[v].icon="")}},X=(o,c)=>{const u=new Date(o);return u.setHours(0,0,0,0),c.some(P=>{const v=new Date(P.obs_datetime);return v.setHours(0,0,0,0),v.getTime()===u.getTime()})},at=async()=>{var v,$,R,U;const o=[],c=await Me(Ze.value),u=await la(Ye.value),P=await Me(et.value);c.length>0&&o.push({concept_id:await A.getConceptID("Visual acuity",!0),value_text:"visual acuity test",obs_datetime:A.getSessionDate(),child:c}),u.length>0&&o.push({concept_id:await A.getConceptID("Foot check",!0),value_text:"foot screening",obs_datetime:A.getSessionDate(),child:u}),P.length>0&&o.push(...P),o.length>0&&((U=(R=($=(v=I.value).screening)!=null?$:v.screening={}).unsaved)!=null||(R.unsaved=[]),I.value.screening.unsaved.push(...o),Je("Complications saved successfully"))},nt=async()=>{B.getUserID(),I.value.patientID;const o=Vt();if(!Pe.isEmpty(o.selectedMedicalAllergiesList)){const c=Re(),u=o.selectedMedicalAllergiesList.map(P=>({concept_id:985,obs_datetime:B.getSessionDate(),value_coded:P.concept_id,location_id:c.facilityLocation.code}));na(u),o.clearSelectedMedicalAllergiesList()}if(!Pe.isEmpty(T.nonPharmalogicalTherapyAndOtherNotes)){const c=Re(),u=[{concept_id:2688,obs_datetime:B.getSessionDate(),value_text:T.nonPharmalogicalTherapyAndOtherNotes,location_id:c.facilityLocation.code}];await sa(u)}await ia(),await oa().saveNonPharmaTherapyPatientData()},_e=async()=>{const o=[{ref:me,name:"Vitals"},{ref:ge,name:"Risk Assessment"},{ref:he,name:"Investigations"},{ref:ve,name:"Diagnosis"},{ref:fe,name:"Complications Screening"},{ref:be,name:"Treatment Plan"},{ref:ye,name:"Next Appointment"}];for(const c of o)if(c.ref.value&&typeof c.ref.value.onSubmit=="function")try{await c.ref.value.onSubmit()}catch(u){console.error("Error calling ".concat(c.name," onSubmit:"),u)}else console.log("".concat(c.name," component ref not available or no onSubmit method"));await nt(),await at(),await Ht(),await Z(I.value),await st(),i.push("patientProfile")},st=async()=>{await Ee(da,{class:"small-confirm-modal "})!=="dismiss"&&await l()};return We(async()=>{if(N.NCDActivities.length===0){i.push("patientProfile");return}ie().resetScreening(),h.value=ne(),await x(),(a.value===void 0||a.value<0)&&(a.value=0,console.log("Setting initial tab index to 0"))}),V(Ke,async()=>{await x()},{deep:!0}),V(I,async()=>{ie().resetScreening(),await x()},{deep:!0}),V(pe,async()=>{await x()},{deep:!0}),V(je,async()=>{await x()},{deep:!0}),V(Xe,async()=>{await x()},{deep:!0}),V(Qe,async()=>{await x()},{deep:!0}),V(ue,async()=>{await x()},{deep:!0}),V(S,async o=>{se(),Se(),h.value=ne()},{deep:!0}),V(I,async(o,c)=>{o.ID!=c.ID&&(se(),Se())},{deep:!0}),n({saveData:_e,markWizard:x,refreshWizard:se}),(o,c)=>(k(),De(G(vt),null,{default:b(()=>[r(xt),r(G(le),{fullscreen:!0},{default:b(()=>[r(Wt),f("div",La,[D.value?(k(),De(G(gt),{key:0,ref:"wizard","vertical-tabs":"","navigable-tabs":"","scrollable-tabs":"",startIndex:0,doneButton:{text:"Finish",icon:"check",hideText:!1,hideIcon:!1,disabled:!1},"custom-tabs":h.value,beforeChange:G(e),onChange:G(s),"onComplete:wizard":c[1]||(c[1]=u=>_e())},{default:b(()=>[f("div",null,[f("div",Ba,[r(ce,{name:"Back to profile",iconSlot:"start",fill:"clear",icon:G(ht),"font-weight":"600",onClick:c[0]||(c[0]=u=>tt())},null,8,["icon"])])]),E(f("div",null,[r(Fa,{ref_key:"vitalsRef",ref:me},null,512)],512),[[z,W()=="Vitals"]]),E(f("div",null,[r(ra,{ref_key:"riskAssessmentRef",ref:ge},null,512)],512),[[z,W()=="RiskAssessment"]]),E(f("div",null,[r(Oa,{ref_key:"investigationsRef",ref:he},null,512)],512),[[z,W()=="Investigations"]]),E(f("div",null,[r(Et,{ref_key:"diagnosisRef",ref:ve},null,512)],512),[[z,W()=="DiagnosisComponent"]]),E(f("div",null,[r(zt,{ref_key:"complicationsRef",ref:fe},null,512)],512),[[z,W()=="ComplicationsScreening"]]),E(f("div",null,[r(Jt,{ref_key:"treatmentPlanRef",ref:be},null,512)],512),[[z,W()=="TreatmentPlan"]]),E(f("div",null,[r(ta,{ref_key:"nextAppointmentRef",ref:ye},null,512)],512),[[z,W()=="NextAppointment"]])]),_:1},8,["custom-tabs","beforeChange","onChange"])):q("",!0)])]),_:1})]),_:1}))}});export{pn as default};
