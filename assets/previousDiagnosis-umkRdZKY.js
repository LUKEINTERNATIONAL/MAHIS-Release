import{d as c,ar as l,U as p,T as d,as as h,ac as m,G as g,S as u,a9 as _,X as v,a1 as I,a2 as f,E as D,e as b,f as B,k as y,l as H}from"./vendor-BzS-GRGX.js";import{L as k,a as w,b as M}from"./SvgDynamicColor-Q4ht95M8.js";import{H as S,a4 as s,u as A,_ as C}from"./index-xmN8DORW.js";import{l as L}from"./lodash-Dt8AsbQm.js";const x=c({name:"Menu",components:{IonContent:_,IonHeader:u,IonItem:g,IonList:m,IonMenu:h,IonTitle:d,IonToolbar:p,List:k},computed:{...l(A,["patient"])},data(){return{valueNumericArray:[],obsDatetime:[],graphIcon:M(["#006401"]),listIcon:w(["#636363"]),displayGraph:!0,orders:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],list:[],series:[{name:"",data:[]}]}},setup(){return{checkmark:f,pulseOutline:I}},async mounted(){const t=await s.getAll(this.patient.patientID,"Primary diagnosis"),a=await s.getAll(this.patient.patientID,"Secondary diagnosis"),o=await s.getAll(this.patient.patientID,"Attempted/ Differential diagnosis"),e=[...t||[],...a||[],...o||[]],n=L.isEmpty(e)?[]:Promise.all(e.map(async i=>({name:await s.getConceptName(i.value_coded),obs_date:i.obs_datetime})));this.setListData(await n)},methods:{dismiss(){v.dismiss()},handleIcon(){},setActivClass(t){this.activeHeight="",this.activeBMI="",this.activeWeight="",t=="height"?this.activeHeight="_active":t=="weight"?this.activeWeight="_active":t=="BMI"&&(this.activeBMI="_active")},setListData(t){this.list=[],this.list.push({actionBtn:!1,class:"col_background",header:!0,minHeight:"--min-height: 25px;",display:["Date","Diagnosis","Notes"]}),t.forEach(a=>{this.list.push({actionBtn:!1,minHeight:"--min-height: 25px;",class:"col_background",display:[S.toStandardHisFormat(a.obs_date),a.name,""]})})}}}),E={class:"modal_wrapper"};function N(t,a,o,e,n,i){const r=D("list");return B(),b("div",E,[y("div",null,[H(r,{listData:t.list},null,8,["listData"])])])}const W=C(x,[["render",N],["__scopeId","data-v-5665ae64"]]);export{W as p};
