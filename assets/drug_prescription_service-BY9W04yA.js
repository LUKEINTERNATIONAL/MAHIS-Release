import{aW as c,N as s,aY as n,aP as d}from"./index-MiTIbkYg.js";const u=[{label:"ONCE A DAY (OD)",code:"OD",value:1},{label:"TWICE A DAY (BD)",code:"BD",value:2},{label:"THREE TIMES A DAY (TDS)",code:"TDS",value:3},{label:"FOUR TIMES A DAY (QID)",code:"QID",value:4},{label:"FIVE TIMES A DAY (5X/D)",code:"5X/D",value:5},{label:"SIX TIMES A DAY (Q4HRS)",code:"Q4HRS",value:6},{label:"IN THE MORNING (QAM)",code:"QAM",value:1},{label:"ONCE A DAY AT NOON (QNOON)",code:"QNOON",value:1},{label:"IN THE EVENING (QPM)",code:"QPM",value:1},{label:"ONCE A DAY AT NIGHT (QHS)",code:"QHS",value:1},{label:"EVERY OTHER DAY (QOD)",code:"QOD",value:.5},{label:"ONCE A WEEK (QWK)",code:"QWK",value:.14},{label:"ONCE A MONTH",code:"ONCE A MONTH",value:.03},{label:"TWICE A MONTH",code:"TWICE A MONTH",value:.071},{label:"STAT",code:"STAT",value:0},{label:"Unknown",code:"Unknown",value:0}];class D extends c{constructor(e,a){super(e,25,a)}async loadDrugs(e="",a=1,l=10){return(await s.getOPDDrugs({name:e,page:a,page_size:l})).map(t=>({label:t.name,value:t.name,other:t}))}createDrugOrder(e){return n.create({encounter_id:this.encounterID,drug_orders:e})}createDrugOrderForImmunization(e,a){return n.create_for_immunization({encounter_id:this.encounterID,drug_orders:e,program_id:a})}}function E(r){const e=r.toUpperCase();if(u.some(o=>o.label.toUpperCase()===e))return r;const l=u.find(o=>o.code===e);if(l)return l.label}async function A(){return(await d.getConceptSet("Method of drug administration")).filter(e=>e.name!=="Bleeding vaginally")}export{u as D,D as a,A as b,E as g};
