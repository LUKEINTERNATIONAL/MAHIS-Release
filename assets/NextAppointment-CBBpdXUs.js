var xt=Object.defineProperty;var Rt=(e,t,n)=>t in e?xt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var Z=(e,t,n)=>Rt(e,typeof t!="symbol"?t+"":t,n);import{d as J,ao as ie,V as ot,ap as Le,an as it,D as Ie,dr as rt,dy as lt,ak as Ae,G as ge,T as fe,U as Be,ah as ve,S as Me,b8 as Ve,W as Ee,aR as dt,X as Je,E as v,y as ne,f as I,z as l,l as o,k as b,B as T,A as x,e as A,F as ce,L as Oe,a$ as G,cl as ct,r as k,c as re,w as Ce,a as ke,u as B,I as qe,ag as Ft,j as Ht,ar as Ut,n as Vt,cw as Xe,cz as Jt,R as Pe,m as ee,a8 as qt,ab as ut,a9 as zt,aa as Wt,aj as Gt,p as me,aZ as Yt,aY as jt,ay as Kt,aW as Xt,bw as Qt,br as Zt,ae as en,aP as tn}from"./vendor-sxlzK-28.js";import{D as _e,aJ as nn,S as O,m as ue,H as w,aF as le,C as ae,u as z,_ as Y,au as Qe,i as te,bh as he,aG as K,av as an,t as X,aA as Fe,l as sn,b9 as on,ba as rn,bi as ln,n as He,G as pt,U as Ze,j as mt,b8 as dn,B as ht,bg as cn,y as j,aK as gt,ab as xe,bj as un,aM as ft,P as vt,aa as pn,aH as mn,bk as hn,bl as gn,an as fn,O as vn,a3 as ze,aT as se,A as Ne,bm as _n,d as yn,as as Re,v as Dn,at as bn,q as et}from"./index-Bf7yp5gS.js";import{D as Sn}from"./DashBox-Xfo_xAP9.js";import{B as W}from"./BasicForm-C-gyPs8j.js";import{u as Ue,P as _t,L as Cn}from"./lab_order-CWWlrhPV.js";import{S as In}from"./stages-BkjLOvY1.js";import{v as tt}from"./group_validation-oVLP5Ldo.js";import{l as Se}from"./lodash-Dt8AsbQm.js";import{g as Mn,a as yt,D as oe}from"./drug_prescription_service-Sh9KcSfe.js";import{A as On}from"./ncd_appointment_service-DGpnbwOS.js";import{D as kn}from"./DateInputField-BbxX4Mmc.js";import{D as Dt}from"./drug_service-Bjce5idb.js";const wn=J({components:{IonButtons:dt,IonButton:Ee,IonModal:Ve,IonHeader:Me,IonContent:ve,IonToolbar:Be,IonTitle:fe,IonItem:ge,IonList:Ae,IonAvatar:lt,IonImg:rt,IonLabel:Ie,IonPage:it,IonMenu:Le,BasicForm:W,IonFooter:ot,DynamicButton:_e},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{type:Object,default:{}},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},computed:{...ie(z,["patient"]),...ie(Ue,["labResults"])},mounted(){},methods:{dismiss(){Je.dismiss()},async saveResults(){const e=await this.buildResults();this.patient.labOrders.results=[{encounter_id:"",date:w.sessionDate(),measures:e,test_id:this.labResults[0].id}];let t=!1;for(let n=0;n<this.patient.labOrders.unsaved.length;n++)if(this.patient.labOrders.unsaved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.unsaved[n].tests&&this.patient.labOrders.unsaved[n].tests.length>0){this.patient.labOrders.unsaved[n].tests[0].result=e,t=!0;break}if(!t){for(let n=0;n<this.patient.labOrders.saved.length;n++)if(this.patient.labOrders.saved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.saved[n].tests&&this.patient.labOrders.saved[n].tests.length>0){this.patient.labOrders.saved[n].tests[0].result=e;break}}await le(this.patient),ae("Saved successfully"),this.$emit("saved")},async buildResults(){let e=[];return await Promise.all(this.labResults[1].data.rowData[0].colData.map(async t=>{var s;let n;O.getUseIndexDBStatus()||O.getModsStatus()?n=await ue("testResultIndicators",{whereClause:{test_type_id:t.id}}):n=await _t.getTestIndicatorsWithID(t.id),e.push({indicator:{name:(s=n[0])==null?void 0:s.name,concept_id:t.id},value:t.value.name||t.value||"not done",value_modifier:"",value_type:"text"})})),e},async nav(e,t){const n=Ue();t=="not_save"?(await nn(),n.setLabResults(!1)):n.setLabResults(!0),this.dismiss(),this.$router.push(e)}}}),Nn={class:"modal_wrapper"},Ln={class:"center text_12"};function An(e,t,n,s,a,u){const r=v("ion-title"),d=v("ion-button"),p=v("ion-buttons"),h=v("ion-toolbar"),_=v("ion-header"),g=v("basic-form"),D=v("ion-row"),R=v("ion-content"),S=v("DynamicButton"),f=v("ion-footer"),E=v("ion-modal");return I(),ne(E,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[2]||(t[2]=C=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:l(()=>[o(_,null,{default:l(()=>[o(h,null,{default:l(()=>[o(r,null,{default:l(()=>[b("b",null,"Enter lab results for ("+T(e.labResults[0].name)+") test",1)]),_:1}),o(p,{slot:"end"},{default:l(()=>[o(d,{onClick:t[0]||(t[0]=C=>e.$emit("closeModal"))},{default:l(()=>t[3]||(t[3]=[x("Close",-1)])),_:1,__:[3]})]),_:1})]),_:1})]),_:1}),o(R,{class:"ion-padding"},{default:l(()=>[b("div",Nn,[b("div",Ln,[o(D,null,{default:l(()=>[o(g,{contentData:e.labResults},null,8,["contentData"])]),_:1})])])]),_:1}),o(f,{translucent:!0},{default:l(()=>[o(h,null,{default:l(()=>[o(S,{onClick:t[1]||(t[1]=C=>e.saveResults()),name:"Save",fill:"clear",iconSlot:"icon-only",style:{float:"right"}})]),_:1})]),_:1})]),_:1},8,["is-open","keyboard-close"])}const Bn=Y(wn,[["render",An],["__scopeId","data-v-c688c775"]]),En=J({components:{IonButtons:dt,IonButton:Ee,IonModal:Ve,IonHeader:Me,IonContent:ve,IonToolbar:Be,IonTitle:fe,IonItem:ge,IonList:Ae,IonAvatar:lt,IonImg:rt,IonLabel:Ie,IonPage:it,IonMenu:Le,BasicForm:W,IonFooter:ot,DynamicButton:_e},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{default:[]},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},methods:{dismiss(){Je.dismiss()},nav(e,t){this.dismiss(),this.$router.push(e)}}}),Pn={class:"modal_wrapper"},$n={class:"center text_12"};function Tn(e,t,n,s,a,u){const r=v("ion-title"),d=v("ion-button"),p=v("ion-buttons"),h=v("ion-toolbar"),_=v("ion-header"),g=v("ion-col"),D=v("ion-row"),R=v("ion-content"),S=v("ion-modal");return I(),ne(S,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[1]||(t[1]=f=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:l(()=>[o(_,null,{default:l(()=>[o(h,null,{default:l(()=>[o(r,null,{default:l(()=>[b("b",null,"Lab results for ("+T(e.content.name)+") test",1)]),_:1}),o(p,{slot:"end"},{default:l(()=>[o(d,{onClick:t[0]||(t[0]=f=>e.$emit("closeModal"))},{default:l(()=>t[2]||(t[2]=[x("Close",-1)])),_:1,__:[2]})]),_:1})]),_:1})]),_:1}),o(R,{class:"ion-padding"},{default:l(()=>[b("div",Pn,[b("div",$n,[o(D,null,{default:l(()=>[(I(!0),A(ce,null,Oe(e.content.result,(f,E)=>(I(),ne(g,{size:"4",key:E},{default:l(()=>[o(D,null,{default:l(()=>[o(g,{size:"8"},{default:l(()=>[x(T(f.indicator.name),1)]),_:2},1024),o(g,{class:"bold",size:"0.5"},{default:l(()=>t[3]||(t[3]=[x(":",-1)])),_:1,__:[3]}),o(g,{class:"bold",size:"2"},{default:l(()=>[x(T(f.value),1)]),_:2},1024)]),_:2},1024)]),_:2},1024))),128))]),_:1})])])]),_:1})]),_:1},8,["is-open","keyboard-close"])}const xn=Y(En,[["render",Tn],["__scopeId","data-v-327a3d6c"]]),Rn=J({__name:"AddLabTestModal",setup(e){const t=z(),{patient:n}=G(t);ct();const s=te,a=k(""),u=k(""),r=k(""),d=k(""),p=k(null),h=re(()=>[{componentType:"multiSelectInputField",name:"test",header:"Test",options:d.value,grid:{s:"6"},icon:te.search,validation:Qe.required,onChange:S=>{a.value=S.name}},{componentType:"multiSelectInputField",name:"specimen",header:"Specimen",grid:{s:"6"},icon:te.search,validation:Qe.required,value:r.value.length==1?r.value[0]:"",options:r.value.length>1?r.value:[]}]);Ce(a,async S=>{if(S)try{r.value=await _(S)}catch(f){r.value=[]}else r.value=[]});const _=async S=>{let f;return O.getUseIndexDBStatus()||O.getModsStatus()?f=await ue("specimens"):f=await he.getSpecimens("",1e3),await K.getConceptSet(S,"",{names:f.map(C=>C.name)})};Ce(n,async()=>{u.value=[...n.value.labOrders.saved,...n.value.labOrders.unsaved]},{deep:!0});const g=()=>{Je.dismiss()},D=async()=>O.getUseIndexDBStatus()||O.getModsStatus()?await ue("testTypes"):await he.getTestTypes(),R=async()=>{var M,L,H,q,U,V;if(p.value.validateForm()){X("Test not saved");return}if(!p.value){console.error("Form reference is not available");return}const S=p.value.getFormValues(),f=[{concept_id:S.test.concept_id,name:S.test.name,specimen:S.specimen.name,reason:"Routine",specimenConcept:await K.getConceptID(S.specimen.name,!0)}];let C=(await he.buildLabOrders("",f))[0];C.order_date=C.date,C.specimen.name=S.specimen.name,C.tests[0].name=S.test.name;const c=JSON.parse(JSON.stringify(n.value));(H=(L=(M=c.labOrders)!=null?M:c.labOrders={}).unsaved)!=null||(L.unsaved=[]),(V=(U=(q=c.labOrders)!=null?q:c.labOrders={}).saved)!=null||(U.saved=[]),c.labOrders.unsaved.push(C),await le(c),u.value=[...c.labOrders.saved,...c.labOrders.unsaved],g()};return ke(async()=>{d.value=await D()}),(S,f)=>{const E=v("ion-icon"),C=v("ion-col"),c=v("ion-row"),M=v("ion-footer");return I(),A(ce,null,[o(B(Me),{style:{display:"flex","justify-content":"space-between"}},{default:l(()=>[o(B(fe),{class:"modalTitle"},{default:l(()=>f[2]||(f[2]=[x("Add Lab Test",-1)])),_:1,__:[2]}),o(E,{onClick:f[0]||(f[0]=L=>g()),style:{"padding-top":"10px","padding-right":"10px"},icon:B(s).cancel},null,8,["icon"])]),_:1}),o(B(ve),{fullscreen:!0,class:"ion-padding",style:{"--background":"#fff"}},{default:l(()=>[o(an,{formData:h.value,ref_key:"formRef",ref:p},null,8,["formData"])]),_:1}),o(M,{collapse:"fade",class:"ion-no-border"},{default:l(()=>[o(c,null,{default:l(()=>[o(C,null,{default:l(()=>[o(_e,{onClick:f[1]||(f[1]=L=>R()),name:"Save",fill:"solid",style:{float:"right",margin:"2%",width:"130px"}})]),_:1})]),_:1})]),_:1})],64)}}}),Fn=Y(Rn,[["__scopeId","data-v-3e17251e"]]),Hn=J({name:"CheckInConfirmationModal",components:{IonModal:Ve,IonTitle:fe,IonButton:Ee,IonContent:ve,IonIcon:qe,DynamicButton:_e},props:{isOpen:{type:Boolean,required:!0,default:!1},closeModalFunc:{type:Function,required:!0},onYes:{type:Function,required:!0},onNo:{type:Function,required:!0},title:{type:String,required:!0}},methods:{closeCircleOutline(){return Ft},closeModal(){this.closeModalFunc()}}}),Un={class:"modal-header"},Vn={class:"modal-body"},Jn={class:"modal-footer"};function qn(e,t,n,s,a,u){const r=v("ion-title"),d=v("ion-icon"),p=v("ion-button"),h=v("DynamicButton"),_=v("ion-content"),g=v("ion-modal");return I(),ne(g,{"is-open":e.isOpen,"show-backdrop":!0,onDidDismiss:e.closeModal},{default:l(()=>[o(_,{class:"modal-wrapper"},{default:l(()=>[b("div",Un,[o(r,{class:"modal-title"},{default:l(()=>[x(T(e.title),1)]),_:1}),o(p,{fill:"clear",class:"close-btn",onClick:e.closeModal},{default:l(()=>[o(d,{icon:e.closeCircleOutline()},null,8,["icon"])]),_:1},8,["onClick"])]),b("div",Vn,[Ht(e.$slots,"default",{},()=>[t[0]||(t[0]=x(" Sending the patient to the lab will pause this consultation. You'll return to the waiting list while waiting for lab results this patient. ",-1))],!0)]),b("div",Jn,[o(p,{fill:"outline",color:"danger",class:"action-btn cancel-btn",onClick:e.onNo},{default:l(()=>t[1]||(t[1]=[x(" Cancel ",-1)])),_:1,__:[1]},8,["onClick"]),o(h,{name:"Confirm",color:"success",class:"action-btn confirm-btn",fill:"solid",onClick:e.onYes},null,8,["onClick"])])]),_:3})]),_:3},8,["is-open","onDidDismiss"])}const zn=Y(Hn,[["render",qn],["__scopeId","data-v-d754e58e"]]),Wn={class:"container"},Gn={class:"table-responsive"},Yn=J({__name:"LabOrdersList",props:{propOrders:{default:()=>[]}},setup(e){const t=e,n=Ut(),s=ct(),a=z(),u=Ue(),r=Fe(),d=sn(),{patient:p}=G(a),{labResults:h}=G(u),{investigations:_}=G(r),{patientsWaitingForVitals:g,patientsWaitingForConsultation:D,patientsWaitingForLab:R,patientsWaitingForDispensation:S}=G(d),f=k(),E=k([]),C=k(["Lab Test","Specimen","Accession Number","Order Date","Result","Action"]);k(!0);const c=k(!1),M=k(!1),L=k([]),H=k([]),q=k([]);k([]),k(!1);const U=k(""),V=k(!1),$e=k(!1),It=k(""),we=te;on(["#006401"]),rn(["#636363"]);const We=k({responsive:!0,select:!1,layout:{topStart:"buttons",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,buttons:[{text:" <b>+ Add other tests </b>",className:"add-test text-white",action:async()=>{await Lt()}},{text:" <b>Send to Lab </b>",className:"send-lab text-white",attr:{id:"send-to-lab-btn"},action:async()=>{await At()}}]});re(()=>q.value.some(m=>m.btn&&m.btn.includes("enter_results")));const Mt=async()=>{V.value=!1,await pe()},Ot=()=>{const m=document.getElementById("send-to-lab-btn");m&&(m.style.display="none")},kt=()=>{const m=document.getElementById("send-to-lab-btn");m&&(m.style.display="inline")},wt=()=>{Ze.getProgramID()==14&&!Ze.isLabTechnician()&&c.value?kt():Ot()},Nt=async m=>{const N=[{concept_id:await K.getConceptID(m.name,!0),name:m.name,specimen:m.specimen,reason:"Routine",specimenConcept:await K.getConceptID(m.specimen,!0)}];let i=(await he.buildLabOrders("",N))[0];i.order_date=i.date,i.specimen.name=await K.getConceptName(i.specimen.concept_id),i.tests[0].name=await K.getConceptName(i.tests[0].concept_id),p.value.labOrders.unsaved.push(i),await le(p.value)},Lt=async()=>{await mt(Fn,{class:"lab-results-modal"},!0,{title:"name"}),await pe()},At=async()=>{M.value=!0},Bt=async()=>{try{const m=String(localStorage.getItem("locationID"));if(!m){He("Location not found");return}await In.movePatientToNextStage(p.value.patientID,"CONSULTATION","LAB",m,p.value.visitID),await d.refresh(m),M.value=!1,await n.push("home"),ae("The patient successfully sent to the lab. You may now attend to other patients.")}catch(m){console.error("Error sending to lab:",m),He("Failed to send patient to lab")}finally{M.value=!1}},Ge=()=>{M.value=!1},Ye=async()=>{var N,y,i,F,P;if(!((N=p.value)!=null&&N.labOrders)||(L.value=[...(i=(y=p.value)==null?void 0:y.labOrders)==null?void 0:i.saved,...(P=(F=p.value)==null?void 0:F.labOrders)==null?void 0:P.unsaved],!L.value))return;const m=await L.value.filter($=>w.toStandardHisFormat(w.sessionDate())===w.toStandardHisFormat($.order_date));m.length>0?_.value[0].selectedData=m:_.value[0].selectedData=""},Et=async(m,N)=>{var i,F,P;if(await pt("Do you want to delete ".concat(m.tests[0].name," ?"),N)){const $=JSON.parse(JSON.stringify(p.value));$.labOrders.saved.some(de=>{var De,be;return de.order_date===m.order_date&&((De=de==null?void 0:de.tests[0])==null?void 0:De.name)==((be=m==null?void 0:m.tests[0])==null?void 0:be.name)})?($.labOrders.saved=je($.labOrders.saved,m.tests[0].name,m.order_date),(P=(F=(i=$.labOrders)!=null?i:$.labOrders={}).voided)!=null||(F.voided=[]),$.labOrders.voided.push({orderId:m.id,reason:"Mistake entry"})):$.labOrders.unsaved=je($.labOrders.unsaved,m.tests[0].name,m.date),await le($)}await pe()},je=(m,N,y)=>m.filter(i=>(i.order_date===y&&(i.tests=i.tests.filter(F=>F.name!==N)),i.tests.length>0)),Pt=async m=>{let N;O.getUseIndexDBStatus()||O.getModsStatus()?N=await ue("testResultIndicators",{whereClause:{test_type_id:m.concept_id}}):N=await _t.getTestIndicatorsWithID(m.concept_id);const y=[m,{validationStatus:"",data:{rowData:[{colData:[]}]}}];N.forEach(i=>{let F={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:""};if(i.name=="RBS"&&(F={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),i.name=="FBS"&&(F={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),i.name=="MRDT"||i.name=="Tuberculosis program"||i.name=="Vdrl"||i.name=="Hepatitis B"||i.name=="Lam"||i.name=="CrAg"||i.name=="CD4 count"||i.name=="Leukocytes"||i.name=="Protein"||i.name=="Nitrite"||i.name=="Urine Ketones"||i.name=="HIV test"){let P=[];(i.name=="MRDT"||i.name=="Vdrl"||i.name=="Hepatitis B"||i.name=="CrAg"||i.name=="Lam")&&(P=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),i.name=="Tuberculosis program"&&(P=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),i.name=="CD4 count"&&(P=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(i.name=="Leukocytes"||i.name=="Protein"||i.name=="Nitrite"||i.name=="Ketones"||i.name=="Urine Ketones")&&(P=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),i.name=="HIV test"&&(P=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),F={inputHeader:i.name,icon:te.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:P,id:i.concept_id,idName:"district_id"}}y[1].data.rowData[0].colData.push(F)}),u.setLabResults(y),V.value=!0,L.value=[...p.value.labOrders.saved,...p.value.labOrders.unsaved]},$t=async m=>{U.value=m,$e.value=!0},pe=async()=>{if(!p.value.labOrders)return;L.value=[...p.value.labOrders.saved,...p.value.labOrders.unsaved];const m=Tt(L.value),N=O.getProgramID()==32?[["FBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"FBS",specimen:"Blood"}),"'>Order Test</button> ")],["HbA1c","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"HbA1c",specimen:"Blood"}),"'>Order Test</button> ")],["RBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"RBS",specimen:"Blood"}),"'>Order Test</button> ")]]:[],y=N.filter(P=>!m.some($=>$[0]===P[0])),i=m.filter(P=>N.some($=>$[0]===P[0])),F=m.filter(P=>!i.some($=>$[0]===P[0]));E.value=[...i,...y,...F],wt(),await Ye(),Xe.use(Jt)},Tt=(m,N)=>(c.value=!1,m.length>0?m.flatMap(y=>y.tests.flatMap(i=>{var de,De,be,Ke;const F='<button class="btn btn-outline-success btn-sm result-btn" data-id=\''.concat(JSON.stringify(i),"'>Enter Result</button> "),P='<button class="btn btn-outline-secondary btn-sm attach-btn" data-id=\''.concat(JSON.stringify(i),"'>").concat(we.attach2,"</button>"),$='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(i),"'>").concat(we.view2,"</button> ");let ye=F+P;((de=i==null?void 0:i.result)==null?void 0:de.length)==1?ye=(i==null?void 0:i.result)!=null?((De=i==null?void 0:i.result[0])==null?void 0:De.value_modifier)+((be=i==null?void 0:i.result[0])==null?void 0:be.value):null:((Ke=i==null?void 0:i.result)==null?void 0:Ke.length)>1?(i==null||i.result,ye=$):y!=null&&y.accession_number&&(c.value=!0);let Te="";return y!=null&&y.accession_number?Te='<button class="btn btn-outline-secondary btn-sm" data-id=\''.concat(JSON.stringify(y),"'>").concat(we.print2,"</button>"):ye="",[[i==null?void 0:i.name,y==null?void 0:y.specimen.name,(y==null?void 0:y.accession_number)||"",w.toStandardHisFormat(y==null?void 0:y.order_date),ye,Te+'\n                        <button class="btn btn-outline-danger btn-sm delete-btn" data-id=\''.concat(JSON.stringify(y),"'>").concat(we.delete2,"</button>\n                        ")]]})):[]);return ke(async()=>{O.getProgramID()==14&&We.value.buttons.push(),await Ye(),await pe(),Vt(()=>{const m=f.value.dt;m.columns.adjust().draw(),m.on("click",".result-btn",N=>{const y=N.target.getAttribute("data-id");Pt(JSON.parse(y))}),m.on("click",".view-btn",N=>{const y=N.target.getAttribute("data-id");$t(JSON.parse(y))}),m.on("click",".delete-btn",N=>{const y=N.target.getAttribute("data-id");Et(JSON.parse(y),N)}),m.on("click",".order-btn",N=>{const y=N.target.getAttribute("data-id");Nt(JSON.parse(y))})}),L.value=t.propOrders,It.value=new ln(p.value.patientID),H.value=await O.getUserRoles()}),Ce(()=>s,async()=>{await pe()},{deep:!0}),Ce(()=>p.value,async()=>{await pe()},{deep:!0}),(m,N)=>(I(),A("div",Wn,[b("div",Gn,[o(B(Xe),{ref_key:"dataTable",ref:f,options:We.value,data:E.value,class:"display nowrap modern-table",width:"100%"},{default:l(()=>[b("thead",null,[b("tr",null,[(I(!0),A(ce,null,Oe(C.value,y=>(I(),A("th",{key:y},T(y),1))),128))])])]),_:1},8,["options","data"])]),o(xn,{popoverOpen:$e.value,content:U.value,onCloseModal:N[0]||(N[0]=y=>$e.value=!1)},null,8,["popoverOpen","content"]),o(Bn,{popoverOpen:V.value,onSaved:Mt,onCloseModal:N[1]||(N[1]=y=>V.value=!1)},null,8,["popoverOpen"]),o(zn,{isOpen:M.value,title:"Send Patient to Lab",closeModalFunc:Ge,onYes:Bt,onNo:Ge},null,8,["isOpen"])]))}}),jn=Y(Yn,[["__scopeId","data-v-73017635"]]),Kn=J({data:()=>({userRole:"",ready:!1,userRoleSettings:{}}),watch:{$route:{async handler(e){this.userRole=O.getUserRoles();const t=O.getProgramID(),n=O.getProgramName();this.userRole=="Lab"&&t==14&&(this.userRoleSettings={url:"home",btnName:"Back to home",stepperTitle:"Laboratory"}),t==14&&this.userRole!="Lab"&&(this.userRoleSettings={url:"home",btnName:"Go to waiting list",stepperTitle:"Consultation Plan"}),t==12&&(this.userRoleSettings={url:"contact",btnName:"Back"}),n=="LABOUR AND DELIVERY PROGRAM"&&(this.userRoleSettings={url:"labour/labourHome",btnName:"Back to home"}),n=="PNC PROGRAM"&&(this.userRoleSettings={url:"pnc/home",btnName:"Back to home"})},immediate:!0,deep:!0}}}),nt=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Skull",value:"Skull",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mastoid",value:"Mastoid",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"ParaSinuses",value:"ParaSinuses",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Optic Foramen",value:"PVD",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Orbits",value:"Orbits",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Nasal Bone",value:"Nasal Bone",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mandible",value:"Mandible",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TMJs",value:"TMJs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Zygomatic",value:"Zygomatic",checked:!1}]}}],Xn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Neck",value:"Neck",checked:!1}]}}],Qn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Chest",value:"Chest",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Heart",value:"Heart",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sternum",value:"Sternum",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ribs",value:"Ribs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SCJ",value:"SCJ",checked:!1}]}}],Zn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Abdomen",value:"Abdomen",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"IVP",value:"IVP",checked:!1}]}}],ea=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Clavicle",value:"Clavicle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Shoulder",value:"Shoulder",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Scapula",value:"Scapula",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Humerus",value:"Humerus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Elbow",value:"Elbow",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Forearm",value:"Forearm",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Wrist",value:"Wrist",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hand",value:"Hand",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Phalanges",value:"Phalanges",checked:!1}]}}],ta=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"CSpine",value:"CSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TSpine",value:"TSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"LSpine",value:"LSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SSpine",value:"SSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Coccyx",value:"Coccyx",checked:!1}]}}],na=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Pelvis",value:"Pelvis",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sacroillac Joints",value:"Sacroillac Joints",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hip",value:"Hip",checked:!1}]}}],aa=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Femur",value:"Femur",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Knee",value:"Knee",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Patella",value:"Patella",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Leg",value:"Leg",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ankle",value:"Ankle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Calcaneus",value:"Calcaneus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Foot",value:"Foot",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Toe",value:"Toe",checked:!1}]}}],sa=Pe("RadiologyStore",{state:()=>({head:[...nt],neck:[...Xn],chest:[...Qn],abdomen:[...Zn],upper_extremity:[...ea],spine:[...ta],pelvis:[...na],lower_extremity:[...aa]}),actions:{setOPDDiagnosis(e){this.head=e},getInitial(){return[...Se.cloneDeep(nt)]}}}),oa=["innerHTML"],ia={class:"scrollable-container"},ra={key:0,class:"form-section"},la={key:1,class:"form-section"},da={key:2,class:"form-section"},ca={key:3,class:"form-section"},ua={key:4,class:"form-section"},pa={key:5,class:"form-section"},ma={key:6,class:"form-section"},ha={key:7,class:"form-section"},ga=J({__name:"RadiologyInvestigation",setup(e){const t=sa(),{head:n,neck:s,chest:a,abdomen:u,upper_extremity:r,spine:d,pelvis:p,lower_extremity:h}=G(t),_=k(te),g=k([]),D=(S,f,E)=>{document.querySelectorAll("#".concat(S," path")).forEach(c=>{c.classList.toggle("white-fill")}),document.querySelectorAll("#".concat(f," line")).forEach(c=>{c.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(f," rect")).forEach(c=>{c.classList.toggle("bright-green-fill"),c.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(f," path")).forEach(c=>{c.classList.toggle("dark-green-fill")}),document.querySelectorAll("#".concat(f," circle")).forEach(c=>{c.classList.toggle("bright-green-fill")});const C=g.value.findIndex(c=>c.id===E);C>=0?g.value.splice(C,1):g.value.unshift({id:E,active:!0})},R=()=>{const S=document.getElementById("SPINE");S.style.display==="none"||S.style.display==""?S.style.display="block":S.style.display="none",D("SPINE","SPINE_LABEL-2","spine")};return ke(()=>{const S=document.getElementById("HEAD");S&&S.addEventListener("click",()=>{D("HEAD","LABEL-6","head")});const f=document.getElementById("NECK");f&&f.addEventListener("click",()=>{D("NECK","LABEL-5","neck")});const E=document.getElementById("CHEST");E&&E.addEventListener("click",()=>{D("CHEST","LABEL-4","chest")});const C=document.getElementById("ABDOMEN_LABEL");C&&C.addEventListener("click",()=>{const V=document.getElementById("ABDOMEN-2");V.style.display==="none"||V.style.display==""?V.style.display="block":V.style.display="none",D("ABDOMEN","ABDOMEN_LABEL-2","abdomen")});const c=document.getElementById("UPPER_EXTRMITY");c&&c.addEventListener("click",()=>{D("UPPER_EXTRMITY","LABEL-3","upper_extremity")});const M=document.getElementById("SPINE"),L=document.getElementById("SPINE_LABEL"),H=document.getElementById("LOWER_SPINE_INACTIVE");M&&M.addEventListener("click",()=>{R()}),L&&L.addEventListener("click",()=>{R()}),H&&H.addEventListener("click",()=>{R()});const q=document.getElementById("PELVIS");q&&q.addEventListener("click",()=>{D("PELVIS","LABEL-2","pelvis")});const U=document.getElementById("LOWER_EXTREMITY");U&&U.addEventListener("click",()=>{D("LOWER_EXTREMITY","LABEL","lower_extremity")})}),(S,f)=>{const E=v("ion-col"),C=v("ion-row");return I(),ne(C,null,{default:l(()=>[o(E,{size:"7"},{default:l(()=>[b("div",{innerHTML:_.value.full_body_sk},null,8,oa)]),_:1}),o(E,{size:"5",class:"form-column"},{default:l(()=>[b("div",ia,[(I(!0),A(ce,null,Oe(g.value,c=>(I(),A(ce,null,[c.id==="head"?(I(),A("div",ra,[f[0]||(f[0]=b("h6",null,"Body Part: Head",-1)),o(W,{contentData:B(n)},null,8,["contentData"])])):c.id==="neck"?(I(),A("div",la,[f[1]||(f[1]=b("h6",null,"Body Part: Neck",-1)),o(W,{contentData:B(s)},null,8,["contentData"])])):c.id==="chest"?(I(),A("div",da,[f[2]||(f[2]=b("h6",null,"Body Part: Chest",-1)),o(W,{contentData:B(a)},null,8,["contentData"])])):c.id==="abdomen"?(I(),A("div",ca,[f[3]||(f[3]=b("h6",null,"Body Part: Abdomen",-1)),o(W,{contentData:B(u)},null,8,["contentData"])])):c.id==="upper_extremity"?(I(),A("div",ua,[f[4]||(f[4]=b("h6",null,"Body Part: Upper Extremity",-1)),o(W,{contentData:B(r)},null,8,["contentData"])])):c.id==="spine"?(I(),A("div",pa,[f[5]||(f[5]=b("h6",null,"Body Part: Spine",-1)),o(W,{contentData:B(d)},null,8,["contentData"])])):c.id==="pelvis"?(I(),A("div",ma,[f[6]||(f[6]=b("h6",null,"Body Part: Pelvis",-1)),o(W,{contentData:B(p)},null,8,["contentData"])])):c.id==="lower_extremity"?(I(),A("div",ha,[f[7]||(f[7]=b("h6",null,"Body Part: Lower Extremity",-1)),o(W,{contentData:B(h)},null,8,["contentData"])])):ee("",!0)],64))),256))])]),_:1})]),_:1})}}}),fa=Y(ga,[["__scopeId","data-v-4e8419f9"]]),va=J({name:"Menu",mixins:[Kn],components:{IonContent:ve,IonHeader:Me,IonItem:ge,IonList:Ae,IonMenu:Le,IonTitle:fe,IonToolbar:Be,IonInput:ut,IonPopover:qt,DashBox:Sn,SelectionPopover:cn,BasicInputField:ht,BasicForm:W,List:dn,DynamicButton:_e,LabOrdersList:jn,RadiologyInvestigation:fa},data(){return{segmentContent:"Lab Investigations",iconsContent:te,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:Wt,pulseOutline:zt}},computed:{...ie(Fe,["investigations"]),...ie(z,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var e;(e=this.patient)!=null&&e.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(e){this.segmentContent=e},async getTests(){let e;O.getUseIndexDBStatus()&&O.getModsStatus()?e=await ue("testTypes"):e=await he.getTestTypes(),j(this.investigations,"test","multiSelectData",e)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var t;if(!((t=this.patient)!=null&&t.labOrders))return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=await this.labOrders.filter(n=>w.toStandardHisFormat(w.sessionDate())===w.toStandardHisFormat(n.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),Fe().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return tt(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(j(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(j(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){tt(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(e,t){for(let n of t)for(let s of n.tests)if(s.name===e)return!0;return!1},async saveTest(){await new Cn().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await K.getConceptID(this.inputFields[1].value.name,!0)}]),j(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(e){if(e.inputHeader=="Test"&&this.checkTest(),j(this.investigations,"specimen","alertsErrorMassage",""),e.inputHeader=="Test"&&e.value){let t;O.getUseIndexDBStatus()&&O.getModsStatus()?t=await ue("specimens"):t=await he.getSpecimens("",1e3),this.specimen=await K.getConceptSet(e.value.name,"",{names:t.map(n=>n.name)}),this.specimen.length==1?(j(this.investigations,"specimen","value",this.specimen[0]),j(this.investigations,"specimen","disabled",!0)):(j(this.investigations,"specimen","value",""),j(this.investigations,"specimen","disabled",!1)),j(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(e){return await this.labOrders.filter(t=>t.name.toLowerCase().includes(e.toLowerCase()))},async filterSpecimen(e){var t;return(t=this.specimen[0])!=null&&t.name&&e?await this.specimen.filter(n=>n==null?void 0:n.name.toLowerCase().includes(e.toLowerCase())):[]},setTest(e){this.selectedText=e.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=e.name:this.investigations[0].data.rowData[0].colData[1].value=e.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),_a={class:"background"},ya={key:0},Da={key:1},ba={key:2},Sa={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},Ca={key:3},Ia={class:"ion-padding",slot:"content"},Ma={key:4};function Oa(e,t,n,s,a,u){const r=v("ion-label"),d=v("ion-segment-button"),p=v("ion-segment"),h=v("VisitsHistory"),_=v("LabOrdersList"),g=v("RadiologyInvestigation");return I(),A("div",_a,[o(p,{value:e.segmentContent,style:{"margin-top":"5px"}},{default:l(()=>[o(d,{value:"Lab Investigations",onClick:t[0]||(t[0]=D=>e.setSegmentContent("Lab Investigations"))},{default:l(()=>[o(r,null,{default:l(()=>t[3]||(t[3]=[x("Lab Investigations",-1)])),_:1,__:[3]})]),_:1}),o(d,{value:"Radiology Investigation",onClick:t[1]||(t[1]=D=>e.setSegmentContent("Radiology Investigation"))},{default:l(()=>[o(r,null,{default:l(()=>t[4]||(t[4]=[x("Radiology Investigation",-1)])),_:1,__:[4]})]),_:1}),o(d,{value:"Other Investigation",onClick:t[2]||(t[2]=D=>e.setSegmentContent("Other Investigation"))},{default:l(()=>[o(r,null,{default:l(()=>t[5]||(t[5]=[x("Other Investigation",-1)])),_:1,__:[5]})]),_:1})]),_:1},8,["value"]),e.segmentContent=="Radiology Investigation"?(I(),A("div",ya,[o(h)])):ee("",!0),e.segmentContent=="Other Investigation"?(I(),A("div",Da)):ee("",!0),e.segmentContent=="Lab Investigations"?(I(),A("div",ba,[b("div",Sa,[b("span",null,[o(_,{propOrders:e.labOrders},null,8,["propOrders"])])])])):ee("",!0),e.segmentContent=="Radiology Investigation"?(I(),A("div",Ca,[b("div",Ia,[o(g)])])):ee("",!0),e.segmentContent=="Other Investigation"?(I(),A("div",Ma)):ee("",!0)])}const Os=Y(va,[["render",Oa],["__scopeId","data-v-c2f65a77"]]),bt=(e,t,n,s={})=>({drug_id:e,name:t,category:n,...s}),ka=Pe("OtherNCDMedicationsStore",{state:()=>({otherNCDMedications:[],selectedOtherNCDMedicationList:[]}),actions:{setSelectedNCDMedicationList(e){this.selectedOtherNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedOtherNCDMedicationList},addSearchedDrug(e){const t=bt(e.drug_id,e.name,"Other",e);if(t.units=e.units,!this.otherNCDMedications.some(s=>s.drug_id===t.drug_id)){this.otherNCDMedications.unshift(t);const s={dosage:{morning:null,afternoon:null,evening:null},duration:null,...t};this.setSelectedNCDMedicationList(s)}},clearOtherNCDMedications(){this.otherNCDMedications=[],this.selectedOtherNCDMedicationList=[]}},persist:!0}),Q=Pe("NCDmedicationsStore",{state:()=>({medications:[],filteredMedications:[],selectedNCDMedicationList:[],frequency_selections:k({}),currentPatientID:""}),actions:{setMedications(e){this.medications=e,this.filteredMedications=e},setFilteredMedications(e){this.filteredMedications=e},initMedications(){},setSelectedNCDMedicationList(e){this.selectedNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedNCDMedicationList},clearMedicationDataStores(){this.medications=[],this.filteredMedications=[],this.selectedNCDMedicationList=[],this.frequency_selections=[]},setCurrentPatientID(e){this.currentPatientID=e}},persist:!0});function ks(){try{const e=Q(),t=ka();e.medications=[...t.otherNCDMedications,...e.medications],e.medications=e.medications.reduce((n,s)=>(n.some(a=>a.drug_id===s.drug_id)||n.push(s),n),[]),e.selectedNCDMedicationList=[...t.selectedOtherNCDMedicationList,...e.selectedNCDMedicationList],e.filteredMedications=e.medications,ae("Medication added successfully")}catch(e){}}const wa={name:"DiabetesMedication",ids:[337,336,280,410,729,263,812,265,264,240,266,726,728,223]},at={name:"AntiHypertensivesMedication",ids:[]},Na={ids:[274,168,648,289,286,164,287,288,672,257,1233,671]},La={ids:[559,1236,1234,558,1235,1211,276,277,278,279]},Aa={ids:[556,653,557,652,943,1238,1240,1237,942,1239,946,1503,944,1504,945,1505]},Ba={ids:[116,85,117,1232,936,1364,937,1365,1366]};async function St(e){const t=Q(),n=e.ids.map(async s=>{try{const a=await Dt.getOfflineDrugById(s);if(a){const u=t.medications.findIndex(d=>d.drug_id===a.drug_id),r=bt(a.drug_id,a.name,e.name,a);u!==-1?t.medications[u]=r:t.medications.push(r)}}catch(a){console.error("Error fetching drug ID ".concat(s,":"),a)}});return t.filteredMedications=t.medications,Promise.all(n)}async function ws(e){try{const t=await Dt.getOfflineDrugById(e);return{drug_id:e,dosage:{morning:null,afternoon:null,evening:null},duration:null,...t}}catch(t){He("Error fetching drug details. Please try again."),console.error("Error fetching drug details:",t)}}function Ns(){return St(wa)}function Ls(){return at.ids=[...Na.ids,...La.ids,...Aa.ids,...Ba.ids],St(at)}function Ea(){Q().clearMedicationDataStores()}function Pa(e){Q().setCurrentPatientID(e)}function As(e){Q().currentPatientID!=e&&(Ea(),Pa(e))}function Bs(){return Q().selectedNCDMedicationList.some(t=>{const{morning:n,afternoon:s,evening:a}=t.dosage,u=typeof n=="string"?Number(n):n,r=typeof s=="string"?Number(s):s,d=typeof a=="string"?Number(a):a;return typeof u=="number"&&u>0||typeof r=="number"&&r>0||typeof d=="number"&&d>0})}class $a extends gt{constructor(t,n){super(t,105,n)}}class Ta extends gt{constructor(t,n){super(t,25,n)}static async get_____(t="",n=1,s=10){}}async function Es(e){var t,n,s;try{const a=z(),{patient:u}=G(a),r=JSON.parse(JSON.stringify(u.value));return(s=(n=(t=r.allergies)!=null?t:r.allergies={}).unsaved)!=null||(n.unsaved=[]),r.allergies.unsaved.push(...e),ae("Allergies appended to patient record successfully"),r}catch(a){X("Unable to save Allegies!")}}async function Ps(e){try{await le(e),ae("Allergies saved successfully")}catch(t){X("Unable to save Allegies!")}}class $s{async onSubmitNotes(t,n,s){const a=new $a(t,n);await a.createEncounter(),await a.saveObservationList(s)}async onSubmitAllergies(t,n,s){try{const a=new Ta(t,n);await a.createEncounter(),await a.saveObservationList(s),ae("Allergies saved successfully")}catch(a){console.error("Error saving allergies:",a),X("Failed to save allergies")}}}class Ts{constructor(){Z(this,"programID");Z(this,"providerID");Z(this,"patientID");Z(this,"date");Z(this,"demographics");Z(this,"previousDrugPrescriptions",[]);Z(this,"previousClinicalNotes");Z(this,"previousDrugAllergies");const t=z();this.demographics=t.patient,this.patientID=this.demographics.patientID,this.date=xe.getSessionDate(),this.providerID=O.getUserID(),this.programID=xe.getProgramID(),this.previousClinicalNotes={},this.previousDrugAllergies={}}async getPatientEncounters(){const t=await this.getPatientVisitDates(),n=t.map(async a=>{const u=a.value,r=await un.getEncounters(this.patientID,{date:u});await Promise.all(r.map(async d=>{var p;if(d.type.name=="NOTES"){const{observations:h}=d;Se.isEmpty(h)||h.forEach(_=>{if(_.concept_id=="2688"){const g=w.toStandardHisDisplayFormat(_.obs_datetime);Se.isEmpty(this.previousClinicalNotes.hasOwnProperty(g))&&(this.previousClinicalNotes[g]=[]),this.previousClinicalNotes[g].push({date:g,notes:_.value_text})}})}if(d.type.name=="TREATMENT"){const{observations:h}=d;if(!Se.isEmpty(h))for(const _ in h){let g="<UNKNOWN CONCEPT>";const D=h[_];try{(p=D==null?void 0:D.concept)!=null&&p.concept_names?g=D.concept.concept_names[0].name:g=await K.getConceptName(D.concept_id)}catch(f){console.error(D,f)}const R=await xe.resolvePrimaryValue(D),S=w.toStandardHisDisplayFormat(D.date_created);g=="Allergic"&&(this.previousDrugAllergies.hasOwnProperty(S)||(this.previousDrugAllergies[S]=[]),this.previousDrugAllergies[S].push({date:S,value:R}))}}}))});await Promise.all(n);const s=t.map(async a=>{const u=await ft.getOrderByPatient(this.patientID,{start_date:a.value});if(!Se.isEmpty(u)){const r=u.map(d=>({drugName:d.drug.name,value:w.toStandardHisTimeFormat(d.order.start_date),dose:d.dose,frequency:Mn(d.frequency),prescription:w.toStandardHisFormat(d.order.auto_expire_date),duration:xa(d.order.instructions),other:d}));this.previousDrugPrescriptions.push({prescriptionDate:w.toStandardHisDisplayFormat(a.value),previousPrescriptions:r})}});return await Promise.all(s),{previousDrugPrescriptions:this.previousDrugPrescriptions,previousClinicalNotes:this.previousClinicalNotes,previousDrugAllergies:this.previousDrugAllergies}}async getPatientVisitDates(){return(await vt.getPatientVisits(this.patientID,!1)).map(t=>({label:w.toStandardHisDisplayFormat(t),value:t,other:{isActive:t===pn.getSessionDate()}}))}}function xa(e){const t=/(\d+)\s+days/i,n=e.match(t);return n&&n.length>1?parseInt(n[1]):null}async function xs(){const e=z(),{patient:t}=G(e),n=t.value,s=[8809,903,6410,6409];let a;O.getModsStatus()||O.getUseIndexDBStatus()?a=await ue("diagnosis",{likeClause:"",currentPage:1,itemsPerPage:2e3}).then(g=>g.records):a=await O.getJson("diagnosis",{id:7409,page_size:2e3});const u=a.filter(g=>s.includes(g.concept_id)),r=n.diagnosis.saved.map(g=>g.value_coded),d=n.diagnosis.unsaved.map(g=>g.value_coded),p=[...r,...d];return u.filter(g=>p.includes(g.concept_id)).map(g=>g.name)}const Ra=J({created(){},components:{IonItem:ge,IonCol:Gt,IonLabel:Ie,IonIcon:qe},data(){return{iconsContent:te,localMedicalDrugsList:[...this.$props._selectedMedicalDrugsList]}},props:{_selectedMedicalDrugsList:{type:Array,default:[]},show_actions_buttons:{type:Boolean,default:!0},highLightBackground:{type:String,default:"item-native"}},watch:{},methods:{highlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#006401"),this.highlightActionBtns(e)},undoHighlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#636363"),this.undohighlightActionBtns(e)},highlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="inline-block"},undohighlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="none"},asignLblID(e){return e+"_lbl"},asignSpanLblID(e){return e+"_spanlbl"},async removeItemAtIndex(e,t){await pt("Do you want to delete it?",t)&&this.$emit("remove-item",e)},editItemAtIndex(e){this.$emit("edit-item",e)},highLightBnd(e){if(e){if(e.highlightbackground!==void 0&&e.highlightbackground==!0)return this.$props.highLightBackground}else return!1}}}),Fa=["onMousemove","onMouseout"],Ha={class:"route-label"};function Ua(e,t,n,s,a,u){const r=v("ion-label"),d=v("ion-col"),p=v("ion-row"),h=v("ion-icon");return I(!0),A(ce,null,Oe(e.localMedicalDrugsList,(_,g)=>(I(),A("div",{id:"df",class:"medication-item",key:g,onMousemove:D=>e.highlightItem(g),onMouseout:D=>e.undoHighlightItem(g)},[o(p,{class:"medication-header"},{default:l(()=>[o(d,{class:me(["ion-text-wrap",e.highLightBnd(_)])},{default:l(()=>[o(r,{id:e.asignLblID(g),class:"medication-name"},{default:l(()=>[x(T(_.drugName),1)]),_:2},1032,["id"])]),_:2},1032,["class"])]),_:2},1024),o(p,{class:"medication-details"},{default:l(()=>[o(d,{size:"10",class:me(["ion-text-wrap details-col",e.highLightBnd(_)])},{default:l(()=>[o(r,{class:"details-text"},{default:l(()=>[x(T(_.dose)+" / "+T(_.frequency)+" / daily / "+T(_.duration)+" / until "+T(_.prescription)+" ",1),b("span",Ha,T(_.route_name),1)]),_:2},1024)]),_:2},1032,["class"]),e.show_actions_buttons?(I(),ne(d,{key:0,class:me([e.highLightBnd(_),"actions-col"]),size:"2"},{default:l(()=>[o(r,{class:me(["action-button",e.asignSpanLblID(g)]),onClick:D=>e.editItemAtIndex(g)},{default:l(()=>[o(h,{icon:e.iconsContent.edit},null,8,["icon"])]),_:2},1032,["class","onClick"]),o(r,{class:me(["action-button",e.asignSpanLblID(g)]),onClick:D=>e.removeItemAtIndex(g,D)},{default:l(()=>[o(h,{icon:e.iconsContent.delete},null,8,["icon"])]),_:2},1032,["class","onClick"])]),_:2},1032,["class"])):ee("",!0)]),_:2},1024)],40,Fa))),128)}const Rs=Y(Ra,[["render",Ua],["__scopeId","data-v-01c693a3"]]),Va={key:0,class:"custom-allergy-container"},Ja=J({watch:{},name:"AllergiesComponent"}),qa=J({...Ja,setup(e){const t=mn(),n=z(),s=re(()=>t.selectedMedicalAllergiesList),a=re(()=>n.patient),u=re(()=>t.medicalAllergiesList),r=k(f(8,"item-")),d=k(),p=k(!1),h=[{multi_Selection:!0,show_list_label:!0,unqueId:r.value,name_of_list:"Add/Remove allergies",placeHolder:"Search for an allergy",items:[],listUpdatedFN:D,listFilteredFN:()=>{},searchTextFN:R,use_internal_filter:!0,show_error:k(!1),error_message:"please select a User",disabled:k(!1)}],_=k(!1);ke(async()=>{g()});const g=()=>{t.current_patient.ID!=a.value.ID&&(t.clearSelectedMedicalAllergiesList(),t.setCurrentPatient(a.value))};function D(C){C.forEach(c=>{c.selected==!0&&c.name==="Other"&&(p.value=c.name==="Other")}),t.setSelectedMedicalAllergiesList(C),S()}async function R(C){const c=C,M=await K.getConceptSet("OPD Medication",c);M.map(U=>({label:U.name,value:U.name,other:U}));const L=hn(c),q=gn(L,M).sort((U,V)=>U.name.localeCompare(V.name));t.setMedicalAllergiesList(q),S()}function S(){const C=u.value;s.value.forEach(M=>{let L=!1;C.forEach((H,q)=>{H.concept_id==M.concept_id&&M.selected===!0&&(C[q]=M,L=!0)}),!L&&M.selected===!0&&C.push(M)});const c=C.filter((M,L,H)=>L===H.findIndex(q=>q.concept_id===M.concept_id));t.setMedicalAllergiesList(c)}function f(C=8,c=""){const M="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let L=c;for(let H=0;H<C;H++)L+=M.charAt(Math.floor(Math.random()*M.length));return L+="-".concat(Date.now()),L}async function E(C){try{const c=C.trim();if(c){const M={name:c,selected:!0};t.setMedicalAllergiesList([...u.value,M]),t.setSelectedMedicalAllergiesList(M),p.value=!1,_.value=!0,d.value="";const L=t.findSelectedAllergyByName("Other");t.removeSelectedAllergy(L)}}catch(c){console.error(c)}}return(C,c)=>(I(),ne(B(Yt),null,{default:l(()=>[o(B(jt),null,{default:l(()=>[o(B(Ie),{class:"header-container"},{default:l(()=>[o(B(qe),{icon:B(Kt),class:"allergy-icon"},null,8,["icon"]),c[2]||(c[2]=b("span",{style:{"font-size":"16px","font-weight":"600"}}," Allergies (Medication, Healthcare items, Environment and Food) ",-1))]),_:1,__:[2]})]),_:1}),o(B(Xt),null,{default:l(()=>[o(fn,{multiSelection:h[0].multi_Selection,show_label:h[0].show_list_label,uniqueId:h[0].unqueId,name_of_list:h[0].name_of_list,choose_place_holder:h[0].placeHolder,"items_-list":u.value,use_internal_filter:h[0].use_internal_filter,disabled:h[0].disabled.value,onItemListUpDated:h[0].listUpdatedFN,onItemListFiltered:h[0].listFilteredFN,onItemSearchText:h[0].searchTextFN},null,8,["multiSelection","show_label","uniqueId","name_of_list","choose_place_holder","items_-list","use_internal_filter","disabled","onItemListUpDated","onItemListFiltered","onItemSearchText"]),p.value?(I(),A("div",Va,[o(B(ut),{modelValue:d.value,"onUpdate:modelValue":c[0]||(c[0]=M=>d.value=M),placeholder:"Please specify the allergy",fill:"outline",class:"custom-input"},null,8,["modelValue"]),o(B(Ee),{onClick:c[1]||(c[1]=M=>E(d.value)),class:"addCustomAllergyBtn"},{default:l(()=>c[3]||(c[3]=[x(" Add Allergy ",-1)])),_:1,__:[3]})])):ee("",!0)]),_:1})]),_:1}))}}),Fs=Y(qa,[["__scopeId","data-v-8aa98f55"]]),za=Pe("nonPharmaTherapyStore",{state:()=>({items:[{id:"wound-dressing",label:"Wound dressing",checked:!1},{id:"patient-education",label:"Patient education",checked:!1},{id:"counseling",label:"Counseling",checked:!1},{id:"minor-surgery",label:"Minor Surgery",checked:!1}],current_patient:{}}),actions:{async saveNonPharmaTherapyPatientData(){const e=vn(),t=[];this.items.forEach(n=>{n.checked==!0&&t.push({concept_id:11023,value_text:n.label,obs_datetime:w.toStandardHisFormat(O.getSessionDate()),location_id:e.facilityLocation.code})});try{t.length>0&&Wa(t)}catch(n){X("Unable to update Non Pharma Therapy!")}this.clearSelectednonPharmaTherapyStore()},clearSelectednonPharmaTherapyStore(){this.items.forEach(e=>{e.checked=!1})},setCurrentPatient(e){this.current_patient=e}},persist:!0});async function Wa(e){var t,n,s;try{const a=z(),{patient:u}=G(a),r=JSON.parse(JSON.stringify(u.value));(s=(n=(t=r.notes)!=null?t:r.notes={}).unsaved)!=null||(n.unsaved=[]),r.notes.unsaved.push(...e),await le(r),ae("Non Pharma Therapy has been saved")}catch(a){X("Unable to create non pharmalogical notes!")}}const Ga={class:"checklist-container"},Ya=J({watch:{},name:"xxxComponent"}),ja=J({...Ya,setup(e){const t=z(),n=re(()=>t.patient),s=za(),a=s.items;ke(async()=>{u()});const u=()=>{s.current_patient.ID!=n.value.ID&&(s.clearSelectednonPharmaTherapyStore(),s.setCurrentPatient(n.value))};return Ce(()=>n.value,async r=>{}),(r,d)=>(I(),A("div",Ga,[(I(!0),A(ce,null,Oe(B(a),p=>(I(),ne(B(ge),{key:p.id,class:"no-border"},{default:l(()=>[o(B(Qt),{id:p.id,modelValue:p.checked,"onUpdate:modelValue":h=>p.checked=h,slot:"start"},null,8,["id","modelValue","onUpdate:modelValue"]),o(B(Ie),{style:{"font-size":"16px","font-weight":"600"}},{default:l(()=>[x(T(p.label),1)]),_:2},1024)]),_:2},1024))),128))]))}}),Hs=Y(ja,[["__scopeId","data-v-371e920f"]]);async function Us(){var e,t,n;try{const s=z(),{patient:a}=G(s),u=Xa(),r=JSON.parse(JSON.stringify(a.value));if(u.length>0){(n=(t=(e=r.MedicationOrder)!=null?e:r.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const d=r.MedicationOrder.unsaved.findIndex(h=>h.NCD_Drug_Orders);if(d>=0)r.MedicationOrder.unsaved[d].NCD_Drug_Orders=[...r.MedicationOrder.unsaved[d].NCD_Drug_Orders,...u];else{const h={NCD_Drug_Orders:u};r.MedicationOrder.unsaved.push(h)}await le(r),Q().clearMedicationDataStores(),ae("Drug order(s) has been created")}else X("Unable to create drug orders!")}catch(s){X("Unable to create drug orders!")}}function st(){try{const e=new Date(O.getSessionDate()),n=ze().selectedMedicalDrugsList;let s=0;if(n.forEach(h=>{const _=parseInt(h.duration,10);!isNaN(_)&&_>s&&(s=_)}),s<=0)return{date:null,formattedDate:null};const a=new Date(e);a.setDate(e.getDate()+s);const u=String(a.getDate()).padStart(2,"0"),r=String(a.getMonth()+1).padStart(2,"0"),d=a.getFullYear(),p="".concat(u,"/").concat(r,"/").concat(d);return{date:a,formattedDate:p}}catch(e){return console.error("Error calculating OPD medication run out date:",e),{date:null,formattedDate:null}}}function Ka(){try{const e=new Date(O.getSessionDate()),n=Q().selectedNCDMedicationList;let s=0;if(n.forEach(h=>{const _=parseInt(h.duration,10);!isNaN(_)&&_>s&&(s=_)}),s<=0)return{date:null,formattedDate:null};const a=new Date(e);a.setDate(e.getDate()+s);const u=String(a.getDate()).padStart(2,"0"),r=String(a.getMonth()+1).padStart(2,"0"),d=a.getFullYear(),p="".concat(u,"/").concat(r,"/").concat(d);return{date:a,formattedDate:p}}catch(e){return console.error("Error calculating medication run out date:",e),{date:null,formattedDate:null}}}const Xa=()=>{const e=Q();return e.selectedNCDMedicationList.map(t=>{t.frequency=e.frequency_selections[t.drug_id]||"",t.totalDosage=Object.values(t.dosage).reduce((a,u)=>a+Number(u),0);const n=yt.getSessionDate(),s=es(t.drug_id);return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.totalDosage=="Unknown"?0:t.totalDosage*(s==null?void 0:s.value)||0,start_date:n,auto_expire_date:Ct(n,t.duration),units:t.units,instructions:"".concat(t.name," ").concat(t.totalDosage," ").concat(t.units," ").concat((s==null?void 0:s.code)||""," for ").concat(t.duration," days"),dose:Qa(t),frequency:(s==null?void 0:s.code)||""}})},Qa=e=>e.dose_strength!=null&&e.dose_strength?Math.trunc(e.dose_strength):1;async function Vs(){var e,t,n;try{const s=z(),{patient:a}=G(s),u=Za(),r=JSON.parse(JSON.stringify(a.value));if(u.length>0){(n=(t=(e=r.MedicationOrder)!=null?e:r.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const d=r.MedicationOrder.unsaved.findIndex(h=>h.NCD_Drug_Orders);if(d>=0)r.MedicationOrder.unsaved[d].NCD_Drug_Orders=[...r.MedicationOrder.unsaved[d].NCD_Drug_Orders,...u];else{const h={NCD_Drug_Orders:u};r.MedicationOrder.unsaved.push(h)}await le(r),ze().clearSelectedMedicalDrugsList(),ae("Drug order(s) has been created")}else X("Unable to create drug orders!")}catch(s){X("Unable to create drug orders!")}}const Za=()=>ze().selectedMedicalDrugsList.map(t=>{const n=yt.getSessionDate(),s=oe.find(a=>a.label===t.frequency)||{};return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.dose=="Unknown"?0:t.dose*(s==null?void 0:s.value)||0,start_date:n,auto_expire_date:Ct(n,t.duration),units:t.units,instructions:"".concat(t.drugName,": ").concat(t.dose," ").concat(t.units," ").concat((s==null?void 0:s.code)||""," for ").concat(t.duration," days"),dose:t.dose,frequency:(s==null?void 0:s.code)||""}}),es=e=>{const n=Q().selectedNCDMedicationList.find(a=>a.drug_id===e);if(!n||!n.dosage)return null;switch(["morning","afternoon","evening"].reduce((a,u)=>a+(n.dosage[u]?1:0),0)){case 1:return n.dosage.morning?oe.find(a=>a.code==="QAM"):n.dosage.afternoon?oe.find(a=>a.code==="QNOON"):n.dosage.evening?oe.find(a=>a.code==="QPM"):oe.find(a=>a.code==="OD");case 2:return oe.find(a=>a.code==="BD");case 3:return oe.find(a=>a.code==="TDS");default:return oe.find(a=>a.code==="Unknown")}},Ct=(e,t)=>{const n=new Date(e);return n.setDate(n.getDate()+parseInt(t)),w.toStandardHisFormat(n)},ts=J({components:{IonContent:ve,IonHeader:Me,IonItem:ge,IonList:Ae,IonMenu:Le,IonTitle:fe,IonToolbar:Be,BasicInputField:ht,IonDatetime:en,IonBadge:Zt,DateInputField:kn,DynamicButton:_e},setup(){const e=Re(),t=k(0),n=re(()=>e.getDisabledDates()),s=re(()=>e.getAssignedAppointments()),a=k();return{disabledDates:n,datesCounts:s,appointment_count:t,calendarOutline:tn,inputPRDate:a}},data(){return se(),et(),{iconsContent:te,date:new Date(O.getSessionDate()),tomorrow:new Date(O.getSessionDate()).getDate()+1,appointment:"",drugRunoutDate:"",nextAppointmentDate:"",minDate:new Date(O.getSessionDate())}},computed:{...ie(se,["nextAppointment","appointmentCountsCache","currentSelectedNextAppointmentDate"]),...ie(Re,["maximumNumberOfDaysForEachDay","assignedAppointmentsDates"]),...ie(z,["patient"]),...ie(et,["activeProgram"]),calendarDate(){const e=se();return e.currentSelectedNextAppointmentDate?w.toStandardHisDisplayFormat(e.currentSelectedNextAppointmentDate):""},runOutDate(){var e;return((e=this.activeProgram)==null?void 0:e.program_id)===14?st():Ka()}},watch:{calendarDate:{handler(){this.updateNextAppointment()},deep:!0},"$service.sessionDate":{handler(){this.updateMinDate()},immediate:!0},"patient.ID":{async handler(e,t){e!==t&&(this.cleanCurrentNextAppointmentDate(),this.checkIfSamePatientInContext())}}},async mounted(){this.checkIfSamePatientInContext(),await this.getAppointmentMents(this.runOutDate.date),await Dn().loadGlobalProperty(),this.validateAppointmentCountsCache(),await this.preloadAppointmentCounts(),bn();const e=O.getUserID(),t=new vt;this.appointment=new Ne(t.getID(),e),this.nextAppointmentDate=this.appointment.date,this.supposedRunOutDate(),window.addEventListener("storage",this.handleStorageChange),st()},beforeUnmount(){window.removeEventListener("storage",this.handleStorageChange)},methods:{handleStorageChange(e){e.key==="sessionDate"&&this.updateMinDate()},updateMinDate(){this.date=new Date(O.getSessionDate()),this.minDate=new Date(O.getSessionDate())},updateNextAppointment(){se().setNextAppointment(this.calendarDate)},async handleDateUpdate(e){e&&(Re().setsssignedAppointmentsDates(e,!0),this.calendarDate=w.toStandardHisDisplayFormat(e),await this.save(),await this.getAppointmentMents(e),await this.updateAppointmentCache(e),se().setCurrentSelectedNextAppointmentDate(e,this.patient.ID))},async getAppointmentMents(e){if(yn().apiStatus)try{const n=await Ne.getDailiyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(e));this.appointment_count=n.length}catch(n){}},getCounter(e){const t=w.toStandardHisFormat(e);return this.appointmentCountsCache[t]||""},async save(){if(this.assignedAppointmentsDates.length>0)try{const t=await new On().createOfflineAppointment()}catch(e){}},async openCornfirmModal(e){this.calendarDate=w.toStandardHisDisplayFormat(e),await this.getAppointmentMents(e),mt(_n,{class:"otherVitalsModal"},!0,{message:"Are you sure you want to add this Appointment?"},{cancel:a=>{},confirm:async a=>{a.detail==!0&&await this.handleDateUpdate(e)}})},async handleInput(e){this.inputPRDate=w.toStandardHisDisplayFormat(e),await this.openCornfirmModal(e)},async supposedRunOutDate(){await ft.getLastDrugsReceived(this.patient.patientID)},async preloadAppointmentCounts(){try{const e=new Date(O.getSessionDate());e.setDate(1);const t=new Date(O.getSessionDate());t.setMonth(t.getMonth()+2),t.setDate(0);try{const n=await Ne.getDailiyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(t)),s=this.filterUniqueAppointments(n),a={};s.forEach(u=>{const r=new Date(u.appointment_date),d=w.toStandardHisFormat(r);a[d]||(a[d]=0),a[d]++}),Object.keys(a).forEach(u=>{this.appointmentCountsCache[u]=a[u]})}catch(n){console.error("Error fetching appointments for date range:",n)}}catch(e){console.error("Error in preload process:",e)}},filterUniqueAppointments(e){const t=new Map;return e.forEach(n=>{const s="".concat(n.given_name,"_").concat(n.family_name,"_").concat(n.birthdate,"_").concat(n.appointment_date);t.has(s)||t.set(s,n)}),Array.from(t.values())},async updateAppointmentCache(e){try{const t=w.toStandardHisFormat(e),n=await Ne.getDailiyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(e));this.appointmentCountsCache[t]=n.length}catch(t){console.error("Error updating appointment cache:",t)}},validateAppointmentCountsCache(){se().checkCurrentLocationIfInContext()},isRunOutDate(e){return!this.runOutDate||!this.runOutDate.date?!1:w.toStandardHisFormat(e)===w.toStandardHisFormat(this.runOutDate.date)},cleanCurrentNextAppointmentDate(){se().cleanCurrentSelectedNextAppointmentDate()},checkIfSamePatientInContext(){const e=se();e.current_patient.ID!=this.patient.ID&&(this.cleanCurrentNextAppointmentDate(),e.setCurrentPatient(this.patient))}}}),ns={class:"card_content"},as={class:"count-badge"},ss={class:"dates_title"},os={class:"sub_data"},is={class:"dates_title"},rs={class:"sub_data"},ls={class:"dates_title"},ds={class:"sub_data"},cs={class:"dates_title"},us={class:"sub_data"};function ps(e,t,n,s,a,u){const r=v("VueDatePicker"),d=v("ion-col"),p=v("DynamicButton"),h=v("ion-item"),_=v("ion-row"),g=v("DateInputField");return I(),A("div",ns,[o(_,null,{default:l(()=>[o(d,{"size-sm":"12","size-md":"12","size-lg":"12","size-xl":"8"},{default:l(()=>[o(r,{class:"calender",onDateUpdate:e.openCornfirmModal,inline:"","auto-apply":"","enable-time-picker":!1,"disabled-dates":e.disabledDates,"min-date":e.minDate,modelValue:e.runOutDate.date,"onUpdate:modelValue":t[0]||(t[0]=D=>e.runOutDate.date=D)},{day:l(({day:D,date:R})=>[(I(),A("p",{key:0,class:me({"run-out-date":e.isRunOutDate(R)}),style:{"font-weight":"600","font-size":"20px"}},[b("span",null,[x(T(D),1),b("sup",as,T(e.getCounter(R)),1)])],2))]),_:1},8,["onDateUpdate","disabled-dates","min-date","modelValue"])]),_:1}),o(d,null,{default:l(()=>[o(h,null,{default:l(()=>[b("div",ss,[t[3]||(t[3]=b("div",null,[x("Suggested Next Appointment Date "),b("span",{style:{"font-size":"16px"}},"(Medication run out date)")],-1)),b("div",os,[x(T(e.runOutDate.formattedDate||"No run out date available")+" ",1),e.runOutDate.formattedDate?(I(),ne(p,{key:0,onClick:t[1]||(t[1]=D=>e.handleDateUpdate(e.runOutDate.date)),name:"Set Next Appt.",fill:"solid",iconSlot:"icon-only",style:{float:"right"}})):ee("",!0)])])]),_:1}),o(h,null,{default:l(()=>[b("div",is,[t[4]||(t[4]=b("div",null,"User set appointment date",-1)),b("div",rs,T(e.calendarDate),1)])]),_:1}),o(h,null,{default:l(()=>[b("div",ls,[t[5]||(t[5]=b("div",null,"Appointments",-1)),b("div",ds,T(e.appointment_count),1)])]),_:1}),o(h,null,{default:l(()=>[b("div",cs,[t[6]||(t[6]=b("div",null,"Appointment limit (per/day)",-1)),b("div",us,T(e.appointment_count)+"/"+T(e.maximumNumberOfDaysForEachDay),1)])]),_:1})]),_:1})]),_:1}),o(_,null,{default:l(()=>[o(d,{size:"4"},{default:l(()=>[o(g,{inputHeader:"Preferred Next Appointment Date",bold:"600",fontSize:"17px",placeholderFontSize:"17px",placeholderFontWeight:"600",unit:"",icon:e.calendarOutline,placeholder:"press to select date",iconRight:"",inputWidth:"100%",inputValue:e.inputPRDate,eventType:"",minDate:e.minDate,maxDate:"",disabled:!1,"onUpdate:rawDateValue":t[2]||(t[2]=D=>e.handleInput(D))},null,8,["icon","inputValue","minDate"])]),_:1})]),_:1})])}const Js=Y(ts,[["render",ps],["__scopeId","data-v-2742dd5f"]]);export{Fs as A,Rs as D,Os as I,Bs as M,Js as N,Ts as P,$s as T,Kn as _,Ps as a,Wa as b,Us as c,za as d,Vs as e,As as f,Pa as g,xs as h,Ls as i,Ns as j,Ea as k,ka as l,ws as m,ks as n,Hs as o,Es as s,Q as u};
