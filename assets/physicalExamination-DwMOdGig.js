import{d as y,ar as u,b8 as C,D as k,G as P,M,J as B,a_ as U,bC as F,a$ as N,aZ as z,b0 as T,W,U as $,T as O,af as H,ba as L,S as G,a9 as j,a2 as J,ck as R,E as p,y as Y,f as Z,z as x,l as g}from"./vendor-BzS-GRGX.js";import{y as q,T as K,f as Q,S as f,t as d,j as E,H as X,l as A,ax as aa,u as ta,i as ea,_ as sa}from"./index-TGgrguwo.js";import{D as ia}from"./DemographicBar-DB-sZp69.js";import{S as na}from"./SaveProgressModal-QbFr6zQH.js";import{S as ra,V as _,n as oa,o as la,p as ca}from"./Stepper-BODpR4NH.js";import{a as s,f as n,c as i}from"./formatServerData-D-j-MK35.js";import"./lodash-Dt8AsbQm.js";import{A as I}from"./app_encounter_service-1D5RNuZY.js";import{u as V}from"./FeatusModal-TMtKyehf.js";import{B as ma}from"./BasicFooter-BiMySNNX.js";import{_ as pa}from"./lab_order-NrQAVix-.js";import{_ as da}from"./SetEncounter.vue_vue_type_script_lang-CW-XC7XX.js";import"./SvgDynamicColor-CKO9UwFV.js";import"./patient_complaints_service-BUXSMcg_.js";import"./DashBox-CGjCuPOh.js";import"./StandardForm.vue_vue_type_script_setup_true_lang-Ci0rxMn0.js";import"./useExposeFromStandardForm-A_pabvEL.js";import"./BasicForm-D1bDQLWE.js";import"./DateInputField-Dk6pJa3t.js";import"./patient_lab_service-BfByiNeD.js";import"./LabTestsHistory-wKAwfu6_.js";import"./NextAppointment-BQXxObMi.js";import"./previousDiagnosis-DKQR1IJI.js";import"./group_validation-BR-lnozB.js";import"./drug_prescription_service-FUoKWuPH.js";import"./drug_service-CM40nAlw.js";import"./appointment_service-B7NjCYmj.js";import"./clinicalDaysStore-Ca2J5cRy.js";import"./ncd_appointment_service-P9JEcsdW.js";import"./UpcomingFeature-Bvn9ojTK.js";import"./previousVitals-xflsCnCt.js";import"./apexcharts-C_xTRKVr.js";import"./Outcome-D9fRV7Q5.js";import"./SelectFacility-BV6O3A7t.js";import"./PastObstreticHistoryStore-BA3iimgf.js";import"./vitals_service-D9OoNF_j.js";class ha extends I{constructor(a,e){super(a,95,e)}}class ua extends I{constructor(a,e){super(a,116,e)}}class ga extends I{constructor(a,e){super(a,210,e)}}const fa=y({name:"PhysicalExam",mixins:[pa,da],components:{BasicFooter:ma,IonContent:j,IonHeader:G,IonMenuButton:L,IonPage:H,IonTitle:O,IonToolbar:$,Toolbar:K,ToolbarSearch:q,DemographicBar:ia,IonButton:W,IonCard:T,IonCardContent:z,IonCardHeader:N,IonCardSubtitle:F,IonCardTitle:U,IonAccordion:B,IonAccordionGroup:M,IonItem:P,IonLabel:k,IonModal:C,Stepper:ra},data(){return{wizardData:[{title:"Vitals",class:"common_step",checked:!1,disabled:!1,number:1,last_step:""},{title:"Maternal exam",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Abdominal examination",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:""},{title:"Presenting signs for IPV",class:"common_step",checked:"",icon:!1,disabled:!1,number:4,last_step:"last_step"}],StepperData:[{title:"Vitals",component:"",value:"1"},{title:"Maternal exam",component:"MaternalExam",value:"2"},{title:"Abdominal examination",component:"AbdominalExamination",value:"3"},{title:"Presenting signs or conditions for IPV ",component:"PresentingSigns",value:"4"}],isOpen:!1,iconsContent:ea}},computed:{...u(ta,["patient"]),...u(ca,["ANCVitals"]),...u(la,["respiratory","pallor","breastExam","vaginalInspection","cervicalExam","oedemaPresence"]),...u(V,["fetalAssessment","fetalDetails"]),...u(oa,["presentingSigns"])},mounted(){this.markWizard()},watch:{vitals:{handler(){this.markWizard()},deep:!0},DangerSigns:{handler(){this.markWizard()},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},diagnosis:{handler(){this.markWizard()},deep:!0}},setup(){return{chevronBackOutline:R,checkmark:J,hasValidationErrors:[]}},methods:{markWizard(){},getSaveFunction(){},deleteDisplayData(t){return t.map(a=>(a==null||delete a.display,a==null?void 0:a.data))},async saveData(){if(await this.validaterowData()){A("Vitals form has errors");return}if(!await V().validate()){A("Abdominal exam section has errors");return}this.saveVitals(),this.saveMaternalExam(),this.saveAbdominalExam(),this.savePresentingSigns(),await this.$router.push("contact"),await aa()},async buildVitals(){return[...await s(this.ANCVitals),...await i(this.ANCVitals)]},async buildMaternalExam(){return[...await n(this.pallor),...await i(this.pallor),...await s(this.pallor),...await n(this.respiratory),...await i(this.respiratory),...await s(this.respiratory),...await i(this.breastExam),...await s(this.breastExam),...await n(this.breastExam),...await i(this.vaginalInspection),...await s(this.vaginalInspection),...await n(this.vaginalInspection),...await i(this.cervicalExam),...await s(this.cervicalExam),...await n(this.cervicalExam),...await i(this.oedemaPresence),...await s(this.oedemaPresence),...await n(this.oedemaPresence)]},async buildAbdominalExam(){return[...await s(this.fetalAssessment),...await n(this.fetalAssessment),...await i(this.fetalAssessment),...await s(this.fetalDetails),...await n(this.fetalDetails),...await i(this.fetalDetails)]},async buildPresentingSigns(){return[...await s(this.presentingSigns),...await n(this.presentingSigns),...await i(this.presentingSigns)]},async saveVitals(){const t=f.getUserID();await new _(this.patient.patientID,t).onFinish(this.ANCVitals)},async validaterowData(){var D,S;const t=f.getUserID(),a=new _(this.patient.patientID,t),e=X.getAgeInYears((S=(D=this.patient)==null?void 0:D.personInformation)==null?void 0:S.birthdate);this.hasValidationErrors=[];let r=!1;return this.ANCVitals.forEach((l,c)=>{var b;(b=l==null?void 0:l.data)!=null&&b.rowData&&l.data.rowData.forEach((v,m)=>{v.colData.some((w,h)=>{const o=a.validator(w);return w.name==="Respiratory rate"&&e<=5?(o==null?void 0:o.length)>0?(r=!0,this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage=o.flat(1/0)[0]):this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage="":(o==null?void 0:o.length)>0?(r=!0,this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage=o.flat(1/0)[0]):this.ANCVitals[c].data.rowData[m].colData[h].alertsErrorMassage="",!1})})}),this.ANCVitals.validationStatus=!r,r},async saveMaternalExam(){if(this.pallor.length>=0||this.cervicalExam.length>=0||this.vaginalInspection.length>=0||this.breastExam.length>=0){const t=f.getUserID(),a=new ha(this.patient.patientID,t);if(!await a.createEncounter())return d("Unable to create maternal exam encounter");if(!await a.saveObservationList(await this.buildMaternalExam()))return d("Unable to create maternal exam details!");E("Maternal exam details have been created")}console.log(await this.buildMaternalExam())},async saveAbdominalExam(){if(this.fetalAssessment.length>=0||this.fetalDetails.length>=0){const t=f.getUserID(),a=new ua(this.patient.patientID,t);if(!await a.createEncounter())return d("Unable to create abdominal exam encounter");if(!await a.saveObservationList(await this.buildAbdominalExam()))return d("Unable to create abdominal exam details!");E("Abdominal exam details have been created")}console.log(await this.buildAbdominalExam())},async savePresentingSigns(){if(this.presentingSigns.length>=0){const t=f.getUserID(),a=new ga(this.patient.patientID,t);if(!await a.createEncounter())return d("Unable to create presenting signs encounter");if(!await a.saveObservationList(await this.buildPresentingSigns()))return d("Unable to create presenting signs details!");E("Presenting signs details have been created")}console.log(await this.buildPresentingSigns())},openModal(){Q(na)}}});function ba(t,a,e,r,D,S){const l=p("Toolbar"),c=p("DemographicBar"),b=p("Stepper"),v=p("ion-content"),m=p("BasicFooter"),w=p("ion-page");return Z(),Y(w,null,{default:x(()=>[g(l),g(v,{fullscreen:!0},{default:x(()=>[g(c),g(b,{stepperTitle:"Physical examination",wizardData:t.wizardData,onUpdateStatus:t.markWizard,StepperData:t.StepperData,backUrl:t.userRoleSettings.url,backBtn:t.userRoleSettings.btnName,getSaveFunction:t.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),g(m,{onFinishBtn:a[0]||(a[0]=h=>t.saveData())})]),_:1})}const at=sa(fa,[["render",ba]]);export{at as default};
