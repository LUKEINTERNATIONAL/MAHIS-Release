import{d as L,d0 as M,r as V,a as R,y as q,f as A,z as r,l as a,u as n,aY as F,k as c,a$ as O,bm as x,aa as g,ab as _,D as y,A as v,B as b,e as S,F as U,L as Y,G as z,a3 as k,O as h}from"./vendor-CIegBHSo.js";import{P as G,ac as P,t as T,l as $,j as Q,aj as W,_ as J}from"./index-CUlU9rSI.js";import{S as K}from"./SelectFacility-DQmQ2DwN.js";import{A as X}from"./app_encounter_service-F3MLsbNN.js";import{A as Z}from"./adherence_service-CgE38cfG.js";import{g as ee}from"./LocationFieldOptions-CM3k3JKK.js";import"./lodash-Dt8AsbQm.js";const te={class:"ion-padding",style:{"border-bottom":"dashed #ccc"}},ae={class:"error"},ne={class:"ion-padding",style:{"border-bottom":"dashed #ccc"}},le={class:"error"},re={class:"ion-padding",style:{"border-bottom":"dashed #ccc"}},ie={class:"error"},oe={class:"ion-padding",style:{"border-bottom":"dashed #ccc"}},se={class:"error"},ue=L({__name:"EmergencyRefill",setup(de,{expose:E}){const I=new G,m=new X(I.getID(),25,-1,""),d=new Z(I.getID(),m.providerID),l=M({date_of_emergency_refill:"",facility:"",drugs:[],next_appointment:"",selectedFacilityObj:null}),s=V({}),C=V([]),u={date_of_emergency_refill:{required:()=>!0,dataHandler:e=>{l.date_of_emergency_refill=e},validation:async()=>{var t,o,i;if(!l.date_of_emergency_refill){s.value.date_of_emergency_refill="Date is required";return}if(h(l.date_of_emergency_refill).isAfter(h())){s.value.date_of_emergency_refill="Date cannot be in the future";return}const e=(i=(o=(t=d.getLastDrugs())==null?void 0:t[0])==null?void 0:o.order)==null?void 0:i.start_date;e&&h(l.date_of_emergency_refill).isBefore(e)&&await W("Date entered is less than last known dispensation of ".concat(h(e).format("DD-MMM-YYYY")))},buildObs:()=>m.buildValueDate("Prescription refill date",l.date_of_emergency_refill)},facility:{required:()=>!0,dataHandler:e=>{l.facility=e.name},searchFacilities:e=>ee(e).then(t=>C.value=t),validation:()=>{l.facility||(s.value.facility="Facility is required")},buildObs:()=>m.buildValueText("Health facility name",l.facility)},drugs:{required:()=>!0,dataHandler:e=>{e.field==="remainingAmount"?l.drugs[e.index].other.remainingAmount=e.value:e.field==="givenAmount"&&(l.drugs[e.index].other.givenAmount=e.value)},validation:()=>{l.drugs.some(e=>!e.other.remainingAmount||!e.other.givenAmount)&&(s.value.drugs="Please enter both remaining and given amounts for all drugs")},buildObs:()=>l.drugs.map(async e=>{const t=d.calculateAdherence(e.other.drug.quantity,e.other.remainingAmount,H(e.other.drug));return{...await d.buildValueCoded("Medications dispensed",e.value),child:[await d.buildPillCountObs(e.other.drug.order_id,e.other.remainingAmount),await d.buildAdherenceObs(e.other.drug.order_id,e.other.drug.drug_id,t,l.date_of_emergency_refill),await d.buildValueNumber("Amount of drug dispensed",e.other.givenAmount)]}})},next_appointment:{required:()=>!0,dataHandler:e=>{l.next_appointment=e},validation:()=>{if(!l.next_appointment){s.value.next_appointment="Next appointment date is required";return}l.date_of_emergency_refill&&h(l.next_appointment).isBefore(l.date_of_emergency_refill)&&(s.value.next_appointment="Next appointment date must be after emergency refill date")},buildObs:()=>m.buildValueDate("Appointment date",l.next_appointment)}};function H(e){const t=o=>"".concat(o).match(/qod/i)?"QOD":"".concat(o).match(/weekly/i)?"QW":o;return d.calculateExpected(e.quantity,e.equivalent_daily_dose,e.order.start_date,t(e.frequency))}function p(e,t){e in u&&typeof u[e].dataHandler=="function"&&u[e].dataHandler(t),w(e)}function w(e){if(s.value[e]="",typeof u[e].required=="function"&&u[e].required()&&!l[e]){s.value[e]="This field is required";return}l[e]&&typeof u[e].validation=="function"&&u[e].validation()}function N(){return Object.keys(l).reduce((e,t)=>{if(t in u&&l[t]&&typeof u[t].buildObs=="function"){const o=u[t].buildObs();return Array.isArray(o)?[...e,...o]:[...e,o]}return e},[])}async function j(){if(Object.keys(u).forEach(t=>w(t)),Object.keys(s.value).some(t=>"".concat(s.value[t]).length>=1))return T("Please review form for errors");try{if(!await m.createEncounter())return $("Failed to create encounter");const o=await Promise.all(N());await m.saveObservationList(o),Q("Emergency refill saved successfully")}catch(t){console.error("Error saving emergency refill data:",t),$("Failed to save emergency refill data")}}async function B(){await d.loadPreviousDrugs(),l.drugs=d.getLastDrugs().map(e=>({label:e.drug.name,value:e.drug.concept_id,other:{givenAmount:"",remainingAmount:"",drug:e}}))}return R(async()=>{await B()}),E({onSubmit:j}),(e,t)=>{var o;return((o=l.drugs)!=null?o:[]).length<=0?(A(),q(n(O),{key:0,style:{height:"40vh"}},{default:r(()=>[a(n(F),null,{default:r(()=>t[3]||(t[3]=[c("h1",{class:"ion-text-center",style:{"margin-top":"15%"}}," No previous dispensations found. ",-1)])),_:1,__:[3]})]),_:1})):(A(),q(n(O),{key:1},{default:r(()=>[a(n(F),null,{default:r(()=>[c("div",te,[a(n(x),null,{default:r(()=>[a(n(g),null,{default:r(()=>[a(n(_),null,{default:r(()=>[a(n(y),null,{default:r(()=>t[4]||(t[4]=[v("Date of emergency refill")])),_:1,__:[4]}),a(P,{place_holder:"Select date",onDateUpDated:t[0]||(t[0]=i=>p("date_of_emergency_refill","".concat(i.value.year,"-").concat(i.value.month,"-").concat(i.value.day))),date_prop:""}),c("div",ae,b(s.value.date_of_emergency_refill),1)]),_:1})]),_:1})]),_:1})]),c("div",ne,[a(n(x),null,{default:r(()=>[a(n(g),null,{default:r(()=>[a(n(_),null,{default:r(()=>[a(n(y),null,{default:r(()=>t[5]||(t[5]=[v("Facility")])),_:1,__:[5]}),a(K,{show_error:!1,selected_district_ids:[],selected_location:null,onFacilitySelected:t[1]||(t[1]=i=>{p("facility",i.selected_location)})}),c("div",le,b(s.value.facility),1)]),_:1})]),_:1})]),_:1})]),c("div",re,[a(n(y),null,{default:r(()=>t[6]||(t[6]=[v("Emergency Supply Drugs")])),_:1,__:[6]}),(A(!0),S(U,null,Y(l.drugs,(i,D)=>(A(),S("div",{key:D,class:"drug-item"},[a(n(x),null,{default:r(()=>[a(n(g),null,{default:r(()=>[a(n(_),{size:"12"},{default:r(()=>[a(n(z),{lines:"none"},{default:r(()=>[a(n(y),null,{default:r(()=>[v(b(i.label),1)]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:2},1024),a(n(g),null,{default:r(()=>[a(n(_),{size:"6"},{default:r(()=>[a(n(k),{modelValue:i.other.remainingAmount,"onUpdate:modelValue":f=>i.other.remainingAmount=f,onIonInput:f=>p("drugs",{index:D,field:"remainingAmount",value:f.detail.value}),placeholder:"Pills Remaining",label:"Pills Remaining","label-placement":"stacked",type:"number",fill:"outline"},null,8,["modelValue","onUpdate:modelValue","onIonInput"])]),_:2},1024),a(n(_),{size:"6"},{default:r(()=>[a(n(k),{modelValue:i.other.givenAmount,"onUpdate:modelValue":f=>i.other.givenAmount=f,onIonInput:f=>p("drugs",{index:D,field:"givenAmount",value:f.detail.value}),placeholder:"Pills Given",label:"Pills Given","label-placement":"stacked",type:"number",fill:"outline"},null,8,["modelValue","onUpdate:modelValue","onIonInput"])]),_:2},1024)]),_:2},1024)]),_:2},1024)]))),128)),c("div",ie,b(s.value.drugs),1)]),c("div",oe,[a(n(x),null,{default:r(()=>[a(n(g),null,{default:r(()=>[a(n(_),null,{default:r(()=>[a(n(y),null,{default:r(()=>t[7]||(t[7]=[v("Next Appointment Date")])),_:1,__:[7]}),a(P,{place_holder:"Select next appointment date",onDateUpDated:t[2]||(t[2]=i=>p("next_appointment","".concat(i.value.year,"-").concat(i.value.month,"-").concat(i.value.day))),date_prop:""}),c("div",se,b(s.value.next_appointment),1)]),_:1})]),_:1})]),_:1})])]),_:1})]),_:1}))}}}),ve=J(ue,[["__scopeId","data-v-2988fbce"]]);export{ve as default};
