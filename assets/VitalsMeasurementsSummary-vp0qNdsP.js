import{d as A,af as O,b4 as P,_ as $,a2 as V,G as F,E as R,ag as N,ab as J,a1 as G,I as K,a8 as j,cC as q,$ as z,a0 as Q,H as U,e as g,f,l as X,J as Y,k as x,F as Z,P as tt,K as et}from"./vendor-C-fC0sMU.js";import{M as at,ba as st,B as it,bl as nt,af as u,H as d,bg as k,aJ as ot,bn as rt,P as L,W as ct,u as lt,aD as pt,k as ut,_ as dt}from"./index-CF759_i4.js";import{D as mt}from"./DashBox-BWDmMPJe.js";import{B as ht}from"./BasicForm-BkfTe_Am.js";import{p as gt}from"./previousDiagnosis-Dz0VEzuI.js";import"./lodash-NJiRuGo9.js";import"./apexcharts-DuXjb34J.js";import"./DateInputField-_gEUkZ5f.js";const ft=A({name:"Menu",components:{IonContent:j,IonHeader:K,IonItem:G,IonList:J,IonMenu:N,IonTitle:R,IonToolbar:F,IonInput:V,IonPopover:$,DashBox:mt,SelectionPopover:nt,BasicInputField:it,List:st,BasicForm:ht,DynamicButton:at,previousDiagnosis:gt,DataTable:P},data(){return{iconsContent:ut,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",conditionStatus:"",data:[],diagnosisData:[],popoverOpen:!1,event:"",selectedCondition:"",tableData:[],options:{responsive:!0,select:!1,layout:{topStart:"",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1},header:["Date","Weight","Height (cm)","Temperature","Pulse","SAO2","Systolic","Respiration rate","Diastolic","BMI"],visits:[],BMI:"",nextAppointMent:"",drugs:"",visitDate:[],primaryDiagnosis:[],presentingComplaint:[],secondaryDiagnosis:[],labOrders:[],vitals:{},vitalsWeightHeight:{},savedEncounters:[],pregnancy:{}}},setup(){return{checkmark:Q,pulseOutline:z}},computed:{...O(pt,["diagnosis"]),...O(lt,["patient"])},watch:{$route:{async handler(){await this.setListData()},deep:!0}},async mounted(){await this.updateData(),await this.setListData(),this.$nextTick(()=>{const t=this.$refs.dataTable.dt;t.columns.adjust().draw(),t.on("click",".delete-btn",a=>{const e=a.target.getAttribute("data-id");this.voidDiagnosis(JSON.parse(e),a)})})},methods:{async voidDiagnosis(t,a){await ct("Do you want to delete ".concat(t.name," ?"),a)&&(await u.voidObs(t.id),await this.setListData())},async openEnterResultModal(){await this.setListData()},async updateData(){const t=new L;this.visits=await L.getPatientVisits(t.getID(),!1),this.tableData=[],Promise.all(this.visits.map(async a=>{await this.loadSavedEncounters(a)}))},covertDate(t){return d.toStandardHisDisplayFormat(t)},async loadSavedEncounters(t){this.visitDate=t;const a=await rt.getEncounters(this.patient.patientID,{date:t});await this.setVitalsEncounters(a,t)},findEncounter(t,a){return t.find(e=>e.type&&e.type.name===a)},async getConceptValues(t,a){if(t)return await Promise.all(t==null?void 0:t.map(async e=>await ot.getConceptName(e.value_coded)))},filterObs(t,a){return t==null?void 0:t.filter(e=>e.concept.concept_names.some(s=>s.name===a))},async setVitalsEncounters(t,a){var n,l,p,v,I,D,y,b,_,S,w,B,M,C,T,H,E;const e=(n=this.findEncounter(t,"VITALS"))==null?void 0:n.observations;let s="";if(!e)return;const c=["Weight","Height (cm)","Temperature","Pulse","SAO2","Systolic","Respiration rate","Diastolic"].map(i=>this.filterObs(e,i).length||0),r=Math.max(...c);for(let i=0;i<r;i++){const m=(p=(l=this.filterObs(e,"Weight")[i])==null?void 0:l.value_numeric)!=null?p:"",h=(I=(v=this.filterObs(e,"Height (cm)")[i])==null?void 0:v.value_numeric)!=null?I:"";m&&h&&(s=await this.setBMI(m,h));const W=[a,m,h,(y=(D=this.filterObs(e,"Temperature")[i])==null?void 0:D.value_numeric)!=null?y:"",(_=(b=this.filterObs(e,"Pulse")[i])==null?void 0:b.value_numeric)!=null?_:"",(w=(S=this.filterObs(e,"SAO2")[i])==null?void 0:S.value_numeric)!=null?w:"",(M=(B=this.filterObs(e,"Systolic")[i])==null?void 0:B.value_numeric)!=null?M:"",(T=(C=this.filterObs(e,"Respiration rate")[i])==null?void 0:C.value_numeric)!=null?T:"",(E=(H=this.filterObs(e,"Diastolic")[i])==null?void 0:H.value_numeric)!=null?E:"",s||""];this.tableData.push(W)}},async setBMI(t,a){var e,s,o,c,r,n,l,p;return(s=(e=this.patient)==null?void 0:e.personInformation)!=null&&s.gender&&((c=(o=this.patient)==null?void 0:o.personInformation)!=null&&c.birthdate)&&(this.BMI=await k.getBMI(parseInt(t),parseInt(a),(n=(r=this.patient)==null?void 0:r.personInformation)==null?void 0:n.gender,d.calculateAge((p=(l=this.patient)==null?void 0:l.personInformation)==null?void 0:p.birthdate,d.sessionDate()))),this.updateBMI()},async updateBMI(){var a,e,s,o,c,r,n;const t=(e=(a=this.BMI)==null?void 0:a.color)!=null?e:[];return this.vitalsWeightHeight.icon=k.iconBMI(t),this.vitalsWeightHeight.backgroundColor=t[0],this.vitalsWeightHeight.textColor=t[1],this.vitalsWeightHeight.index="BMI "+((o=(s=this.BMI)==null?void 0:s.index)!=null?o:""),this.vitalsWeightHeight.value=(r=(c=this.BMI)==null?void 0:c.result)!=null?r:"",(n=this.BMI)==null?void 0:n.index},async setListData(){const t=await u.getAll(this.patient.patientID,"Primary diagnosis"),a=await u.getAll(this.patient.patientID,"Secondary diagnosis");[...t||[],...a||[]],P.use(q)},async generateListItems(t){return t.length>0?await Promise.all(t.map(async e=>{const s=await u.getConceptName(e.value_coded),o=e.obs_datetime;return[s,d.toStandardHisFormat(o)]})):[]}}}),vt={class:"table-responsive"};function It(t,a,e,s,o,c){const r=U("DataTable");return f(),g("div",vt,[X(r,{ref:"dataTable",options:t.options,data:t.tableData,class:"display nowrap",width:"100%"},{default:Y(()=>[x("thead",null,[x("tr",null,[(f(!0),g(Z,null,tt(t.header,n=>(f(),g("th",{key:n},et(n),1))),128))])])]),_:1},8,["options","data"])])}const Ct=dt(ft,[["render",It],["__scopeId","data-v-456e136d"]]);export{Ct as default};
