System.register(["./vendor-legacy-DAxRaqT3.js","./index-legacy-BFNDj9l5.js","./DemographicBar-legacy-CEkFoYlb.js","./SaveProgressModal-legacy-BHUGulud.js","./Stepper-legacy-B-eO-CtX.js","./formatServerData-legacy-BW2gpejX.js","./lodash-legacy-pOOc9Efu.js","./FeatusModal-legacy-BySiBPMf.js","./BasicFooter-legacy-D2VJnwB0.js","./NextAppointment-legacy-DeCD6ydv.js","./SetEncounter.vue_vue_type_script_lang-legacy-CzdMGYqq.js","./apexcharts-legacy-I95xSM7b.js","./OPDOutcome-legacy-CESS9009.js","./patient_complaints_service-legacy-BjhIR1TU.js","./DashBox-legacy-CiMA39Ny.js","./useExposeFromStandardForm-legacy-DNL3MRim.js","./BasicForm-legacy-DbOQkRdE.js","./DateInputField-legacy-BCW5ZDCS.js","./drug_prescription_service-legacy-DHhEiSbh.js","./Outcome-legacy-BNW6wHi6.js","./VitalsMixin.vue_vue_type_script_lang-legacy-BxP2fFTU.js","./TreatmentPlan-legacy-B0SHz9Fq.js","./previousDiagnosis-legacy-BXMmd3so.js","./group_validation-legacy-6ufvOclr.js","./BasicCard-legacy-D6lhjrjG.js","./PastObstreticHistoryStore-legacy-BNW_MVMR.js","./lab_order-legacy-GCyH1qa0.js","./UpcomingFeature-legacy-9doO1leR.js","./ncd_appointment_service-legacy-CBQbSdj2.js"],function(a,t){"use strict";var e,i,s,n,l,r,o,c,d,u,m,g,h,p,v,b,w,y,x,D,S,I,f,E,j,_,A,P,k,V,B,C,M,U,F,N,z,O,T,W,H,L,R,$,G,K,Y,J,Q,X,Z,q,aa;return{setters:[a=>{e=a.d,i=a.ah,s=a.bi,n=a.X,l=a.$,r=a.al,o=a.ak,c=a.aQ,d=a.ck,u=a.aR,m=a.aP,g=a.aS,h=a.N,p=a.G,v=a.E,b=a.a7,w=a.cb,y=a.I,x=a.a4,D=a.aU,S=a.bF,I=a.H,f=a.O,E=a.f,j=a.J,_=a.l},a=>{A=a.aW,P=a.W,k=a.T,V=a.n,B=a.S,C=a.t,M=a.K,U=a.H,F=a.s,N=a.aT,z=a.u,O=a.k,T=a._},a=>{W=a.D},a=>{H=a.S},a=>{L=a.S,R=a.V,$=a.m,G=a.n,K=a.o},a=>{Y=a.a,J=a.f,Q=a.c},null,a=>{X=a.u},a=>{Z=a.B},a=>{q=a._},a=>{aa=a._},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){class t extends A{constructor(a,t){super(a,95,t)}}class ta extends A{constructor(a,t){super(a,116,t)}}class ea extends A{constructor(a,t){super(a,210,t)}}const ia=e({name:"PhysicalExam",mixins:[q,aa],components:{BasicFooter:Z,IonContent:x,IonHeader:y,IonMenuButton:w,IonPage:b,IonTitle:v,IonToolbar:p,Toolbar:k,ToolbarSearch:P,DemographicBar:W,IonButton:h,IonCard:g,IonCardContent:m,IonCardHeader:u,IonCardSubtitle:d,IonCardTitle:c,IonAccordion:o,IonAccordionGroup:r,IonItem:l,IonLabel:n,IonModal:s,Stepper:L},data:()=>({wizardData:[{title:"Vitals",class:"common_step",checked:!1,disabled:!1,number:1,last_step:""},{title:"Maternal exam",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Abdominal examination",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:""},{title:"Presenting signs for IPV",class:"common_step",checked:"",icon:!1,disabled:!1,number:4,last_step:"last_step"}],StepperData:[{title:"Vitals",component:"",value:"1"},{title:"Maternal exam",component:"MaternalExam",value:"2"},{title:"Abdominal examination",component:"AbdominalExamination",value:"3"},{title:"Presenting signs or conditions for IPV ",component:"PresentingSigns",value:"4"}],isOpen:!1,iconsContent:O}),computed:{...i(z,["patient"]),...i(K,["ANCVitals"]),...i(G,["respiratory","pallor","breastExam","vaginalInspection","cervicalExam","oedemaPresence"]),...i(X,["fetalAssessment","fetalDetails"]),...i($,["presentingSigns"])},mounted(){this.markWizard()},watch:{vitals:{handler(){this.markWizard()},deep:!0},DangerSigns:{handler(){this.markWizard()},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},diagnosis:{handler(){this.markWizard()},deep:!0}},setup:()=>({chevronBackOutline:S,checkmark:D,hasValidationErrors:[]}),methods:{markWizard(){},getSaveFunction(){},deleteDisplayData:a=>a.map(a=>(null==a||delete a.display,null==a?void 0:a.data)),async saveData(){if(await this.validaterowData())return void F("Vitals form has errors");const a=X();await a.validate()?(this.saveVitals(),this.saveMaternalExam(),this.saveAbdominalExam(),this.savePresentingSigns(),await this.$router.push("contact"),await N()):F("Abdominal exam section has errors")},async buildVitals(){return[...await Y(this.ANCVitals),...await Q(this.ANCVitals)]},async buildMaternalExam(){return[...await J(this.pallor),...await Q(this.pallor),...await Y(this.pallor),...await J(this.respiratory),...await Q(this.respiratory),...await Y(this.respiratory),...await Q(this.breastExam),...await Y(this.breastExam),...await J(this.breastExam),...await Q(this.vaginalInspection),...await Y(this.vaginalInspection),...await J(this.vaginalInspection),...await Q(this.cervicalExam),...await Y(this.cervicalExam),...await J(this.cervicalExam),...await Q(this.oedemaPresence),...await Y(this.oedemaPresence),...await J(this.oedemaPresence)]},async buildAbdominalExam(){return[...await Y(this.fetalAssessment),...await J(this.fetalAssessment),...await Q(this.fetalAssessment),...await Y(this.fetalDetails),...await J(this.fetalDetails),...await Q(this.fetalDetails)]},async buildPresentingSigns(){return[...await Y(this.presentingSigns),...await J(this.presentingSigns),...await Q(this.presentingSigns)]},async saveVitals(){const a=B.getUserID(),t=new R(this.patient.patientID,a);await t.onFinish(this.ANCVitals)},async validaterowData(){var a;const t=B.getUserID(),e=new R(this.patient.patientID,t);U.getAgeInYears(null===(a=this.patient)||void 0===a||null===(a=a.personInformation)||void 0===a?void 0:a.birthdate),this.hasValidationErrors=[];let i=!1;return this.ANCVitals.forEach((a,t)=>{var s;null!=a&&null!==(s=a.data)&&void 0!==s&&s.rowData&&a.data.rowData.forEach((a,s)=>{a.colData.some((a,n)=>{const l=e.validator(a);return a.name,(null==l?void 0:l.length)>0?(i=!0,this.ANCVitals[t].data.rowData[s].colData[n].alertsErrorMassage=l.flat(1/0)[0]):this.ANCVitals[t].data.rowData[s].colData[n].alertsErrorMassage="",!1})})}),this.ANCVitals.validationStatus=!i,i},async saveMaternalExam(){if(this.pallor.length>=0||this.cervicalExam.length>=0||this.vaginalInspection.length>=0||this.breastExam.length>=0){const a=B.getUserID(),e=new t(this.patient.patientID,a);if(!(await e.createEncounter()))return C("Unable to create maternal exam encounter");if(!(await e.saveObservationList(await this.buildMaternalExam())))return C("Unable to create maternal exam details!");M("Maternal exam details have been created")}console.log(await this.buildMaternalExam())},async saveAbdominalExam(){if(this.fetalAssessment.length>=0||this.fetalDetails.length>=0){const a=B.getUserID(),t=new ta(this.patient.patientID,a);if(!(await t.createEncounter()))return C("Unable to create abdominal exam encounter");if(!(await t.saveObservationList(await this.buildAbdominalExam())))return C("Unable to create abdominal exam details!");M("Abdominal exam details have been created")}console.log(await this.buildAbdominalExam())},async savePresentingSigns(){if(this.presentingSigns.length>=0){const a=B.getUserID(),t=new ea(this.patient.patientID,a);if(!(await t.createEncounter()))return C("Unable to create presenting signs encounter");if(!(await t.saveObservationList(await this.buildPresentingSigns())))return C("Unable to create presenting signs details!");M("Presenting signs details have been created")}console.log(await this.buildPresentingSigns())},openModal(){V(H)}}});a("default",T(ia,[["render",function(a,t,e,i,s,n){const l=I("Toolbar"),r=I("DemographicBar"),o=I("Stepper"),c=I("ion-content"),d=I("BasicFooter"),u=I("ion-page");return E(),f(u,null,{default:j(()=>[_(l),_(c,{fullscreen:!0},{default:j(()=>[_(r),_(o,{stepperTitle:"Physical examination",wizardData:a.wizardData,onUpdateStatus:a.markWizard,StepperData:a.StepperData,backUrl:a.userRoleSettings.url,backBtn:a.userRoleSettings.btnName,getSaveFunction:a.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),_(d,{onFinishBtn:t[0]||(t[0]=t=>a.saveData())})]),_:1})}]]))}}});
