System.register(["./index-legacy-BFNDj9l5.js","./vendor-legacy-DAxRaqT3.js"],function(t,a){"use strict";var e,i,l,s,o,r,n,u,v,D,d,B;return{setters:[t=>{e=t.aA,i=t.P,l=t.bR,s=t.bM,o=t.bk,r=t.H,n=t.ag,u=t.bb,v=t.Q,D=t.u},t=>{d=t.d,B=t.ah}],execute:function(){t("_",d({data:()=>({BMI:{},BPStatus:{},vitalsData:{}}),computed:{...B(D,["patient"])},methods:{async setTodayVitals(){var t;const a=r.getAgeInYears(null===(t=this.patient)||void 0===t||null===(t=t.personInformation)||void 0===t?void 0:t.birthdate),e=["Height (cm)","Weight","Systolic","Diastolic","Temperature","Pulse","SAO2","Respiratory rate"].map(async t=>{const e=await n.getFirstObsDatetime(this.patient.patientID,t);e&&r.toStandardHisFormat(e)==r.sessionDate()?("Weight"==t&&u(this.vitalsData,"Height And Weight Not Done","displayNone",!0),"Systolic"==t&&u(this.vitalsData,"Blood Pressure Not Done","displayNone",!0),"Pulse"==t&&u(this.vitalsData,"Pulse Rate Not Done","displayNone",!0),"Respiratory rate"==t&&u(this.vitalsData,"Respiratory rate Not Done","displayNone",!0),v(this.vitalsData,t,"value",await n.getFirstValueNumber(this.patient.patientID,t,r.sessionDate())),v(this.vitalsData,t,"disabled",!0)):v(this.vitalsData,t,"value",""),"Respiratory rate"===t&&a<=5&&(v(this.vitalsData,t,"required",!0),v(this.vitalsData,t,"inputHeader","Respiratory rate*"))});await Promise.all(e)},async setBMI(t,a){var i,l,s,n;null!==(i=this.patient)&&void 0!==i&&null!==(i=i.personInformation)&&void 0!==i&&i.gender&&null!==(l=this.patient)&&void 0!==l&&null!==(l=l.personInformation)&&void 0!==l&&l.birthdate&&null==e.vitalsHeight(t)&&null==e.vitalsWeight(a)?this.BMI=await o.getBMI(parseInt(a),parseInt(t),null===(s=this.patient)||void 0===s||null===(s=s.personInformation)||void 0===s?void 0:s.gender,r.calculateAge(null===(n=this.patient)||void 0===n||null===(n=n.personInformation)||void 0===n?void 0:n.birthdate,r.sessionDate())):this.BMI={},await this.updateBMI()},async updateBMI(){var t,a,e,i,l,s;if(!this.vitalsData[0])return;const r=null!==(t=null===(a=this.BMI)||void 0===a?void 0:a.color)&&void 0!==t?t:[];this.updateRate("bmi","BMI "+(null!==(e=null===(i=this.BMI)||void 0===i?void 0:i.index)&&void 0!==e?e:""),"",{colors:r,value:null!==(l=null===(s=this.BMI)||void 0===s?void 0:s.result)&&void 0!==l?l:""},o.iconBMI(r))},async updateBP(t,a){var i,l,o,r;this.BPStatus=this.getBloodPressureStatus(t,a),null==e.vitalsSystolic(t)&&null==e.vitalsDiastolic(a)||(this.BPStatus={});const n=null!==(i=null===(l=this.BPStatus)||void 0===l?void 0:l.colors)&&void 0!==i?i:[];this.updateRate("bp",t+"/"+a,"mmHg",{colors:n,value:null!==(o=null===(r=this.BPStatus)||void 0===r?void 0:r.value)&&void 0!==o?o:""},s(n))},async updateRate(t,a,e,i,s=""){var o,r;if(!a)return;const n=a+" "+e,u=null!==(o=null==i?void 0:i.colors)&&void 0!==o?o:[];l(this.vitalsData,t,"icon",s||""),l(this.vitalsData,t,"textColor",u[1]),l(this.vitalsData,t,"index",n),l(this.vitalsData,t,"backgroundColor",u[0]),l(this.vitalsData,t,"value",null!==(r=null==i?void 0:i.value)&&void 0!==r?r:"")},getBloodPressureStatus(t,a){if(t&&a){let e,l,s,o;const r=(new i).getAge();return r<1?(e=75,l=100,s=50,o=70):r>=1&&r<6?(e=80,l=110,s=50,o=80):r>=6&&r<13?(e=85,l=120,s=55,o=80):r>=13&&r<18?(e=95,l=140,s=60,o=90):(e=100,l=130,s=60,o=90),t<e&&a<s?{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low BP "}:t>=e&&t<=l&&a>=s&&a<=o?{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal BP "}:t>140&&a>90?{colors:["#FECDCA","#B42318","#FDA19B"],value:"High BP"}:t<e?{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low BP  (Using Systolic Only)"}:t>=e&&t<=l?{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal BP  (Using Systolic Only)"}:{colors:["#FECDCA","#B42318","#FDA19B"],value:"High BP  (Using Systolic Only)"}}},getTemperatureStatus(t){if(!t||null!=e.vitalsTemperature(t))return{};{let a,e;const l=(new i).getAge();if(l<=1||l>=1&&l<=18||l>=19&&l<=64||l>=65?(a=35.5,e=37.4):(a="",e=""),t<a)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low Temperature "};if(t>=a&&t<=e)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal Temperature "};if(t>e)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High Temperature "}}},getPulseRateStatus(t){if(null==e.vitalsPulseRate(t)){let a,e;const l=(new i).getAge();if(l<=.25?(a=100,e=160):l>=.25&&l<=1||l>=1&&l<=2?(a=80,e=120):l>=6&&l<=12?(a=70,e=100):l>=13&&l<=18?(a=55,e=90):l>=18?(a=60,e=100):(a="",e=""),t<a)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low Pulse Rate "};if(t>=a&&t<=e)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal Pulse Rate "};if(t>e)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High Pulse Rate "}}},getOxygenSaturationStatus(t){if(t&&null==e.vitalsOxygenSaturation(t)){let a=95;if(t<a)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low oxygen saturation"};if(t>=a&&t<=100)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal oxygen saturation"}}},getRespiratoryRateStatus(t){if(null==e.vitalsRespiratoryRate(t)){let a,e;const l=(new i).getAge();if(l<=1?(a=30,e=60):l>=1&&l<3?(a=24,e=40):l>=3&&l<=6?(a=22,e=34):l>=6&&l<=12?(a=18,e=30):l>=12&&l<=18?(a=12,e=16):l>=19?(a=12,e=20):(a="",e=""),t<a)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low respiratory rate"};if(t>=a&&t<=e)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal respiratory rate"};if(t>e)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High respiratory rate"}}}}}))}}});
