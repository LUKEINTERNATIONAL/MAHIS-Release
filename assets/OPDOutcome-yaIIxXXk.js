import{d as J,af as Be,G as ft,E as _t,ag as gt,ab as Ve,a1 as X,I as ht,a8 as yt,_ as Le,$ as bt,H as K,e as y,f as i,k as n,l as a,aT as Se,r as s,c as q,a as be,m as C,N as B,J as p,u,P as L,F as te,w as le,ar as Dt,O as ue,K as M,p as Oe,a0 as Te,e6 as at,e7 as st,b5 as Fe,e8 as ot,e9 as it,cX as lt,ea as rt,eb as ct,ec as ut,d0 as dt,bM as vn,ap as wt,at as fn,bU as _n,ai as je,ah as fe,b1 as oe,M as ae,bp as se,a9 as gn,Q as hn,bg as Ye,a2 as yn,bi as bn,a7 as Dn,bS as wn,bE as Cn,aa as mt}from"./vendor-B1apQUd8.js";import{bd as He,H as Ie,ad as z,bf as Ct,be as St,aW as It,u as ke,_ as re,k as xe,au as $e,av as Re,G as Ce,J as we,S as ye,aN as j,t as ie,M as Ne,aH as me,aI as kt,bB as Sn,bC as In,a_ as kn,ba as ge,a$ as he,bD as Pn,aK as En,P as xn,aO as pt,aU as Nn,s as An,aC as Ee,aD as On,ao as $n}from"./index-CZvvd7oI.js";import{l as _e}from"./lodash-NJiRuGo9.js";import{P as Mn}from"./patient_complaints_service-BOva4-z0.js";import{D as Pt}from"./DashBox-DB9sBvij.js";import{u as Tn}from"./useExposeFromStandardForm-BZJAN_8E.js";import{B as Ke}from"./BasicForm-CLwqIfBy.js";import{f as Xe,c as Et,a as xt}from"./formatServerData-CNJE1GD3.js";import{A as Fn,P as Bn,D as Ln,m as Rn}from"./NextAppointment-Csi1pXhr.js";import{D as Vn,b as Hn}from"./drug_prescription_service-A9j2ehL5.js";import{D as vt}from"./drug_service-DU3ILW2j.js";import{D as Un,A as Gn,R as Wn,a as qn}from"./Outcome-BIAbV8AK.js";const zn=J({name:"Menu",components:{IonContent:yt,IonHeader:ht,IonItem:X,IonList:Ve,IonMenu:gt,IonTitle:_t,IonToolbar:ft,List:He},computed:{...Be(ke,["patient"]),...Be(It,["presentingComplaints"])},data(){return{valueNumericArray:[],obsDatetime:[],graphIcon:St(["#006401"]),listIcon:Ct(["#636363"]),displayGraph:!0,orders:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],list:[],series:[{name:"",data:[]}]}},setup(){return{checkmark:bt,pulseOutline:Le}},watch:{$router:{async handler(){await this.updateList()},immediate:!0,deep:!0},patient:{async handler(){await this.updateList()},deep:!0}},async mounted(){await this.updateList()},methods:{async updateList(){const t=await z.getAll(this.patient.patientID,"Presenting complaint"),o=_e.isEmpty(t)?[]:Promise.all(t.map(async r=>r.value_coded?{name:await z.getConceptName(r.value_coded),obs_date:r.obs_datetime,duration:r.children[0].value_text}:[]));this.setListData(await o)},setListData(t){this.list=[],this.list.push({actionBtn:!1,class:"col_background",header:!0,minHeight:"--min-height: 20px;",containSize:4,display:["Date","Presenting Complains","Duration"]}),t.forEach(o=>{this.list.push({actionBtn:!1,minHeight:"--min-height:20px;",class:"col_background",containSize:4,display:[Ie.toStandardHisFormat(o.obs_date),o.name,o.duration]})})}}}),Yn={class:"modal_wrapper"};function jn(t,o,r,c,v,d){const g=K("list");return i(),y("div",Yn,[n("div",null,[a(g,{listData:t.list},null,8,["listData"])])])}const Kn=re(zn,[["render",jn],["__scopeId","data-v-30434e22"]]),Xn={key:0},Jn={style:{"align-content":"center"}},Qn={class:"ion-padding",slot:"content"},Zn=J({__name:"PresentingComplaints",setup(t,{expose:o}){const r=It(),{presentingComplaints:c}=Se(r),v=s(xe),d=s(!0),g=s(!1),O=s(!0),A=s(!1),w=s([]),x=s([]),k=s(),R=q(()=>[{componentType:"multiSelectInputField",header:"Presenting Complaints",name:"PresentingComplaints",trackBy:"concept_id",icon:xe.search,hideSelected:!0,validation:b=>T(b==null?void 0:b.name,w.value)?"Presenting complaint already added":$e.required(b),options:x.value,grid:{s:"6"}},{componentType:"inputField",header:"Duration",name:"duration",icon:xe.time,validation:b=>$e.isNotEmptyandNumber(b),grid:{s:"6"},unitOptions:[{label:"Hours",value:"Hours"},{label:"Days",value:"Days"},{label:"Weeks",value:"Weeks"},{label:"Months",value:"Months"},{label:"Years",value:"Years"}],unitValidation:b=>!b||b===""?"Please select a unit.":null},{componentType:"inputField",header:"Specify the presenting complaint(s)",name:"Other (specify)",icon:xe.editPen,validation:b=>T(b,w.value)?"Presenting complaint already added":$e.required(b),condition:b=>{var $;return(($=b==null?void 0:b.PresentingComplaints)==null?void 0:$.name)==="Other"}},{componentType:"Alert",condition:b=>{var $;return $e.required(($=b==null?void 0:b.PresentingComplaints)==null?void 0:$.name)!=null},backgroundColor:"lightyellow",textColor:"black",value:"Please search thoroughly for the complaint. If it is not listed, search and select the 'Other' option to specify the complaint.",name:"noMatchAlert"}]),{formRef:l}=Tn(),h=async()=>{x.value=await Mn.getComplaintsList("Presenting complaint"),we(c.value,"PresentingComplaints","multiSelectData",x.value)},S=()=>{d.value=!1,O.value=!1,g.value=!0},I=async()=>{var E,e;const b=(E=l.value)==null?void 0:E.getFormValues();((e=l.value)==null?void 0:e.validateForm())==null&&(P(b),g.value=!1,O.value=!0)},P=b=>{var _;const $=b.duration+" "+b.duration_unit,E=b.PresentingComplaints,e=E.name==="Other"?b["Other (specify)"]:E.name;w.value.push({actionBtn:!0,btn:["delete"],name:e,concept_id:E.concept_id,duration:E.duration,durationUnits:E.duration_unit,display:[e,$],data:[{concept_id:8578,value_coded:E.concept_id,obs_datetime:ye.getSessionDate(),child:[{concept_id:E.concept_id,value_text:$,obs_datetime:ye.getSessionDate()}]}]}),(_=l.value)==null||_.resetForm(),A.value=!0},T=(b,$)=>$.some(E=>E.name===b),N=b=>{w.value=w.value.filter($=>$.display[0]!==b.name)},H=async()=>{const b=await z.getObsByEncounterIdAndDate(j.PRESENTING_COMPLAINTS),$=w.value.flatMap(E=>E.data);if($.length<=0&&b.length<=0)return ie("Presenting complaints is required");$.length<=0||(await z.addObsToEncounterPatient($,j.PRESENTING_COMPLAINTS),Ne("Presenting complaints saved successful"),w.value=[])};return be(async()=>{await h()}),o({onSubmit:H}),(b,$)=>{const E=K("ion-row"),e=K("ion-label"),_=K("ion-accordion"),F=K("ion-accordion-group");return i(),y(te,null,[a(Pt,{status:d.value,content:"No presenting complaints added"},null,8,["status"]),A.value?(i(),y("span",Xn,[a(He,{listData:w.value,"onClicked:delete":N},null,8,["listData"])])):C("",!0),g.value?(i(),B(E,{key:1},{default:p(()=>[a(Re,{formData:R.value,ref_key:"formRef",ref:l},null,8,["formData"]),n("div",Jn,[a(Ce,{fill:"clear",icon:v.value.plus,iconSlot:"icon-only","onClicked:btn":$[0]||($[0]=G=>I()),name:"Save"},null,8,["icon"])])]),_:1})):C("",!0),O.value?(i(),B(E,{key:2,style:{"margin-top":"10px"}},{default:p(()=>[a(Ce,{fill:"clear",icon:v.value.plus,iconSlot:"icon-only","onClicked:btn":$[1]||($[1]=G=>S()),name:"Add new presenting complaints"},null,8,["icon"])]),_:1})):C("",!0),a(E,null,{default:p(()=>[a(F,{ref_key:"accordionGroup",ref:k,class:"previousView"},{default:p(()=>[a(_,{value:"first","toggle-icon-slot":"start",style:{"border-radius":"10px","background-color":"#fff"}},{default:p(()=>[a(u(X),{slot:"header",color:"light"},{default:p(()=>[a(e,{class:"previousLabel"},{default:p(()=>$[2]||($[2]=[L("Previous presenting complaints",-1)])),_:1,__:[2]})]),_:1}),n("div",Qn,[a(Kn)])]),_:1})]),_:1},512)]),_:1})],64)}}}),ea=re(Zn,[["__scopeId","data-v-a95bcc0f"]]),ta=q(()=>[{componentType:"radioButtonField",header:"Eye opening response",name:"Eye opening response",obsValueType:"value_coded",type:"inline",options:[{label:"Spontaneously",value:"Spontaneously"},{label:"To speech",value:"To speech"},{label:"To pain",value:"To pain"},{label:"No response",value:"No response"}]},{componentType:"Dashes"},{componentType:"radioButtonField",header:"Best verbal response",name:"Best verbal response",obsValueType:"value_coded",type:"inline",options:[{label:"Oriented to time, place and person",value:"Oriented to time, place and person"},{label:"Confused",value:"Confused"},{label:"Inappropriate words",value:"Inappropriate words"},{label:"Incomprehensible sounds",value:"Incomprehensible sounds"},{label:"No response",value:"No response"}]},{componentType:"Dashes"},{componentType:"radioButtonField",header:"Best motor response",name:"Best motor response",obsValueType:"value_coded",type:"inline",options:[{label:"Obeys commands",value:"Obeys commands"},{label:"Moves to localised pain",value:"Moves to localised pain"},{label:"Flexion withdrawal from pain",value:"Flexion withdrawal from pain"},{label:"Abnormal flexion (decorticate)",value:"Abnormal flexion (decorticate)"},{label:"Abnormal extension (decerebrate)",value:"Abnormal extension (decerebrate)"},{label:"No response",value:"No response"}]}]),na=q(()=>[{componentType:"radioButtonField",header:"Eye opening response",name:"Eye opening response",obsValueType:"value_coded",type:"inline",options:[{label:"Directed eye movements",value:"Directed eye movements"},{label:"Not directed",value:"Not directed"}]},{componentType:"Dashes"},{componentType:"radioButtonField",header:"Best verbal response",name:"Best verbal response",obsValueType:"value_coded",type:"inline",options:[{label:"Appropriate cry",value:"Appropriate cry"},{label:"Inappropriate cry or moan",value:"Inappropriate cry or moan"},{label:"No cry",value:"No cry"}]},{componentType:"Dashes"},{componentType:"radioButtonField",header:"Best motor response",name:"Best motor response",obsValueType:"value_coded",type:"inline",options:[{label:"Localizes pain",value:"Localizes pain"},{label:"Withdraws from pain",value:"Withdraws from pain"},{label:"Non specific or no response",value:"Non specific or no response"}]}]),Nt={Spontaneously:4,"To speech":3,"To pain":2,"No response":1},At={"Oriented to time, place and person":5,Confused:4,"Inappropriate words":3,"Incomprehensible sounds":2,"No response":1},Ot={"Obeys commands":6,"Moves to localised pain":5,"Flexion withdrawal from pain":4,"Abnormal flexion (decorticate)":3,"Abnormal extension (decerebrate)":2,"No response":1},$t={"Not directed":0,"Directed eye movements":1},Mt={"Non specific or no response":0,"Withdraws from pain":1,"Localizes pain":2},Tt={"No cry":0,"Inappropriate cry or moan":1,"Appropriate cry":2},aa={class:"allergies-container"},sa={key:0,class:"no-allergies"},oa={key:1,class:"date-groups"},ia=["onClick"],la={class:"date-info"},ra={class:"date-text"},ca={class:"allergy-count"},ua={class:"card-header"},da={class:"allergy-type"},ma={class:"card-content"},pa=J({__name:"AllergiesListing",setup(t){const o=ke(),{patient:r}=Se(o),c=s({}),v={antiviral:/abacavir|lamivudine|lopinavir|ritonavir|zidovudine|efavirenz|tenofovir/i,antibiotic:/penicillin|amoxicillin|cephalexin|azithromycin|ciprofloxacin|doxycycline/i,analgesic:/aspirin|ibuprofen|acetaminophen|morphine|codeine|tramadol/i,cardiac:/metoprolol|lisinopril|amlodipine|atorvastatin|warfarin/i,activated:/activated\s+charcoal/i},d={985:{name:"Drug Allergy",icon:"medical-outline",severity:"danger"},7759:{name:"Location/Environmental",icon:"location-outline",severity:"info"},7579:{name:"Medical Condition",icon:"heart-outline",severity:"warning"},drug:{name:"Drug Allergy",icon:"medical-outline",severity:"danger"},food:{name:"Food Allergy",icon:"restaurant-outline",severity:"danger"},environmental:{name:"Environmental",icon:"leaf-outline",severity:"warning"},contact:{name:"Contact Allergy",icon:"hand-left-outline",severity:"warning"},unknown:{name:"Unknown Allergy",icon:"help-circle-outline",severity:"info"}},g=l=>{const h=l.toLowerCase();return v.antiviral.test(h)?{type:"Antiviral Medication",icon:"shield-outline"}:v.antibiotic.test(h)?{type:"Antibiotic",icon:"bandage-outline"}:v.analgesic.test(h)?{type:"Pain Medication",icon:"fitness-outline"}:v.cardiac.test(h)?{type:"Cardiac Medication",icon:"heart-outline"}:v.activated.test(h)?{type:"Detoxification Agent",icon:"flask-outline"}:{type:"Medication",icon:"medical-outline"}},O=q(()=>{var l,h,S;return((S=(h=(l=r.value)==null?void 0:l.allergies)==null?void 0:h.saved)==null?void 0:S.length)>0}),A=q(()=>O.value?r.value.allergies.saved.map(l=>{var N;const h=((N=l.concept_id)==null?void 0:N.toString())||"unknown",S=d[h]||d.unknown;let I="Unknown",P=null;return l.value_text&&l.value_text!=="Unknown"&&l.value_text!==""?(I=l.value_text,h==="985"&&(P=g(l.value_text))):l.concept_name&&(I=l.concept_name),{...P?{...S,name:P.type,icon:P.icon}:S,displayValue:I,conceptId:l.concept_id,date:l.obs_datetime||l.encounter_datetime,providerId:l.provider_id,locationId:l.location_id,encounterId:l.encounter_id,isDrug:h==="985",raw:l}}):[]),w=q(()=>{const l={};A.value.forEach(I=>{const P=I.date?k(I.date):"Unknown Date";l[P]||(l[P]=[]),l[P].push(I)});const h={};return Object.keys(l).sort((I,P)=>I==="Unknown Date"?1:P==="Unknown Date"?-1:new Date(P).getTime()-new Date(I).getTime()).forEach(I=>{h[I]=l[I]}),h}),x=l=>{c.value[l]=!c.value[l]},k=l=>{if(!l)return"Unknown Date";try{return new Date(l).toISOString().split("T")[0]}catch(h){return"Unknown Date"}},R=l=>{if(l==="Unknown Date")return"Unknown Date";try{const h=new Date(l),S=Ie.sessionDate(),I=new Date(S),P=new Date(I);P.setDate(P.getDate()-1);const T=h.toDateString(),N=I.toDateString(),H=P.toDateString();return T===N?"Today":T===H?"Yesterday":h.toLocaleDateString("en-US",{weekday:"long",year:"numeric",month:"long",day:"numeric"})}catch(h){return l}};return le(()=>w.value,l=>{const h=Object.keys(l);h.length>0&&(c.value[h[0]]=!0)},{immediate:!0}),le(()=>{var l;return(l=r.value)==null?void 0:l.allergies},l=>{console.log("Allergies updated:",l)},{deep:!0}),be(()=>{var l;console.log("Allergies component mounted",(l=r.value)==null?void 0:l.allergies)}),(l,h)=>{const S=K("ion-icon"),I=K("ion-label");return i(),y("div",aa,[a(I,{class:"section-title"},{default:p(()=>[a(S,{icon:u(Dt),class:"alert-icon"},null,8,["icon"]),a(I,null,{default:p(()=>h[0]||(h[0]=[L("Allergies (Medication, Healthcare items, Environment and Food)",-1)])),_:1,__:[0]})]),_:1}),O.value?(i(),y("div",oa,[(i(!0),y(te,null,ue(w.value,(P,T)=>(i(),y("div",{key:T,class:"date-group"},[n("div",{class:Oe(["date-header",{expanded:c.value[T]}]),onClick:N=>x(T)},[n("div",la,[a(S,{name:"calendar-outline",class:"date-icon"}),n("span",ra,M(R(T)),1),n("span",ca,"("+M(P.length)+" "+M(P.length===1?"allergy":"allergies")+")",1)]),a(S,{name:"chevron-down-outline",class:Oe(["expand-icon",{rotated:c.value[T]}])},null,8,["class"])],10,ia),n("div",{class:Oe(["allergies-grid",{collapsed:!c.value[T]}])},[(i(!0),y(te,null,ue(P,(N,H)=>(i(),y("div",{key:H,class:Oe(["allergy-card",N.severity])},[n("div",ua,[a(S,{name:N.icon,class:"allergy-icon"},null,8,["name"]),n("span",da,M(N.name),1)]),n("div",ma,[n("div",{class:Oe(["allergy-value",{"drug-name":N.isDrug}])},M(N.displayValue),3)])],2))),128))],2)]))),128))])):(i(),y("div",sa,[a(S,{name:"checkmark-circle-outline",class:"no-allergies-icon"}),h[1]||(h[1]=n("p",null,"No known allergies",-1))]))])}}}),Ft=re(pa,[["__scopeId","data-v-a62faff9"]]),va=J({name:"VisitHistory",components:{AllergiesListing:Ft,IonIcon:Te},setup(){const t=kt();return{selectedAllergiesList2:q(()=>t.selectedMedicalAllergiesList),alertCircleOutline:Dt,documentTextOutline:_n,femaleOutline:fn,medicalOutline:wt,warningOutline:vn,bodyOutline:at,eyeOutline:dt,nutritionOutline:ut,fitnessOutline:it,pulseOutline:Le,earOutline:ct,happyOutline:rt,manOutline:lt,moveOutline:ot,addOutline:Fe,scanOutline:st}},data(){return{presentingComplaintsWithDuration:[],pastMedicalHistory:[],levelOfConsciousness:{eyeResponse:null,verbalResponse:null,motorResponse:null},pregnancy:{patientPregnant:null,breastFeeding:null},physicalExamCategories:{Eyes:{icon:dt,abnormalities:[],normal:!1},Mouth:{icon:ut,abnormalities:[],normal:!1},Ears:{icon:ct,abnormalities:[],normal:!1},Face:{icon:rt,abnormalities:[],normal:!1},Neck:{icon:lt,abnormalities:[],normal:!1},Chest:{icon:it,abnormalities:[],normal:!1},"Chest Movement":{icon:ot,abnormalities:[],normal:!1},"Heart Sounds":{icon:Le,abnormalities:[],normal:!1},"Breath Sounds":{icon:Fe,abnormalities:[],normal:!1},"Added Breath Sounds":{icon:Fe,abnormalities:[],normal:!1},"Abdominal Inspection":{icon:st,abnormalities:[],normal:!1},"Genital Examination":{icon:at,abnormalities:[],normal:!1}}}},computed:{...Be(ke,["patient"]),hasLevelOfConsciousness(){return this.levelOfConsciousness.eyeResponse||this.levelOfConsciousness.verbalResponse||this.levelOfConsciousness.motorResponse},hasPresentingComplaints(){var t;return((t=this.presentingComplaintsWithDuration)==null?void 0:t.length)>0},hasPregnancyData(){return this.pregnancy.patientPregnant||this.pregnancy.breastFeeding},hasPastMedicalHistory(){var t;return((t=this.uniquePastMedicalHistory)==null?void 0:t.length)>0},hasAllergies(){var t,o;return((o=(t=this.selectedAllergiesList2)==null?void 0:t.filter(r=>r.selected))==null?void 0:o.length)>0},hasPhysicalExam(){return Object.values(this.physicalExamCategories).some(t=>t.abnormalities.length>0||t.normal)},uniquePastMedicalHistory(){return[...new Set(this.pastMedicalHistory)]},uniquePresentingComplaints(){return[...new Set(this.presentingComplaintsWithDuration.map(t=>t.name))]},isMinor(){var t,o;return Ie.getAgeInYears((o=(t=this.patient)==null?void 0:t.personInformation)==null?void 0:o.birthdate)<18},gcsScore(){var O,A,w;if(!this.hasLevelOfConsciousness)return null;const t=this.levelOfConsciousness.eyeResponse,o=this.levelOfConsciousness.motorResponse,r=this.levelOfConsciousness.verbalResponse,c=t&&(O=(this.isMinor?$t:Nt)[t])!=null?O:0,v=o&&(A=(this.isMinor?Mt:Ot)[o])!=null?A:0,d=r&&(w=(this.isMinor?Tt:At)[r])!=null?w:0,g=c+v+d;return"(M ".concat(v," V ").concat(d," E ").concat(c,") ").concat(g,"/").concat(this.isMinor?5:15)}},methods:{async updateData(){var t;(t=this.patient)!=null&&t.patientID&&(await this.loadPresentingComplaints(),await this.loadPastMedicalHistory(),await this.loadLevelOfConsciousness(),await this.loadPregnancyStatus(),await this.loadPhysicalExam())},async loadPresentingComplaints(){try{const t=await z.getObsByEncounterIdAndDate(j.PRESENTING_COMPLAINTS);this.presentingComplaintsWithDuration=[];const o=t.filter(r=>r.concept_name==="Presenting complaint");for(const r of o){const c=t.find(d=>d.concept_id===r.value_coded&&d.concept_name!=="Presenting complaint"),v=await me.getConceptName(r.value_coded);this.presentingComplaintsWithDuration.push({name:v,duration:(c==null?void 0:c.value_text)||"Duration not specified"})}}catch(t){console.error("Error loading presenting complaints:",t)}},async loadPastMedicalHistory(){try{const o=(await z.getObsByEncounterIdAndDate(j.PAST_MEDICAL_HISTORY)).filter(r=>r.concept_name==="Chronic disease");this.pastMedicalHistory=await Promise.all(o.map(async r=>await me.getConceptName(r.value_coded)))}catch(t){console.error("Error loading past medical history:",t)}},async loadLevelOfConsciousness(){try{const t=await z.getObsByEncounterIdAndDate(j.ASSESSMENT);if(t&&Array.isArray(t)){const o=t.find(v=>v.concept_name==="Eye opening response");this.levelOfConsciousness.eyeResponse=o!=null&&o.value_coded?await me.getConceptName(o.value_coded):null;const r=t.find(v=>v.concept_name==="Best verbal response");this.levelOfConsciousness.verbalResponse=r!=null&&r.value_coded?await me.getConceptName(r.value_coded):null;const c=t.find(v=>v.concept_name==="Best motor response");this.levelOfConsciousness.motorResponse=c!=null&&c.value_coded?await me.getConceptName(c.value_coded):null}}catch(t){console.error("Error loading level of consciousness:",t)}},async loadPregnancyStatus(){try{const t=await z.getObsByEncounterIdAndDate(j.PREGNANCY_STATUS);if(t&&Array.isArray(t)){const o=t.find(c=>c.concept_name==="Patient pregnant");this.pregnancy.patientPregnant=o!=null&&o.value_coded?await me.getConceptName(o.value_coded):null;const r=t.find(c=>c.concept_name==="Is patient breast feeding?");this.pregnancy.breastFeeding=r!=null&&r.value_coded?await me.getConceptName(r.value_coded):null}}catch(t){console.error("Error loading pregnancy status:",t)}},async loadPhysicalExam(){var t,o,r;try{const c=await z.getObsByEncounterIdAndDate(j.PHYSICAL_EXAMINATION);Object.values(this.physicalExamCategories).forEach(v=>{v.abnormalities=[],v.normal=!1});for(const v of c){const d=v.concept_name||((r=(o=(t=v.concept)==null?void 0:t.concept_names)==null?void 0:o.find(g=>g.concept_name_type==="FULLY_SPECIFIED"))==null?void 0:r.name);if(d){if(d.includes("normal")||d.includes("Normal")){v.value_coded===1065&&(d.includes("Eyes normal")?this.physicalExamCategories.Eyes.normal=!0:d.includes("Mouth normal")?this.physicalExamCategories.Mouth.normal=!0:d.includes("Ears normal")?this.physicalExamCategories.Ears.normal=!0:d.includes("Face normal")?this.physicalExamCategories.Face.normal=!0:d.includes("Neck normal")?this.physicalExamCategories.Neck.normal=!0:d.includes("Chest inspection normal")?this.physicalExamCategories.Chest.normal=!0:d.includes("Heart sounds normal")?this.physicalExamCategories["Heart Sounds"].normal=!0:d.includes("Breath sounds normal")?this.physicalExamCategories["Breath Sounds"].normal=!0:d.includes("Abdominal inspection normal")?this.physicalExamCategories["Abdominal Inspection"].normal=!0:d.includes("Genital examination normal")&&(this.physicalExamCategories["Genital Examination"].normal=!0));continue}if(v.value_coded){const g=await me.getConceptName(v.value_coded);d.includes("Abnormality for mouth")?this.physicalExamCategories.Mouth.abnormalities.push(g):d.includes("Abnormality for ears")?this.physicalExamCategories.Ears.abnormalities.push(g):d.includes("Abnormality for face")?this.physicalExamCategories.Face.abnormalities.push(g):d.includes("Breath sounds abnormality")?this.physicalExamCategories["Breath Sounds"].abnormalities.push(g):d.includes("Abnormalities when added")?this.physicalExamCategories["Added Breath Sounds"].abnormalities.push(g):d.includes("Chest movements")?this.physicalExamCategories["Chest Movement"].abnormalities.push(g):d.includes("Genital examination abnormality")?this.physicalExamCategories["Genital Examination"].abnormalities.push(g):d.includes("Vulva inspection abnormalities")&&this.physicalExamCategories["Genital Examination"].abnormalities.push(g)}}}}catch(c){console.error("Error loading physical exam:",c)}}},watch:{patient:{async handler(){await this.updateData()},deep:!0}},async mounted(){await this.updateData()}}),fa={class:"visit-container"},_a={class:"visit-sections"},ga={key:0,class:"visit-section"},ha={class:"section-header"},ya={class:"section-content"},ba={key:0,class:"info-item"},Da={class:"info-value"},wa={key:1,class:"info-item"},Ca={class:"info-value"},Sa={key:2,class:"info-item"},Ia={class:"info-value"},ka={key:3,class:"info-item"},Pa={class:"info-value highlight"},Ea={key:1,class:"visit-section"},xa={class:"section-header"},Na={class:"complaints-container"},Aa={class:"complaint-name"},Oa={class:"complaint-duration"},$a={key:2,class:"visit-section"},Ma={class:"section-header"},Ta={class:"section-content"},Fa={key:0,class:"info-item"},Ba={class:"info-value highlight"},La={key:1,class:"info-item"},Ra={class:"info-value highlight"},Va={key:3,class:"visit-section"},Ha={class:"section-header"},Ua={class:"tags-container"},Ga={class:"allergies-section"},Wa={class:"allergies-container"},qa={key:4,class:"visit-section"},za={class:"section-header"},Ya={class:"exam-section"},ja={key:0,class:"exam-category"},Ka={class:"exam-category-header"},Xa={class:"exam-items"},Ja={key:1,class:"exam-item normal"};function Qa(t,o,r,c,v,d){const g=K("ion-icon"),O=K("AllergiesListing");return i(),y("div",fa,[o[11]||(o[11]=n("div",{class:"visit-header"},[n("h5",null,"Patient's Clinical Assessment Summary")],-1)),n("div",_a,[t.hasLevelOfConsciousness?(i(),y("div",ga,[n("div",ha,[a(g,{icon:t.alertCircleOutline,class:"section-icon"},null,8,["icon"]),o[0]||(o[0]=n("h3",null,"Level of Consciousness",-1))]),n("div",ya,[t.levelOfConsciousness.eyeResponse?(i(),y("div",ba,[o[1]||(o[1]=n("span",{class:"info-label"},"Eye Response:",-1)),n("span",Da,M(t.levelOfConsciousness.eyeResponse),1)])):C("",!0),t.levelOfConsciousness.verbalResponse?(i(),y("div",wa,[o[2]||(o[2]=n("span",{class:"info-label"},"Verbal Response:",-1)),n("span",Ca,M(t.levelOfConsciousness.verbalResponse),1)])):C("",!0),t.levelOfConsciousness.motorResponse?(i(),y("div",Sa,[o[3]||(o[3]=n("span",{class:"info-label"},"Motor Response:",-1)),n("span",Ia,M(t.levelOfConsciousness.motorResponse),1)])):C("",!0),t.gcsScore?(i(),y("div",ka,[o[4]||(o[4]=n("span",{class:"info-label"},"Score:",-1)),n("span",Pa,M(t.gcsScore),1)])):C("",!0)])])):C("",!0),t.hasPresentingComplaints?(i(),y("div",Ea,[n("div",xa,[a(g,{icon:t.documentTextOutline,class:"section-icon"},null,8,["icon"]),o[5]||(o[5]=n("h3",null,"Presenting Complaints",-1))]),n("div",Na,[(i(!0),y(te,null,ue(t.presentingComplaintsWithDuration,(A,w)=>(i(),y("div",{class:"complaint-item",key:w},[n("div",Aa,M(A.name),1),n("div",Oa,M(A.duration),1)]))),128))])])):C("",!0),t.hasPregnancyData?(i(),y("div",$a,[n("div",Ma,[a(g,{icon:t.femaleOutline,class:"section-icon"},null,8,["icon"]),o[6]||(o[6]=n("h3",null,"Pregnancy Status",-1))]),n("div",Ta,[t.pregnancy.patientPregnant?(i(),y("div",Fa,[o[7]||(o[7]=n("span",{class:"info-label"},"Pregnant:",-1)),n("span",Ba,M(t.pregnancy.patientPregnant),1)])):C("",!0),t.pregnancy.breastFeeding?(i(),y("div",La,[o[8]||(o[8]=n("span",{class:"info-label"},"Breastfeeding:",-1)),n("span",Ra,M(t.pregnancy.breastFeeding),1)])):C("",!0)])])):C("",!0),t.hasPastMedicalHistory?(i(),y("div",Va,[n("div",Ha,[a(g,{icon:t.medicalOutline,class:"section-icon"},null,8,["icon"]),o[9]||(o[9]=n("h3",null,"Medical History",-1))]),n("div",Ua,[(i(!0),y(te,null,ue(t.uniquePastMedicalHistory,(A,w)=>(i(),y("div",{class:"medical-tag",key:w},M(A),1))),128))])])):C("",!0),n("div",Ga,[n("div",Wa,[a(O)])]),t.hasPhysicalExam?(i(),y("div",qa,[n("div",za,[a(g,{icon:t.bodyOutline,class:"section-icon"},null,8,["icon"]),o[10]||(o[10]=n("h3",null,"Physical Examination",-1))]),n("div",Ya,[(i(!0),y(te,null,ue(t.physicalExamCategories,(A,w)=>(i(),y(te,{key:w},[A.abnormalities.length>0||A.normal?(i(),y("div",ja,[n("div",Ka,[a(g,{icon:A.icon},null,8,["icon"]),n("h4",null,M(w),1)]),n("div",Xa,[A.abnormalities.length>0?(i(!0),y(te,{key:0},ue(A.abnormalities,(x,k)=>(i(),y("div",{class:"exam-item",key:k},M(x),1))),128)):(i(),y("div",Ja," Normal examination "))])])):C("",!0)],64))),128))])])):C("",!0)])])}const Za=re(va,[["render",Qa],["__scopeId","data-v-b2ab1221"]]),es={class:"modal_wrapper"},ts=J({__name:"LevelOfConsciousness",setup(t,{expose:o}){var A,w;const r=ke(),{patient:c}=Se(r),v=s(Ie.getAgeInYears((w=(A=c==null?void 0:c.value)==null?void 0:A.personInformation)==null?void 0:w.birthdate)),d=s(null),g=q(()=>{var N,H,b,$;const x=((N=d.value)==null?void 0:N.getFormValues())||{},k=x["Eye opening response"]||"",R=x["Best motor response"]||"",l=x["Best verbal response"]||"",h=v.value<18,S=(H=(h?$t:Nt)[k])!=null?H:0,I=(b=(h?Mt:Ot)[R])!=null?b:0,P=($=(h?Tt:At)[l])!=null?$:0,T=S+I+P;return"(M ".concat(I," V ").concat(P," E ").concat(S,") ").concat(T,"/").concat(h?5:15)});return o({onSubmit:async()=>{var k;if(!d.value){console.error("Form reference is not available");return}const x=((k=d.value)==null?void 0:k.getFormValues())||{};x["Eye opening response"]||x["Best motor response"]||x["Best verbal response"]?(await z.buildAddObsToEncounterPatient(x,j.ASSESSMENT),d.value.resetForm(),Ne("Level of Consciousness saved successfully")):ie(" No level of consciousness data to save ")}}),(x,k)=>(i(),y("div",es,[v.value<18?(i(),B(Re,{key:0,formData:u(na),ref_key:"formRef",ref:d},null,8,["formData"])):(i(),B(Re,{key:1,formData:u(ta),ref_key:"formRef",ref:d},null,8,["formData"])),n("h5",null,M(g.value),1)]))}}),ns={class:"modal_wrapper"},as=J({__name:"PregnancyBreastfeeding",setup(t,{expose:o}){const r=Sn(),{pregnancy:c}=Se(r),v=()=>{};return o({onSubmit:async()=>{const g=await Xe(c.value);g.length>0?(await z.addObsToEncounterPatient(g,j.PREGNANCY_STATUS),Ne("Pregnancy status saved successfully")):ie("No pregnancy status data to save ")}}),(g,O)=>(i(),y("div",ns,[a(Ke,{contentData:u(c),"onUpdate:inputValue":v},null,8,["contentData"])]))}}),ss={class:"modal_wrapper"},os={class:"uniform_columns"},is=J({__name:"PastMedicalHistory",setup(t,{expose:o}){const r=In(),{pastMedicalHistory:c}=Se(r),v=s([]);be(()=>{v.value=r.getInitial(),d()}),le(c,()=>{d()},{deep:!0});const d=()=>{var x;const w=["TB","Chronic Obstructive Pulmonary Disease (COPD)","Asthma","Epilepsy","Previous stroke","Peptic Ulcer Disease (PUD)","Mental disorder","Bleeding disorders","Hypertension","HIV Positive","Diabetes Mellitus"];(x=kn(c.value,"None"))!=null&&x.checked?w.forEach(k=>{ge(c.value,"TB treatment","displayNone",!0),we(c.value,"TB drugs","displayNone",!0),we(c.value,"TB drug start date","displayNone",!0),ge(c.value,"Hypertension medication","displayNone",!0),we(c.value,"Current hypertension treatment regimen","displayNone",!0),ge(c.value,"HIV status","displayNone",!0),we(c.value,"ARV start date","displayNone",!0),ge(c.value,"Diabetes","displayNone",!0),ge(c.value,"Controlled by","displayNone",!0),he(c.value,k,"checked",!1),he(c.value,k,"disabled",!0)}):w.forEach(k=>{he(c.value,k,"disabled",!1)})},g=w=>{we(c.value,"TB drugs","popOverData",{filterData:!0,data:[{name:"Auramine 'O' (C.I. 41000) 50g"},{name:"Bedaquilline 100mg"},{name:"Clofazimine 100mg"},{name:"Clofazimine 50mg"},{name:"Cycloserine 125mg"},{name:"Cycloserine 250mg"},{name:"Delamanid 50mg"},{name:"Ethambutol 100mg"},{name:"Ethambutol 400mg"},{name:"Ethionamide 250mg"},{name:"Isoniazid 100mg "},{name:"Isoniazid 300mg"},{name:"Isoniazid / Rifapentine 300mg / 300mg"},{name:"Levofloxacin 100mg"},{name:"Levofloxacin 250mg"},{name:"Linezolid 600mg"},{name:"Moxifloxacin 400mg"},{name:"Pyrazinamide 400mg"},{name:"Rifabutin 150mg Capsules"},{name:"Rifampicin 150mg/isoniazid 75mg"},{name:"Rifampicin 75mg+INH 50mg dispersible"},{name:"Rifampicin 75mg+INH 50mg+Pyrazinamide 150mg dispersible"},{name:"Rifampicin150mg/Isoniazid75mg/Pyrazinamide 400mg/Ethambutol"}]}),we(c.value,"Current hypertension treatment regimen","popOverData",{filterData:!0,data:[{name:"Captopril 12.5mg"},{name:"Aspirin 75mg"},{name:"Hydrochlorothiazide 25mg"},{name:"Enalapril Meleate 5mg"},{name:"Enalapril Maleate 10mg"}]})},O=async()=>[...await Et(c.value),...await Xe(c.value),...await xt(c.value)];return o({onSubmit:async()=>{const w=await O();if(w.length===0){ie("No past medical history data to save");return}await z.addObsToEncounterPatient(w,j.PAST_MEDICAL_HISTORY),Ne("Past medical history saved successful")}}),(w,x)=>(i(),y("div",ss,[n("div",os,[a(Ke,{contentData:u(c),initialData:v.value,"onUpdate:inputValue":g,"onUpdate:selected":g},null,8,["contentData","initialData"])])]))}}),ls=re(is,[["__scopeId","data-v-49fdce72"]]),rs={class:"container"},cs=J({__name:"PhysicalExamination",setup(t,{expose:o}){const r=Pn(),c=ke(),{physicalExam:v}=Se(r),{patient:d}=Se(c),g=s([]);be(()=>{g.value=r.getInitial(),O(),A()}),le(v,()=>{O(),A()},{deep:!0});const O=()=>{En(v.value,"Physical examination")=="No"?ge(v.value,"Reason why physical examination not done","displayNone",!1):(ge(v.value,"Reason why physical examination not done","displayNone",!0),ge(v.value,"Reason why physical examination not done","selectedValue",""))},A=()=>{var R,l;const k=(l=(R=d.value)==null?void 0:R.personInformation)==null?void 0:l.gender;k=="M"&&(he(v.value,"Vulva examination","disabled",!0),he(v.value,"Visible bleeding","disabled",!0)),k=="F"&&(he(v.value,"Urethral meatus abnormal","disabled",!0),he(v.value,"Scrotal swelling","disabled",!0),he(v.value,"Tastes swelling","disabled",!0))},w=async()=>[...await Et(v.value),...await Xe(v.value),...await xt(v.value)];return o({onSubmit:async()=>{const k=await w();if(k.length===0){ie("No physical examination data to save");return}await z.addObsToEncounterPatient(k,j.PHYSICAL_EXAMINATION),Ne("Physical examination saved successful")}}),(k,R)=>{const l=K("ion-card-content"),h=K("ion-card");return i(),y("div",rs,[a(h,{class:"section"},{default:p(()=>[a(l,null,{default:p(()=>[a(Ke,{contentData:u(v),initialData:g.value},null,8,["contentData","initialData"])]),_:1})]),_:1})])}}}),us=re(cs,[["__scopeId","data-v-96d0ce9f"]]),ds={key:0},ms={class:"ion-padding",slot:"content"},ps={class:"nav-buttons"},vs={class:"ion-padding",slot:"content"},fs={class:"nav-buttons"},_s={class:"ion-padding",slot:"content"},gs={class:"nav-buttons"},hs={class:"ion-padding",slot:"content"},ys={class:"nav-buttons"},bs={class:"ion-padding",slot:"content"},Ds={class:"nav-buttons"},ws={class:"ion-padding",slot:"content"},Cs={class:"nav-buttons"},Ss=J({__name:"ClinicalAssessment",setup(t,{expose:o}){const r=s("loc"),c=s(0),v=s(!1),d=new xn,g=ke(),O=()=>{c.value++},A=s(null),w=s(null),x=s(null),k=s(null),R=s(null),l=s(null),h=[{id:"loc",label:"Level of consciousness",show:!0},{id:"pc",label:"Presenting complaints",show:!0},{id:"pbs",label:"Pregnancy and breastfeeding status",show:()=>d.isChildBearing()},{id:"pmh",label:"Past medical history",show:!0},{id:"al",label:"Allergies",show:!0},{id:"pe",label:"Physical examination",show:!0}];async function S(){const E=ye.getSessionDate(),e=[j.ASSESSMENT,j.PRESENTING_COMPLAINTS,j.PAST_MEDICAL_HISTORY,j.PHYSICAL_EXAMINATION,j.PREGNANCY_STATUS];let _=!1;for(const F of e)try{const G=await z.getObsByEncounterIdAndDate(F);if(G&&G.some(Q=>Q.obs_datetime?Ie.toStandardHisFormat(Q.obs_datetime)===Ie.toStandardHisFormat(E):!1)){_=!0;break}}catch(G){console.error("Error checking observations for encounter type ".concat(F,":"),G)}v.value=_}be(S),le(()=>g.patient,S);const I=q(()=>v.value),P=q(()=>h.filter(E=>typeof E.show=="function"?E.show():E.show)),T=E=>{const e=h.find(_=>_.id===E);return e?typeof e.show=="function"?e.show():e.show:!1},N=E=>P.value.findIndex(e=>e.id===E),H=E=>{const e=N(E);e>0&&(r.value=P.value[e-1].id)},b=E=>{const _=N(E)+1;_<P.value.length?r.value=P.value[_].id:(r.value="",O())};return o({onSubmit:async()=>{const E=[{ref:A,name:"PresentingComplaints"},{ref:w,name:"LevelOfConsciousness"},{ref:x,name:"PastMedicalHistory"},{ref:R,name:"PregnancyBreastfeeding"},{ref:l,name:"PhysicalExamination"}];for(const e of E)if(e.ref.value&&typeof e.ref.value.onSubmit=="function")try{await e.ref.value.onSubmit()}catch(_){console.error("Error calling ".concat(e.name," onSubmit:"),_)}else console.log("".concat(e.name," component ref not available or no onSubmit method"))}}),(E,e)=>I.value?(i(),y("div",ds,[(i(),B(Za,{key:c.value}))])):(i(),B(u(gn),{key:1,style:{width:"100%"}},{default:p(()=>[a(u(je),{value:r.value,"onUpdate:value":e[12]||(e[12]=_=>r.value=_),ref:"accordionGroup",class:"previousView"},{default:p(()=>[T("loc")?(i(),B(u(fe),{key:0,value:"loc",class:"_card"},{default:p(()=>[a(u(X),{slot:"header",color:"light"},{default:p(()=>[a(u(oe),{class:"previousLabel"},{default:p(()=>e[13]||(e[13]=[L("Level of consciousness",-1)])),_:1,__:[13]})]),_:1}),n("div",ms,[a(ts,{"is-active":r.value==="loc",ref_key:"levelOfConsciousnessFormRef",ref:w,onDataSaved:O},null,8,["is-active"]),n("div",ps,[N("loc")>0?(i(),B(u(ae),{key:0,fill:"outline",onClick:e[0]||(e[0]=se(_=>H("loc"),["stop"]))},{default:p(()=>e[14]||(e[14]=[L(" Back ",-1)])),_:1,__:[14]})):C("",!0),a(u(ae),{fill:"outline",onClick:e[1]||(e[1]=se(_=>b("loc"),["stop"]))},{default:p(()=>[L(M(N("loc")<P.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):C("",!0),T("pc")?(i(),B(u(fe),{key:1,value:"pc",class:"_card"},{default:p(()=>[a(u(X),{slot:"header",color:"light"},{default:p(()=>[a(u(oe),{class:"previousLabel"},{default:p(()=>e[15]||(e[15]=[L("Presenting complaints",-1)])),_:1,__:[15]})]),_:1}),n("div",vs,[a(ea,{"is-active":r.value==="pc",onDataSaved:O,ref_key:"presentingComplaintsFormRef",ref:A},null,8,["is-active"]),n("div",fs,[N("pc")>0?(i(),B(u(ae),{key:0,fill:"outline",onClick:e[2]||(e[2]=se(_=>H("pc"),["stop"]))},{default:p(()=>e[16]||(e[16]=[L(" Back ",-1)])),_:1,__:[16]})):C("",!0),a(u(ae),{fill:"outline",onClick:e[3]||(e[3]=se(_=>b("pc"),["stop"]))},{default:p(()=>[L(M(N("pc")<P.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):C("",!0),T("pbs")?(i(),B(u(fe),{key:2,value:"pbs",class:"_card"},{default:p(()=>[a(u(X),{slot:"header",color:"light"},{default:p(()=>[a(u(oe),{class:"previousLabel"},{default:p(()=>e[17]||(e[17]=[L("Pregnancy and breastfeeding status",-1)])),_:1,__:[17]})]),_:1}),n("div",_s,[a(as,{"is-active":r.value==="pbs",ref_key:"pregnancyBreastfeedingFormRef",ref:R,onDataSaved:O},null,8,["is-active"]),n("div",gs,[N("pbs")>0?(i(),B(u(ae),{key:0,fill:"outline",onClick:e[4]||(e[4]=se(_=>H("pbs"),["stop"]))},{default:p(()=>e[18]||(e[18]=[L(" Back ",-1)])),_:1,__:[18]})):C("",!0),a(u(ae),{fill:"outline",onClick:e[5]||(e[5]=se(_=>b("pbs"),["stop"]))},{default:p(()=>[L(M(N("pbs")<P.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):C("",!0),T("pmh")?(i(),B(u(fe),{key:3,value:"pmh",class:"_card"},{default:p(()=>[a(u(X),{slot:"header",color:"light"},{default:p(()=>[a(u(oe),{class:"previousLabel"},{default:p(()=>e[19]||(e[19]=[L("Past medical history",-1)])),_:1,__:[19]})]),_:1}),n("div",hs,[a(ls,{"is-active":r.value==="pmh",ref_key:"pastMedicalHistoryFormRef",ref:x,onDataSaved:O},null,8,["is-active"]),n("div",ys,[N("pmh")>0?(i(),B(u(ae),{key:0,fill:"outline",onClick:e[6]||(e[6]=se(_=>H("pmh"),["stop"]))},{default:p(()=>e[20]||(e[20]=[L(" Back ",-1)])),_:1,__:[20]})):C("",!0),a(u(ae),{fill:"outline",onClick:e[7]||(e[7]=se(_=>b("pmh"),["stop"]))},{default:p(()=>[L(M(N("pmh")<P.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):C("",!0),T("al")?(i(),B(u(fe),{key:4,value:"al",class:"_card"},{default:p(()=>[a(u(X),{slot:"header",color:"light"},{default:p(()=>[a(u(oe),{class:"previousLabel"},{default:p(()=>e[21]||(e[21]=[L("Allergies",-1)])),_:1,__:[21]})]),_:1}),n("div",bs,[a(Fn,{"is-active":r.value==="al",ref_key:"allergiesFormRef",ref:k,onDataSaved:O},null,8,["is-active"]),n("div",Ds,[N("al")>0?(i(),B(u(ae),{key:0,fill:"outline",onClick:e[8]||(e[8]=se(_=>H("al"),["stop"]))},{default:p(()=>e[22]||(e[22]=[L(" Back ",-1)])),_:1,__:[22]})):C("",!0),a(u(ae),{fill:"outline",onClick:e[9]||(e[9]=se(_=>b("al"),["stop"]))},{default:p(()=>[L(M(N("al")<P.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):C("",!0),T("pe")?(i(),B(u(fe),{key:5,value:"pe",class:"_card"},{default:p(()=>[a(u(X),{slot:"header",color:"light"},{default:p(()=>[a(u(oe),{class:"previousLabel"},{default:p(()=>e[23]||(e[23]=[L("Physical examination",-1)])),_:1,__:[23]})]),_:1}),n("div",ws,[a(us,{"is-active":r.value==="pe",ref_key:"physicalExaminationFormRef",ref:l,onDataSaved:O},null,8,["is-active"]),n("div",Cs,[N("pe")>0?(i(),B(u(ae),{key:0,fill:"outline",onClick:e[10]||(e[10]=se(_=>H("pe"),["stop"]))},{default:p(()=>e[24]||(e[24]=[L(" Back ",-1)])),_:1,__:[24]})):C("",!0),a(u(ae),{fill:"outline",onClick:e[11]||(e[11]=se(_=>b("pe"),["stop"]))},{default:p(()=>[L(M(N("pe")<P.value.length-1?"Next":"Finish"),1)]),_:1})])])]),_:1})):C("",!0)]),_:1},8,["value"])]),_:1}))}}),ko=re(Ss,[["__scopeId","data-v-9966d812"]]);class Is extends pt{constructor(o,r){super(o,8,r)}static async getDiagnosis(o="",r=1,c=10){const v=await me.getConceptID("Qech outpatient diagnosis list");return pt.getJson("diagnosis",{id:v,name:o,page:r,page_size:c})}}const ks=J({name:"Menu",components:{IonContent:yt,IonHeader:ht,IonItem:X,IonList:Ve,IonMenu:gt,IonTitle:_t,IonToolbar:ft,List:He},computed:{...Be(ke,["patient"])},data(){return{valueNumericArray:[],obsDatetime:[],graphIcon:St(["#006401"]),listIcon:Ct(["#636363"]),displayGraph:!0,orders:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],list:[],series:[{name:"",data:[]}]}},setup(){return{checkmark:bt,pulseOutline:Le}},async mounted(){const t=await z.getAll(this.patient.patientID,"Primary diagnosis"),o=await z.getAll(this.patient.patientID,"Secondary diagnosis"),r=await z.getAll(this.patient.patientID,"Attempted/ Differential diagnosis"),c=[...t||[],...o||[],...r||[]],v=_e.isEmpty(c)?[]:Promise.all(c.map(async d=>({name:await z.getConceptName(d.value_coded),obs_date:d.obs_datetime})));this.setListData(await v)},methods:{dismiss(){hn.dismiss()},handleIcon(){},setActivClass(t){this.activeHeight="",this.activeBMI="",this.activeWeight="",t=="height"?this.activeHeight="_active":t=="weight"?this.activeWeight="_active":t=="BMI"&&(this.activeBMI="_active")},setListData(t){this.list=[],this.list.push({actionBtn:!1,class:"col_background",header:!0,minHeight:"--min-height: 25px;",display:["Date","Diagnosis","Notes"]}),t.forEach(o=>{this.list.push({actionBtn:!1,minHeight:"--min-height: 25px;",class:"col_background",display:[Ie.toStandardHisFormat(o.obs_date),o.name,""]})})}}}),Ps={class:"modal_wrapper"};function Es(t,o,r,c,v,d){const g=K("list");return i(),y("div",Ps,[n("div",null,[a(g,{listData:t.list},null,8,["listData"])])])}const xs=re(ks,[["render",Es],["__scopeId","data-v-88580898"]]),Ns={class:"custom_card",style:{padding:"10px"}},As={key:0},Os={key:0,style:{color:"red","margin-top":"10px",background:"lightgoldenrodyellow"}},$s={class:"ion-padding",slot:"content"},Ms=J({__name:"OPDDiagnosis",setup(t,{expose:o}){const r=xe,c=s(!0),v=s(!1),d=s(!0),g=s(!1),O=s(!0),A=s(""),w=s(""),x=s([]),k=s([]),R=s(),l=s(null);Nn();const h=q(()=>k.value.some(e=>e.data.concept_id===6542));le(k,()=>{$()},{deep:!0});const S=q(()=>[{name:"primaryDiagnosis",header:"Primary Diagnosis",componentType:"multiSelectInputField",options:x.value,icon:r.search,onSearchChange:H,validation:$e.required},{componentType:"checkboxField",label:"Secondary Diagnosis",type:"single",grid:{s:"6"},name:"secondaryDiagnosisCheckbox"},{componentType:"checkboxField",label:"Differential Diagnosis",type:"single",grid:{s:"6"},name:"differentialDiagnosisCheckbox"},{componentType:"Dashes"},{name:"secondaryDiagnosis",header:"Secondary Diagnosis",componentType:"multiSelectInputField",isMultiple:!0,options:x.value,icon:r.search,condition:e=>e==null?void 0:e.secondaryDiagnosisCheckbox,onSearchChange:H,validation:(e,_)=>I(_,"secondaryDiagnosis")},{name:"differentialDiagnosis",header:"Differential Diagnosis",componentType:"multiSelectInputField",options:x.value,icon:r.search,isMultiple:!0,condition:e=>e==null?void 0:e.differentialDiagnosisCheckbox,onSearchChange:H,validation:(e,_)=>I(_,"differentialDiagnosis")}]),I=(e,_)=>{var ne,W,De;if(!e)return null;const F=(ne=e.primaryDiagnosis)==null?void 0:ne.name,G=((W=e.secondaryDiagnosis)==null?void 0:W.map(de=>de.name))||[],Q=((De=e.differentialDiagnosis)==null?void 0:De.map(de=>de.name))||[];if(_==="secondaryDiagnosis"&&G.includes(F)||_==="differentialDiagnosis"&&Q.includes(F))return"".concat(F," is already the primary diagnosis");const ce=G.find(de=>Q.includes(de));return ce?"".concat(ce," cannot be both secondary and differential"):null},P=()=>{w.value="",A.value="",c.value=!1,O.value=!1,v.value=!0},T=async()=>{var e;((e=l.value)==null?void 0:e.validateForm())==null&&(N(),v.value=!1,g.value=!0,O.value=!0,d.value=!1)},N=()=>{var ne;const e=[],_=k.value.map(W=>W.name),F=((ne=l.value)==null?void 0:ne.getFormValues())||{},G=F.primaryDiagnosis||[],Q=F.secondaryDiagnosis||[],ce=F.differentialDiagnosis||[];if(G.name&&!_.includes(G.name))if(!k.value.some(De=>De.data.concept_id===6542))e.push({actionBtn:!0,btn:["delete"],name:G.name,id:G.concept_id,display:[G.name,"Primary diagnosis"],data:{concept_id:6542,value_coded:G.concept_id,obs_datetime:ye.getSessionDate()}});else return An("Only one primary diagnosis is allowed"),!1;return Q&&Q.forEach(W=>{_.includes(W.name)||e.push({actionBtn:!0,btn:["delete"],name:W.name,id:W.concept_id,display:[W.name,"Secondary diagnosis"],data:{concept_id:6543,value_coded:W.concept_id,obs_datetime:ye.getSessionDate()}})}),ce&&ce.forEach(W=>{_.includes(W.name)||e.push({actionBtn:!0,btn:["delete"],name:W.name,id:W.concept_id,display:[W.name,"Differential diagnosis"],data:{concept_id:10201,value_coded:W.concept_id,obs_datetime:ye.getSessionDate()}})}),e.length>0&&(k.value=[...k.value,...e]),!0},H=async e=>{const _=e.trim().toLowerCase()||"";return x.value=await Is.getDiagnosis(_,1,15),x.value},b=e=>{const _=k.value,F=e.name,G=_.filter(Q=>Q.display[0]!==F);k.value=G},$=()=>{k.value.length>0?(g.value=!0,c.value=!1):v.value||(c.value=!0),O.value=!h.value},E=async()=>{if(k.value.length<=0){ie("Diagnosis not saved");return}const e=k.value.flatMap(F=>F.data);if(e.length<=0)return ie("Diagnosis not saved");const _=await z.addObsToEncounter(e,j.DIAGNOSIS);await z.mergeObsToPatient(_),Ne("Diagnosis saved successful"),k.value=[]};return be(async()=>{$(),await H("")}),o({onSubmit:E}),(e,_)=>{const F=K("ion-row"),G=K("ion-label"),Q=K("ion-accordion"),ce=K("ion-accordion-group");return i(),y(te,null,[n("div",Ns,[a(Pt,{status:c.value,content:"No Diagnosis added"},null,8,["status"]),g.value?(i(),y("span",As,[a(He,{listData:k.value,"onClicked:delete":b},null,8,["listData"]),h.value?(i(),y("div",Os," In order to update the diagnosis list, please remove/delete the primary diagnosis only and then re-add or change it along with the secondary and differential diagnoses. ")):C("",!0)])):C("",!0),v.value?(i(),B(F,{key:1},{default:p(()=>{var ne;return[n("div",null,[a(Re,{formData:S.value,ref_key:"formRef",ref:l},null,8,["formData"])]),n("div",null,[a(Ce,{fill:"clear",icon:u(r).plus,iconSlot:"icon-only","onClicked:btn":_[0]||(_[0]=W=>T()),name:"Save",disabled:(ne=l.value)==null?void 0:ne.validateForm(),class:"ion-margin-top"},null,8,["icon","disabled"])])]}),_:1})):C("",!0),O.value?(i(),B(F,{key:2,style:{"margin-top":"10px"}},{default:p(()=>[a(Ce,{fill:"clear",icon:u(r).plus,iconSlot:"icon-only","onClicked:btn":_[1]||(_[1]=ne=>P()),name:"Add new Diagnosis"},null,8,["icon"])]),_:1})):C("",!0)]),a(F,null,{default:p(()=>[a(ce,{ref_key:"accordionGroup",ref:R,class:"previousView"},{default:p(()=>[a(Q,{value:"first","toggle-icon-slot":"start",class:"custom_card"},{default:p(()=>[a(u(X),{slot:"header",color:"light"},{default:p(()=>[a(G,{class:"previousLabel"},{default:p(()=>_[2]||(_[2]=[L("Previous Diagnosis",-1)])),_:1,__:[2]})]),_:1}),n("div",$s,[a(xs)])]),_:1})]),_:1},512)]),_:1})],64)}}}),Po=re(Ms,[["__scopeId","data-v-a440f286"]]),Ts={class:"allergies-section"},Fs={class:"allergies-container"},Bs={class:"medication-section"},Ls={class:"medication-content"},Rs={key:0,class:"add-medication-form"},Vs={class:"form-group"},Hs={class:"option-label"},Us={key:0,class:"error-message"},Gs={class:"form-row"},Ws={class:"form-group"},qs={key:0,class:"error-message"},zs={class:"form-group"},Ys={key:0,class:"error-message"},js={class:"form-group"},Ks={key:0,class:"error-message"},Xs={class:"action-buttons"},Js={class:"notes-section"},Qs={class:"notes-content"},Zs={class:"notes-input-container"},eo={class:"ion-padding",slot:"content"},to={class:"notes-timeline"},no={class:"note-date"},ao={class:"note-content"},so={class:"ion-padding",slot:"content"},oo={class:"note-date"},io={class:"note-content"},lo=J({watch:{},name:"xxxComponent"}),ro=J({...lo,setup(t){const o=xe,r=Vn,c=s(!1),v=s(!1),d=s(!0),g=s(0),O=s(""),A=s(!1),w=s(""),x=s(!1),k=s(),R=s(!1),l=s(""),h=s(""),S=s(""),I=s(""),P=s(""),T=s("");s(!1);const N="Add new medication",H="clear";s("Show more medications");const b=Ee(),$=kt(),E=q(()=>$.selectedMedicalAllergiesList),e=q(()=>b.selectedMedicalDrugsList),_=q(()=>b.partialOPDdrugList),F=q(()=>b.nonPharmalogicalTherapyAndOtherNotes),G=["first","second","third"],Q=s(),ce=s(),ne=s(),W=s(!1),De=s(!1);s(!1);const de=s("Show more notes");s("Show more allergies");const Bt=s(),Lt=s(),Pe=s(),Me=q(()=>b.editingDrugItem),Rt=s("Select a route"),Ue=s(!1),Vt=s("Select frequency"),Ge=s(!1),Ht=s("Select drug"),We=s(!1),Z=s(),ee=s(),pe=s(),Ae=s([]),Ut=s([{concept_id:11797,name:"Buccal",concept_name_id:null,id:1769},{concept_id:11794,name:"Intradermal",concept_name_id:null,id:6284},{concept_id:11795,name:"Intramuscular (IM)",concept_name_id:null,id:6285},{concept_id:11799,name:"Intraosseous",concept_name_id:null,id:6286},{concept_id:11793,name:"Intravenous (IV)",concept_name_id:null,id:6295},{concept_id:3327,name:"Oral",concept_name_id:null,id:8686},{concept_id:11800,name:"Other method of prescription",concept_name_id:null,id:8920},{concept_id:11792,name:"Rectally",concept_name_id:null,id:10785},{concept_id:11798,name:"Subcutaneous",concept_name_id:null,id:12342},{concept_id:11796,name:"Sublingual",concept_name_id:null,id:12344},{concept_id:11792,name:"Rectally",concept_name_id:null,id:14078},{concept_id:11793,name:"Intravenous (IV)",concept_name_id:null,id:14079},{concept_id:11794,name:"Intradermal",concept_name_id:null,id:14080},{concept_id:11795,name:"Intramuscular (IM)",concept_name_id:null,id:14081},{concept_id:11796,name:"Sublingual",concept_name_id:null,id:14082},{concept_id:11797,name:"Buccal",concept_name_id:null,id:14083},{concept_id:11798,name:"Subcutaneous",concept_name_id:null,id:14084},{concept_id:11799,name:"Intraosseous",concept_name_id:null,id:14085},{concept_id:11800,name:"Other method of prescription",concept_name_id:null,id:14086}]),Gt=q(()=>Ae.value.length?Ae.value:Ut.value);function Wt(f){Z.value=f}async function qt(){return await Hn()}async function zt(f=5,m=1e3){let D=0;for(;D<f&&(Ae.value=await qt(),!(Ae.value.length>0));)D++,await new Promise(U=>setTimeout(U,m));Ae.value.length===0&&console.warn("Failed to fetch route list after maximum retries.")}be(async()=>{const f=new Bn,{previousDrugPrescriptions:m,previousClinicalNotes:D,previousDrugAllergies:U}=await f.getPatientEncounters();Q.value=m,ce.value=Object.entries(D)[0];const[,...V]=Object.entries(D);ne.value=V,Bt.value=Object.entries(U)[0];const[,...Y]=Object.entries(U);Lt.value=Y,await zt()}),le(()=>l.value,async f=>{Je()}),le(()=>h.value,async f=>{Jt()}),le(()=>S.value,async f=>{Qe()});function Yt(){if(_e.isEmpty(Z.value)==!0)return Ue.value=!0,!1;if(_e.isEmpty(Z.value)==!1)return Ue.value=!1,!0}function jt(){if(_e.isEmpty(ee.value)==!0)return Ge.value=!0,!1;if(_e.isEmpty(ee.value)==!1)return Ge.value=!1,!0}function Kt(){if(_e.isEmpty(pe.value)==!0)return We.value=!0,!1;if(_e.isEmpty(pe.value)==!1)return We.value=!1,!0}function Xt(){d.value=!d.value,c.value=!0,x.value=!1,R.value=!1}async function Je(){const f=await tn();return console.log({drugNameExists:f}),f?A.value=!1:(O.value="please select a valid drug name",A.value=!0),A.value}async function Jt(){return tt(h.value)?x.value=!1:(w.value="please enter a number",x.value=!0),x.value}async function Qe(){return tt(S.value)?R.value=!1:(k.value="please enter a number",R.value=!0),R.value}async function Ze(){const f=await Je(),m=await Qe(),D=jt(),U=Kt(),V=Yt();return!f&&!m&&D==!0&&U==!0&&V==!0}function Qt(f){ee.value=f}async function et(){const f=()=>Pe.value.dose_strength!=null&&Pe.value.dose_strength?Math.trunc(Pe.value.dose_strength):1;if(Me.value!==null){if(!await Ze()){ie("Please enter correct data values",4e3);return}const D=ye.getSessionDate(),U=nt(D,parseInt(S.value));let V=!1;qe(Pe.value)==!0&&(V=!0);const Y={drugName:l.value,dose:f(),frequency:ee.value.label,frequency_code:ee.value.code,duration:S.value,prescription:U,drug_id:T.value,units:P.value,route_concept_id:Z.value.concept_id,route_name:Z.value.name,highlightbackground:V},ze=Ee();console.log(ze.setSelectedMedicalDrugsList([Y])),ze.editingDrugItem=null,d.value=!0}else{if(!await Ze()){ie("Please enter correct data values",4e3);return}un();const D=ye.getSessionDate(),U=nt(D,parseInt(S.value));let V=!1;qe(Pe.value)==!0&&(V=!0);const Y={drugName:l.value,dose:f(),frequency:ee.value.label,frequency_code:ee.value.code,duration:S.value,prescription:U,drug_id:T.value,units:P.value,route_concept_id:Z.value.concept_id,route_name:Z.value.name,highlightbackground:V};Ee().setSelectedMedicalDrugsList([Y])}T.value="",l.value="",h.value="",ee.value=null,S.value="",I.value="",g.value++,pe.value=null,Z.value=null}async function Zt(f){const m=f,V=await vt.getOfflineOPDDrugs({name:m,page:1,page_size:10});V.map(Y=>({label:Y.name,value:Y.name,other:Y})),b.setPartialOPDdrugList(V)}async function en(f){let m;f.target===void 0?m=f:m=f.target.value;const V=await vt.getOPDDrugs({name:encodeURIComponent(m),page:1,page_size:10});return V.map(Y=>({label:Y.name,value:Y.name,other:Y})),V}function qe(f){const m=[];return E.value.forEach(U=>{U.selected&&m.push(U.concept_id)}),nn([f],m)==!0?(ie("Client is allergic to the selected medication",4e6),!0):!1}async function tn(){return(await en(l.value)).length>0?l.value.length!=0:!1}function nn(f,m){try{return f.some(D=>m.includes(D.concept_id))}catch(D){return!1}}function an(f){f&&(l.value=f.name,T.value=f.drug_id,P.value=f.units,Pe.value=f,qe(f))}function sn(f){const m=e.value[f],D=Ee();D.removeDrugById(m.drug_id),D.editingDrugItem=m,T.value="",l.value="",h.value="",ee.value=null,S.value="",I.value="",pe.value=null,Z.value=null,T.value=m.drug_id,l.value=m.drugName,h.value=m.dose,ee.value={label:m.frequency,code:m.frequency_code},S.value=m.duration,I.value=m.prescription;const U=_.value.find(V=>V.name===m.drugName);U&&(pe.value=U),Z.value={concept_id:m.route_concept_id,name:m.route_name},d.value=!1,g.value++}function on(){if(Me.value!==null){T.value="",l.value="",h.value="",ee.value=null,S.value="",I.value="",pe.value=null,Z.value=null;const f=Ee();f.setSelectedMedicalDrugsList([Me.value]),f.editingDrugItem=null}d.value=!0,g.value++}function ln(f){e.value.splice(f,1),g.value++,ie("you have removed a drug from list",6e3)}function rn(f){let m=f.target.value;cn(m)}function cn(f){Ee().setNonPharmalogicalTherapyAndOtherNotes(f)}function tt(f){return/^[0-9]+$/.test(f)}function nt(f,m){const D=new Date(f);D.setDate(D.getDate()+m);const U=D.getFullYear(),V=String(D.getMonth()+1).padStart(2,"0"),Y=String(D.getDate()).padStart(2,"0");return"".concat(U,"-").concat(V,"-").concat(Y)}function un(){c.value=!1,v.value=!0,d.value=!0}function dn(f){G.filter(D=>D!==f.detail.value);const m=f.detail.value;m!==void 0?m=="third"&&(de.value="Show less notes",De.value=!W.value):(de.value="Show more notes",De.value=!W.value)}function mn(f){return f[1]}function pn(f){(f.key==="Enter"||f.key==="ArrowDown")&&(f.preventDefault(),et())}const ve=q(()=>[{showAddItemButton:!0,addItemButton:!0,name:Me.value!==null?"Update":"ADD",btnFill:"clear",fn:et},{showAddItemButton:!0,addItemButton:!0,name:"CANCEL",btnFill:"clear",fn:on}]);return(f,m)=>(i(),B(u(Ve),null,{default:p(()=>[n("div",Ts,[n("div",Fs,[a(Ft)])]),n("div",Bs,[a(u(X),{lines:"none",class:"section-header"},{default:p(()=>[a(u(Te),{icon:u(wt),class:"section-icon"},null,8,["icon"]),a(u(oe),{class:"section-title",style:{"margin-top":"12px"}},{default:p(()=>m[9]||(m[9]=[L("Medication",-1)])),_:1,__:[9]})]),_:1}),n("div",Ls,[(i(),B(Ln,{_selectedMedicalDrugsList:e.value,onEditItem:sn,onRemoveItem:ln,key:g.value,class:"medication-list"},null,8,["_selectedMedicalDrugsList"])),d.value?C("",!0):(i(),y("div",Rs,[n("div",Vs,[m[10]||(m[10]=n("label",{class:"input-label"},"Medication",-1)),a(u(Ye),{modelValue:pe.value,"onUpdate:modelValue":[m[0]||(m[0]=D=>pe.value=D),m[1]||(m[1]=D=>an(D))],options:_.value,searchable:!0,"close-on-select":!0,"show-labels":!1,placeholder:"Select medication",label:"name","track-by":"drug_id",onSearchChange:m[2]||(m[2]=D=>Zt(D))},{option:p(D=>[n("div",Hs,M(D.option.name),1)]),_:1},8,["modelValue","options"]),We.value?(i(),y("div",Us,M(Ht.value),1)):C("",!0)]),n("div",Gs,[n("div",Ws,[m[11]||(m[11]=n("label",{class:"input-label"},"Route",-1)),a(u(Ye),{modelValue:Z.value,"onUpdate:modelValue":[m[3]||(m[3]=D=>Z.value=D),m[4]||(m[4]=D=>Wt(D))],options:Gt.value,searchable:!0,"close-on-select":!0,"show-labels":!1,placeholder:"Select route",label:"name","track-by":"concept_id"},null,8,["modelValue","options"]),Ue.value?(i(),y("div",qs,M(Rt.value),1)):C("",!0)]),n("div",zs,[m[12]||(m[12]=n("label",{class:"input-label"},"Frequency",-1)),a(u(Ye),{modelValue:ee.value,"onUpdate:modelValue":[m[5]||(m[5]=D=>ee.value=D),m[6]||(m[6]=D=>Qt(D))],options:u(r),searchable:!0,"close-on-select":!0,"show-labels":!1,placeholder:"Select frequency",label:"label","track-by":"code"},null,8,["modelValue","options"]),Ge.value?(i(),y("div",Ys,M(Vt.value),1)):C("",!0)]),n("div",js,[m[13]||(m[13]=n("label",{class:"input-label"},"Duration (days)",-1)),a(u(yn),{modelValue:S.value,"onUpdate:modelValue":m[7]||(m[7]=D=>S.value=D),type:"number",inputmode:"numeric",pattern:"[0-9]*",fill:"outline",placeholder:"Enter duration",onKeydown:pn},null,8,["modelValue"]),R.value?(i(),y("div",Ks,M(k.value),1)):C("",!0)])]),n("div",Xs,[ve.value[0].addItemButton?(i(),B(Ce,{key:0,name:ve.value[0].name,fill:ve.value[0].btnFill,icon:u(bn),"onClicked:btn":ve.value[0].fn,class:"save-button"},null,8,["name","fill","icon","onClicked:btn"])):C("",!0),ve.value[1].addItemButton?(i(),B(Ce,{key:1,name:ve.value[1].name,fill:ve.value[1].btnFill,icon:u(Dn),"onClicked:btn":ve.value[1].fn,class:"cancel-button"},null,8,["name","fill","icon","onClicked:btn"])):C("",!0)])])),d.value?(i(),B(Ce,{key:1,name:N,fill:H,icon:u(Fe),"onClicked:btn":Xt,class:"add-new-button"},null,8,["icon"])):C("",!0)])]),n("div",Js,[a(u(X),{lines:"none",class:"section-header"},{default:p(()=>[a(u(Te),{icon:u(wn),class:"section-icon"},null,8,["icon"]),a(u(oe),{class:"section-title"},{default:p(()=>m[14]||(m[14]=[L("Non-pharmacological therapy and other notes",-1)])),_:1,__:[14]})]),_:1}),n("div",Qs,[a(Rn,{class:"intervention-component"}),n("div",Zs,[a(u(X),{class:"notes-input-item"},{default:p(()=>[a(u(Te),{slot:"start",icon:u(o).editPen,class:"edit-icon","aria-hidden":"true"},null,8,["icon"]),a(u(Cn),{modelValue:F.value,"onUpdate:modelValue":m[8]||(m[8]=D=>F.value=D),onIonInput:rn,placeholder:"Enter notes here...","auto-grow":!0,class:"notes-textarea",fill:"outline",style:{"--padding-start":"16px"}},null,8,["modelValue"])]),_:1})]),a(u(je),{ref:"accordionGroup",class:"previous-notes"},{default:p(()=>[a(u(fe),{value:"fourth","toggle-icon-slot":"start"},{default:p(()=>[a(u(X),{slot:"header",color:"light",class:"previous-notes-header"},{default:p(()=>[a(u(oe),null,{default:p(()=>m[15]||(m[15]=[L("Previous visit notes",-1)])),_:1,__:[15]})]),_:1}),n("div",eo,[n("div",to,[f.index===1?(i(!0),y(te,{key:0},ue(ce.value,(D,U)=>(i(),y("div",{key:U,class:"note-entry"},[(i(!0),y(te,null,ue(D,(V,Y)=>(i(),y("div",{key:Y},[n("div",no,M(V.date),1),n("div",ao,M(V.notes),1)]))),128))]))),128)):C("",!0),a(u(je),{onIonChange:dn},{default:p(()=>[a(u(fe),{value:"third","toggle-icon-slot":"start"},{default:p(()=>[a(u(X),{slot:"header",color:"light",class:"show-more-header"},{default:p(()=>[a(u(oe),{color:"primary"},{default:p(()=>[L(M(de.value),1)]),_:1})]),_:1}),n("div",so,[(i(!0),y(te,null,ue(ne.value,(D,U)=>(i(),y("div",{key:U,class:"note-entry"},[(i(!0),y(te,null,ue(mn(D),(V,Y)=>(i(),y("div",{key:Y},[n("div",oo,M(V.date),1),n("div",io,M(V.notes),1)]))),128))]))),128))])]),_:1})]),_:1})])])]),_:1})]),_:1},512)])])]),_:1}))}}),Eo=re(ro,[["__scopeId","data-v-334d9f69"]]),co={class:"dash_box"},uo={key:1},mo=J({name:"xxxComponent"}),po=J({...mo,setup(t){const o=s("No outcome created yet"),r=s(!1),c=s("please select a type");s("Add new outcome"),s(!0);const v=s(!0),d=s(""),g=s(!0),O=s(!1),A=On(),w=q(()=>A.outcomes),x=s(!1),k=s(!1),R=s(!1),l=s(!1),h=s(!1);s(null),s(null);const S=s([{name:"Admitted for short stay",selected:!1},{name:"Referred out",selected:!1},{name:"Discharged Home",selected:!1}]),I=[{multi_Selection:!1,show_list_label:!0,unqueId:"qwerty2",name_of_list:"Add new outcome",placeHolder:"Choose one",items:S.value,listUpdatedFN:P,listFilteredFN:()=>{},use_internal_filter:!0,disabled:s(!1)}];function P(e){S.value=e,S.value.forEach(_=>{_.selected==!0&&(d.value=_.name)})}be(async()=>{N()}),le(()=>d.value,async e=>{x.value==!0?x.value=!1:$()}),le(()=>w.value.length,async e=>{N()});function T(){S.value.forEach(e=>{e.selected=!1}),d.value=""}function N(){w.value.length>0?g.value=!1:w.value.length==0&&O.value==!1&&(g.value=!0)}function H(e){w.value.splice(e,1)}const b=e=>{};async function $(e=!0){const _=d.value;console.log(_),d.value=_;const F=d.value;F==S.value[0].name?R.value=!0:R.value=!1,F==S.value[1].name?(l.value=!0,console.log("show_discharged_options is set to true")):l.value=!1,F==S.value[2].name?(h.value=!0,console.log("show_discharged_options is set to true")):h.value=!1}function E(){k.value=!1,R.value=!1,l.value=!1,h.value=!1,T()}return(e,_)=>{const F=K("ion-row");return i(),B(u(Ve),null,{default:p(()=>[a(F,null,{default:p(()=>[a(u(mt),null,{default:p(()=>[(i(),B(Un,{key:0,"onUpdate:removeItem":H,"onUpdate:editItem":b,displayData:w.value},null,8,["displayData"]))]),_:1})]),_:1}),g.value?(i(),B(F,{key:0},{default:p(()=>[n("span",co,M(o.value),1)]),_:1})):C("",!0),v.value?(i(),y("div",uo,[a(F,null,{default:p(()=>[a(u(mt),null,{default:p(()=>[a($n,{multiSelection:I[0].multi_Selection,show_label:I[0].show_list_label,uniqueId:I[0].unqueId,name_of_list:I[0].name_of_list,choose_place_holder:I[0].placeHolder,"items_-list":I[0].items,use_internal_filter:I[0].use_internal_filter,disabled:I[0].disabled.value,onItemListUpDated:I[0].listUpdatedFN,onItemListFiltered:I[0].listFilteredFN},null,8,["multiSelection","show_label","uniqueId","name_of_list","choose_place_holder","items_-list","use_internal_filter","disabled","onItemListUpDated","onItemListFiltered"]),n("div",null,[r.value?(i(),B(u(oe),{key:0,class:"error-label"},{default:p(()=>[L(M(c.value),1)]),_:1})):C("",!0)])]),_:1})]),_:1})])):C("",!0),R.value?(i(),B(Gn,{key:2,onDataSaved:E,selected_ward_prop:"",admitted_other_props:""})):C("",!0),l.value?(i(),B(Wn,{key:3,onDataSaved:E,selected_referral_data:"",selected_other_referral_data:""})):C("",!0),h.value?(i(),B(qn,{key:4,onDataSaved:E,selected_discharged_prop:"",selected_discharged_data:""})):C("",!0)]),_:1})}}}),xo=re(po,[["__scopeId","data-v-b6576c18"]]);export{ko as C,Po as O,Is as P,as as _,Eo as a,xo as b,ea as c,us as d,ts as e};
