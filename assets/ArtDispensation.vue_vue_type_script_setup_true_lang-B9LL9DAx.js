var B=Object.defineProperty;var M=(c,l,e)=>l in c?B(c,l,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[l]=e;var h=(c,l,e)=>M(c,typeof l!="symbol"?l+"":l,e);import{d as H,r as N,a as U,y as D,f as p,z as i,l as u,u as r,aZ as z,e as I,bh as w,F as G,L as R,aa as O,ab as k,D as b,A as f,G as Y,B as C,a3 as q,m as S,aY as F,W as L,I as P,cY as T,k as A,aI as $,b0 as J}from"./vendor-BzS-GRGX.js";import{A as v}from"./app_encounter_service-BLy4tvzY.js";import{S as W,az as E,P as Z,a5 as K,t as V,l as j}from"./index-xmN8DORW.js";import{l as Q}from"./lodash-Dt8AsbQm.js";class X extends W{constructor(){super()}static async fetchAvailableDrugStock(l){const e=await this.getJson("pharmacy/items",{drug_id:l});if(!Q.isEmpty(e))return e.map(s=>({quantity:s.current_quantity,packSize:s.pack_size}))}}const x={11:[30],21:[25],22:[60],24:[30,60,90,100],30:[90],39:[60],73:[120],74:[60],76:[1e3],297:[30,60,90],576:[30,60,90],613:[60],731:[60],732:[60],733:[60],734:[30],735:[30],736:[60],738:[60],931:[12,30,60],932:[30],954:[60],963:[30,60,90],968:[60],969:[30],971:[30,60,90],976:[60],977:[30],982:[30],983:[30,90],1039:[30,60,90],1043:[60],1044:[30],1056:[24],1216:[3,6,8,12]};class ee extends v{constructor(e,s){super(e,54,s);h(this,"drugHistory");h(this,"currentDrugOrder");h(this,"useDrugManagement");this.drugHistory=[],this.currentDrugOrder=[],this.useDrugManagement=!1}setIsDrugManagementEnabled(e){this.useDrugManagement=e}async loadDrugManagementEnabled(){this.useDrugManagement=!1}getDrugHistory(){return this.drugHistory}getCurrentOrder(){return this.currentDrugOrder}buildDispensations(e,s,n){const g=[];for(let d=0;d<n;d++)g.push({drug_order_id:e,date:this.date,quantity:s/n});return g}saveDispensations(e){return v.postJson("/dispensations",{dispensations:e,program_id:v.getProgramID()})}async voidOrder(e){return v.void("/dispensations/".concat(e),{})}async loadDrugHistory(){try{this.drugHistory=await E.getDrugOrderHistory(this.patientID)||[]}catch(e){console.warn(e)}}async loadCurrentDrugOrder(){if(this.currentDrugOrder=await E.getDrugOrders(this.patientID)||[],!!this.useDrugManagement)for(const e of this.currentDrugOrder){const s=await X.fetchAvailableDrugStock(e.drug.drug_id);e.stocks=this.groupByPackSize(s)}}groupByPackSize(e){const s=new Map;return e==null||e.forEach(({packSize:n,quantity:g})=>{var d,m;n&&(s.has(n)?s.set(n,{packSize:n,quantity:g+((m=(d=s.get(n))==null?void 0:d.quantity)!=null?m:0)}):s.set(n,{quantity:g,packSize:n}))}),Array.from(s.values())}getDrugPackSizes(e){return e in x?x[e]:[30,60,90]}calcCompletePack(e,s){var d;const n=((d=e.barcodes)!=null?d:[]).sort((m,t)=>m.tabs-t.tabs);if(n.length==0||s==0)return s;for(const m in n){const{tabs:t}=n[m];if(parseInt(t)>=s)return t}return parseInt(n[n.length-1].tabs)}}const te={key:0},ne={key:1},ae={style:{"margin-top":"10%"},class:"ion-text-center"},le=H({__name:"ArtDispensation",setup(c,{expose:l}){const e=N([]),s=new Z,n=new ee(s.getID(),-1);U(()=>{n.loadCurrentDrugOrder().then(()=>{e.value=n.getCurrentOrder().map(t=>{var o;return{name:t.drug.name,quantity:t.quantity||null,drug_id:t.drug.drug_id,order_id:t.order.order_id,amount_needed:(()=>{const a=parseFloat(t.amount_needed)-(t.quantity||0);return a<=0?0:n.calcCompletePack(t.order,a)})(),pack_sizes:n.getDrugPackSizes(t.drug.drug_id),disabled:((o=t.quantity)!=null?o:0)>0}})})});async function g(t){await K("Are you sure you want to reset this dispensation?")&&n.voidOrder(t.order_id).then(()=>{t.disabled=!1,t.quantity=null}).catch(()=>V("Unable to reset dispensation"))}function d(t){if(!t.quantity)return"";const o=parseInt("".concat(t.quantity)),a=t.amount_needed,y=o/a*100;if(y>110)return"You are dispensing over 110% of prescribed amount";if(y<100)return"You are dispensing less than 100% of prescribed amount"}async function m(){const t=e.value.filter(a=>a.quantity>=1&&!a.disabled).map(a=>n.buildDispensations(a.order_id,parseInt(a.quantity),1));return t.length<=0?(V("Please enter one or more drug quantities"),!1):(await Promise.all(t.map(a=>n.saveDispensations(a)))).every(Boolean)?!0:(j("An error has occured"),!1)}return l({onSubmit:m}),(t,o)=>(p(),D(r(J),{style:{width:"90%",margin:"0px auto","min-height":"40vh"}},{default:i(()=>[u(r(z),null,{default:i(()=>[e.value.length?(p(),I("div",te,[u(r(w),null,{default:i(()=>[(p(!0),I(G,null,R(e.value,(a,y)=>(p(),D(r(O),{key:y},{default:i(()=>[u(r(k),null,{default:i(()=>[u(r(b),{style:{"font-weight":"bold"}},{default:i(()=>o[0]||(o[0]=[f(" Medication ")])),_:1,__:[0]}),u(r(Y),{lines:"none"},{default:i(()=>[u(r(b),null,{default:i(()=>[f(C(a.name),1)]),_:2},1024)]),_:2},1024),u(r(w),null,{default:i(()=>[u(r(O),null,{default:i(()=>[u(r(k),null,{default:i(()=>[u(r(b),{style:{"font-weight":"bold"}},{default:i(()=>o[1]||(o[1]=[f("Amount needed")])),_:1,__:[1]}),u(r(q),{style:{background:"#E8E8E8","font-weight":"bold"},readonly:"",modelValue:a.amount_needed,"onUpdate:modelValue":_=>a.amount_needed=_,type:"number",fill:"outline"},null,8,["modelValue","onUpdate:modelValue"])]),_:2},1024),u(r(k),null,{default:i(()=>[u(r(b),{style:{"font-weight":"bold"}},{default:i(()=>o[2]||(o[2]=[f("Amount to dispense")])),_:1,__:[2]}),u(r(q),{placeholder:"Enter amount to dispense",disabled:a.disabled,modelValue:a.quantity,"onUpdate:modelValue":_=>a.quantity=_,type:"number",fill:"outline"},null,8,["disabled","modelValue","onUpdate:modelValue"]),!a.disabled&&d(a)?(p(),D(r(F),{key:0,style:{color:"red"}},{default:i(()=>[f(C(d(a)),1)]),_:2},1024)):S("",!0),a.disabled?(p(),D(r(L),{key:1,onClick:_=>g(a),fill:"outline",class:"ion-margin-top"},{default:i(()=>[u(r(P),{icon:r(T)},null,8,["icon"]),o[3]||(o[3]=f(" Reset "))]),_:2,__:[3]},1032,["onClick"])):S("",!0)]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:2},1024))),128))]),_:1})])):(p(),I("div",ne,[A("div",ae,[u(r(P),{style:{"font-size":"5rem!important"},icon:r($)},null,8,["icon"]),o[4]||(o[4]=A("h1",null,"No Dispensations needed at the moment",-1))])]))]),_:1})]),_:1}))}});export{le as _};
