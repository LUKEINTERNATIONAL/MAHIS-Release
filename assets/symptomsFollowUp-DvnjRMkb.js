import{d as g,ab as o,bf as B,_ as F,a2 as U,af as D,ae as y,aM as P,cb as M,aN as k,aL as C,aO as V,N as T,G as $,E as z,aa as O,c2 as E,I as L,a7 as H,aQ as W,bC as A,H as s,O as N,f as R,J as d,l as i}from"./vendor-Cb0zIxoC.js";import{aT as v,V as G,T as Q,S as c,t as n,K as p,aQ as j,u as q,k as x,_ as J}from"./index-BRZ2qO42.js";import{D as K}from"./DemographicBar-Ch8k1kmI.js";import{S as X,p as Y,q as Z,r as tt,s as et,t as at,w as ot}from"./Stepper-C_4Pt1Fd.js";import{f as u,c as r,a as m}from"./formatServerData-BYv4DQ-1.js";import{B as st}from"./BasicFooter-CGnbSlrI.js";import{_ as nt}from"./NextAppointment-CiV5eZ9n.js";import{_ as it}from"./SetEncounter.vue_vue_type_script_lang-DV2DRTlL.js";import"./lodash-NJiRuGo9.js";import"./apexcharts-BmfflAd_.js";import"./OPDOutcome-BMpv_eNW.js";import"./patient_complaints_service-D9A1upTj.js";import"./DashBox-BPd4CeXy.js";import"./useExposeFromStandardForm-DEh6RKaa.js";import"./BasicForm-B_PPx0kx.js";import"./DateInputField-HoplxJ4e.js";import"./drug_prescription_service-U_VSE6vy.js";import"./drug_service-Coyv06vD.js";import"./Outcome-Dtl4PcbL.js";import"./VitalsMixin.vue_vue_type_script_lang-CrpM4bAc.js";import"./TreatmentPlan-5Tnt4G0P.js";import"./previousDiagnosis-Dv09Jtwr.js";import"./group_validation-DJgfj7sM.js";import"./FeatusModal-DWPVMt81.js";import"./BasicCard-BRAVD7pt.js";import"./PastObstreticHistoryStore-BLa2sWTJ.js";import"./SaveProgressModal-BCRiITfu.js";import"./lab_order-CSA9gow5.js";import"./UpcomingFeature-C9bHGuhb.js";import"./ncd_appointment_service-Ci356pVh.js";class rt extends v{constructor(t,a){super(t,57,a)}}class h extends v{constructor(t,a){super(t,151,a)}}const lt=g({name:"Home",mixins:[nt,it],components:{BasicFooter:st,IonContent:H,IonHeader:L,IonMenuButton:E,IonPage:O,IonTitle:z,IonToolbar:$,Toolbar:Q,ToolbarSearch:G,DemographicBar:K,IonButton:T,IonCard:V,IonCardContent:C,IonCardHeader:k,IonCardSubtitle:M,IonCardTitle:P,IonAccordion:y,IonAccordionGroup:D,IonItem:U,IonLabel:F,IonModal:B,Stepper:X},data(){return{wizardData:[{title:"Medical follow-up",class:"common_step",checked:"",icon:!1,disabled:!1,number:1,last_step:""},{title:"Persistent behaviours and symptoms",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Intimate partner violence(IPV)",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:"last_step"}],StepperData:[{title:"Medical follow-up",component:"MedicalFollowUp",value:"1"},{title:"Persistent behaviours and symptoms",component:"PersistentBehaviour",value:"2"},{title:"Intimate partner violence(IPV)",component:"Ipv",value:"3"}],isOpen:!1,iconsContent:x}},computed:{...o(ot,["medicalFollowUp"]),...o(at,["persistentBehaviour"]),...o(et,["physiologicalSymptoms"]),...o(tt,["ipv","ipv1","additionalCare","safety_assessment","physical_violence","beaten_pregnant","strangling","murder_threat","referrals","constant_jealous","woman_threatened"]),...o(Z,["fatalMovement"]),...o(q,["patient"])},mounted(){this.markWizard()},setup(){return{chevronBackOutline:A,checkmark:W}},methods:{markWizard(){},getSaveFunction(){},getFormatedData(e){return e.map(t=>t==null?void 0:t.data)},async saveData(){this.saveMedicalFollowUp(),this.savePersistentBehaviours(),this.saveIPV(),await j(),this.$router.push("contact")},async buildMedicalFollowUp(){return[...await u(this.medicalFollowUp),...await r(this.medicalFollowUp),...await m(this.medicalFollowUp)]},async validations(e,t){return t.every(a=>Y(e,a,this[a]))},async buildPersistentBehaviours(){return[...await u(this.persistentBehaviour),...await r(this.persistentBehaviour),...await m(this.persistentBehaviour)]},async buildCurrentPhysiologicalSymptoms(){return[...await r(this.physiologicalSymptoms)]},async buildIPV(){return[...await r(this.ipv),...await m(this.ipv)]},async buildFetalMovement(){return[...await u(this.fatalMovement)]},async saveMedicalFollowUp(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new rt(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create medical follow up encounter");if(!await t.saveObservationList(await this.buildMedicalFollowUp()))return n("Unable to create patient Medical follow up details!");p("Medical follow up has been created")}console.log(await this.buildMedicalFollowUp())},async savePersistentBehaviours(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new h(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create persistent behaviour encounter");if(!await t.saveObservationList(await this.buildPersistentBehaviours()))return n("Unable to create patient persistent behaviour details!");p("Persistent behaviour details have been created")}console.log(await this.buildPersistentBehaviours())},async saveIPV(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new h(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create IPV encounter");if(!await t.saveObservationList(await this.buildIPV()))return n("Unable to create patient IPV details!");p("IPV details have been created")}console.log(await this.buildIPV())}}});function ct(e,t,a,l,pt,ut){const w=s("Toolbar"),b=s("DemographicBar"),f=s("Stepper"),I=s("ion-content"),S=s("BasicFooter"),_=s("ion-page");return R(),N(_,null,{default:d(()=>[i(w),i(I,{fullscreen:!0},{default:d(()=>[i(b),i(f,{stepperTitle:"Symptoms  and follow up",wizardData:e.wizardData,onUpdateStatus:e.markWizard,StepperData:e.StepperData,backUrl:e.userRoleSettings.url,backBtn:e.userRoleSettings.btnName,getSaveFunction:e.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),i(S,{onFinishBtn:t[0]||(t[0]=mt=>e.saveData())})]),_:1})}const Rt=J(lt,[["render",ct]]);export{Rt as default};
