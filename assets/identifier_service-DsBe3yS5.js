var d=Object.defineProperty;var u=(i,t,e)=>t in i?d(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var n=(i,t,e)=>u(i,typeof t!="symbol"?t+"":t,e);import{S as r}from"./index-Cu2JEMub.js";class c extends r{constructor(){super();n(this,"identifierType");this.identifierType=-1}static getIdentifierTypes(){return super.getJson("types/patient_identifiers")}static async arvNumberExists(e){return(await super.getJson("programs/".concat(super.getProgramID(),"/lookup_arv_number/").concat(e))).exists}static async ncdNumberExists(e){return(await super.getJson("programs/".concat(super.getProgramID(),"/lookup_ncd_number/").concat(e))).exists}getIdentifierType(){return this.identifierType}setIdentifierType(e){this.identifierType=e}getDuplicateIndentifiers(){return r.getJson("search/identifiers/duplicates",{type_id:this.identifierType})}getPatientsByIdentifier(e){return r.getJson("search/patients/by_identifier",{type_id:this.identifierType,identifier:e})}getMultipleIdentifiers(){return r.getJson("search/identifiers/multiples",{type_id:this.identifierType})}voidMultipleIdentifiers(e,s,a){const p={identifiers:e,reason:s,identifier_type:a};return r.void("void_multiple_identifiers",p)}}export{c as I};
