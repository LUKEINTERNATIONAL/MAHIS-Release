System.register(["./vendor-legacy-COMGl7lq.js","./index-legacy-Bv9RyvRz.js","./lodash-legacy-C-x9g9Na.js","./previousVitals-legacy-Dg0wdhWs.js","./encounter_type-legacy-YQTDhsTK.js","./group_validation-legacy-D3FWHLT0.js","./SvgDynamicColor-legacy-sap77OsE.js","./VitalsStore-legacy-CjTfZoSI.js","./formatServerData-legacy-BsmlQwqA.js","./apexcharts-legacy-TNNTKr7L.js","./app_encounter_service-legacy-CbpRm70U.js"],(function(e,t){"use strict";var a,i,l,n,r,o,u,s,v,c,d,p,g,m,y,D,f,B,b,h,w,A,E,P,C,F,H,S,T,x,R,I,N,V,_,O,M,k,q,j,L,W;return{setters:[e=>{a=e.R,i=e.r,l=e.c,n=e.d,r=e.b1,o=e.bY,u=e.w,s=e.a,v=e.E,c=e.e,d=e.f,p=e.l,g=e.z,m=e.k,y=e.A,D=e.F,f=e.O},e=>{B=e.i,b=e.u,h=e.aF,w=e.P,A=e.b7,E=e.Y,P=e.H,C=e.Q,F=e.aZ,H=e.x,S=e.B,T=e.aA,x=e.aB,R=e.y,I=e.k,N=e.t,V=e._},e=>{_=e.l},e=>{O=e.P},e=>{M=e.s,k=e.E},e=>{q=e.v},e=>{j=e.c},e=>{L=e.u},e=>{W=e.f},null,null],execute:function(){var t=document.createElement("style");t.textContent=".vitals_title[data-v-24c5f37c]{border-bottom:1px solid #b3b3b3;margin-bottom:50px}.input-with-icon[data-v-24c5f37c]{position:relative}.input-icon[data-v-24c5f37c]{position:absolute;left:10px;top:50%;transform:translateY(-50%);color:gray}ion-col[data-v-24c5f37c]{padding-bottom:15px}h5[data-v-24c5f37c]{margin-top:0;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}\n/*$vite$:1*/",document.head.appendChild(t);const U=[{isFinishBtn:!1,validationStatus:"",sectionHeader:"Height and weight",actionBtn:"Finish and Save",data:{rowData:[{colData:[{inputHeader:"Height*",unit:"cm",icon:B.height,value:"",name:"Height (cm)",required:!0,eventType:"input",alertsErrorMassage:"",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"vitalsHeight"},{inputHeader:"Weight*",unit:"kg",icon:B.weight,value:"",name:"Weight",required:!0,eventType:"input",alertsErrorMassage:"",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"vitalsWeight"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"bmi",index:""}],previousView:{name:"vitals"}},{sectionHeader:"Blood pressure",data:{rowData:[{colData:[{inputHeader:"Systolic Pressure",unit:"mmHg",icon:B.systolicPressure,value:"",name:"Systolic",required:!0,eventType:"input",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsSystolicPressure"},{inputHeader:"Diastolic pressure",unit:"mmHg",icon:B.diastolicPressure,value:"",name:"Diastolic",required:!0,eventType:"input",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsDiastolicPressure"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"bp",index:""}],previousView:{name:"vitals"}},{sectionHeader:"Temperature and rates",data:{rowData:[{colData:[{inputHeader:"Temperature",unit:"C",icon:B.temprature,value:"",name:"Temperature",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsTemperature"},{inputHeader:"Pulse rate",unit:"BMP",icon:B.pulse,value:"",name:"Pulse",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsPulseRate"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"temp",index:""},{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"pulse",index:""}]},{sectionHeader:"null",data:{rowData:[{colData:[{inputHeader:"Respiratory rate",unit:"BMP",icon:B.respiratory,value:"",name:"Respiratory rate",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsRespiratoryRate"},{inputHeader:"Oxygen saturation",unit:"%",icon:B.oxgenStaturation,value:"",name:"SAO2",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"notRequiredVitalsOxygenSaturation"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"respiratory",index:""},{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"oxygen",index:""}]}],Y=a("NCDVitalsStore",{state:()=>({vitals:[...U],current_patient:{}}),actions:{setVitals(e){this.vitals=e},getInitialVitals(e){var t;return null!==(t=this.current_patient)&&void 0!==t&&t.ID&&this.current_patient.ID,_.cloneDeep(U)},setCurrentPatient(e){this.current_patient=e}},persist:!0}),$={class:"ion-padding",slot:"content"};e("default",V(n({__name:"Vitals",setup(e,{expose:t}){const a=b(),n=Y();r();const B=o(),V=i(),_=i({}),U=function(){const e=i({}),t=i({});let a=i({});const n=b(),r=l((()=>n.patient)),o=L();a=l((()=>o.vitals));const u=async()=>{var t,i,l,n,r,o;if(!a.value[0])return;const u=null!==(t=null===(i=e.value)||void 0===i?void 0:i.color)&&void 0!==t?t:[];s("bmi","BMI "+(null!==(l=null===(n=e.value)||void 0===n?void 0:n.index)&&void 0!==l?l:""),"",{colors:u,value:null!==(r=null===(o=e.value)||void 0===o?void 0:o.result)&&void 0!==r?r:""},E.iconBMI(u))},s=async(e,t,i,l,n="")=>{var r,o;if(!t)return;const u=t+" "+i,s=null!==(r=null==l?void 0:l.colors)&&void 0!==r?r:[];A(a.value,e,"icon",n||""),A(a.value,e,"textColor",s[1]),A(a.value,e,"index",u),A(a.value,e,"backgroundColor",s[0]),A(a.value,e,"value",null!==(o=null==l?void 0:l.value)&&void 0!==o?o:"")},v=(e,t)=>{if(e&&t){let a,i,l,n;const r=(new w).getAge();return r<1?(a=75,i=100,l=50,n=70):r>=1&&r<6?(a=80,i=110,l=50,n=80):r>=6&&r<13?(a=85,i=120,l=55,n=80):r>=13&&r<18?(a=95,i=140,l=60,n=90):(a=100,i=130,l=60,n=90),e<a&&t<l?{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low BP "}:e>=a&&e<=i&&t>=l&&t<=n?{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal BP "}:e>140&&t>90?{colors:["#FECDCA","#B42318","#FDA19B"],value:"High BP"}:e<a?{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low BP (Using Systolic Only)"}:e>=a&&e<=i?{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal BP (Using Systolic Only)"}:{colors:["#FECDCA","#B42318","#FDA19B"],value:"High BP (Using Systolic Only)"}}return{}};return{BMI:e,BPStatus:t,vitalsData:a,patient:r,setTodayVitals:async()=>{var e;const t=P.getAgeInYears(null===(e=r.value)||void 0===e||null===(e=e.personInformation)||void 0===e?void 0:e.birthdate),i=["Height (cm)","Weight","Systolic","Diastolic","Temperature","Pulse","SAO2","Respiratory rate"].map((async e=>{const i=await C.getFirstObsDatetime(r.value.patientID,e);i&&P.toStandardHisFormat(i)==P.sessionDate()?("Weight"==e&&F(a.value,"Height And Weight Not Done","displayNone",!0),"Systolic"==e&&F(a.value,"Blood Pressure Not Done","displayNone",!0),"Pulse"==e&&F(a.value,"Pulse Rate Not Done","displayNone",!0),"Respiratory rate"==e&&F(a.value,"Respiratory rate Not Done","displayNone",!0),H(a.value,e,"value",await C.getFirstValueNumber(r.value.patientID,e,P.sessionDate())),H(a.value,e,"disabled",!0)):H(a.value,e,"value",""),"Respiratory rate"===e&&t<=5&&(H(a.value,e,"required",!0),H(a.value,e,"inputHeader","Respiratory rate*"))}));await Promise.all(i)},setBMI:async(t,a)=>{var i,l,n,o;null!==(i=r.value)&&void 0!==i&&null!==(i=i.personInformation)&&void 0!==i&&i.gender&&null!==(l=r.value)&&void 0!==l&&null!==(l=l.personInformation)&&void 0!==l&&l.birthdate&&null==h.vitalsHeight(t)&&null==h.vitalsWeight(a)?e.value=await E.getBMI(parseInt(a),parseInt(t),null===(n=r.value)||void 0===n||null===(n=n.personInformation)||void 0===n?void 0:n.gender,P.calculateAge(null===(o=r.value)||void 0===o||null===(o=o.personInformation)||void 0===o?void 0:o.birthdate,P.sessionDate())):e.value={},await u()},updateBMI:u,updateBP:async(e,a)=>{var i,l,n,r;t.value=v(e,a),null==h.vitalsSystolic(e)&&null==h.vitalsDiastolic(a)||(t.value={});const o=null!==(i=null===(l=t.value)||void 0===l?void 0:l.colors)&&void 0!==i?i:[];s("bp",e+"/"+a,"mmHg",{colors:o,value:null!==(n=null===(r=t.value)||void 0===r?void 0:r.value)&&void 0!==n?n:""},j(o))},updateRate:s,getBloodPressureStatus:v,getTemperatureStatus:e=>{if(e&&null==h.vitalsTemperature(e)){let t,a;const i=(new w).getAge();if(i<=1)t=35.5,a=37.4;else if(i>=1&&i<=18)t=35.5,a=37.4;else if(i>=19&&i<=64)t=35.5,a=37.4;else{if(!(i>=65))return{};t=35.5,a=37.4}if(e<t)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low Temperature "};if(e>=t&&e<=a)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal Temperature "};if(e>a)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High Temperature "}}return{}},getPulseRateStatus:e=>{if(null==h.vitalsPulseRate(e)){let t,a;const i=(new w).getAge();if(i<=.25)t=100,a=160;else if(i>=.25&&i<=1)t=80,a=120;else if(i>=1&&i<=2)t=80,a=120;else if(i>=6&&i<=12)t=70,a=100;else if(i>=13&&i<=18)t=55,a=90;else{if(!(i>=18))return{};t=60,a=100}if(e<t)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low Pulse Rate "};if(e>=t&&e<=a)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal Pulse Rate "};if(e>a)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High Pulse Rate "}}return{}},getOxygenSaturationStatus:e=>{if(e&&null==h.vitalsOxygenSaturation(e)){const t=95;if(e<t)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low oxygen saturation"};if(e>=t&&e<=100)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal oxygen saturation"}}return{}},getRespiratoryRateStatus:e=>{if(null==h.vitalsRespiratoryRate(e)){let t,a;const i=(new w).getAge();if(i<=1)t=30,a=60;else if(i>=1&&i<3)t=24,a=40;else if(i>=3&&i<=6)t=22,a=34;else if(i>=6&&i<=12)t=18,a=30;else if(i>=12&&i<=18)t=12,a=16;else{if(!(i>=19))return{};t=12,a=20}if(e<t)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low respiratory rate"};if(e>=t&&e<=a)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal respiratory rate"};if(e>a)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High respiratory rate"}}return{}}}}(),z=l((()=>a.patient)),G=l((()=>n.vitals));u((()=>B.path),(async()=>{_.value=G.value}),{deep:!0}),u((()=>z.value.ID),(async(e,t)=>{e!==t&&(Z(),Q(),await J())}));const Q=()=>{n.current_patient.ID!=z.value.ID&&(Z(),n.setCurrentPatient(z.value))},Z=()=>{n.setVitals(n.getInitialVitals(z.value.ID))},J=async()=>{const e=await C.getFirstValueNumber(z.value.patientID,"Height (cm)"),t=await C.getFirstObsDatetime(z.value.patientID,"Height (cm)"),a=new w;e&&(f(t).diff(a.getBirthdate(),"year")<18||a.getAge()<18||(H(G.value,"Height (cm)","disabled",!0),H(G.value,"Height (cm)","value",e),H(G.value,"Height (cm)","buildConceptIgnore",!0),T(G.value,"Height (cm)","displayNone",!0),x(G.value,"Height Not Done","displayNone",!0),T(G.value,"Height (cm)","value","")))};return s((async()=>{Z(),_.value=G.value,await J()})),t({onSubmit:async()=>{const e=await W(G.value);return await q(G.value)&&e.length>0?(await M(z.value.patientID,k.VITALS,e),I("Vitals saved successful"),!0):(N("Please fill all required fields before submitting"),!1)}}),(e,t)=>{const a=v("ion-label"),i=v("ion-item"),l=v("ion-accordion"),n=v("ion-accordion-group"),r=v("ion-row");return d(),c(D,null,[p(S,{contentData:G.value,"onUpdate:inputValue":t[0]||(t[0]=e=>(async()=>{const e=R(G.value,"Height (cm)","value"),t=R(G.value,"Weight","value"),a=R(G.value,"Systolic","value"),i=R(G.value,"Diastolic","value"),l=R(G.value,"Temperature","value"),n=R(G.value,"Pulse","value"),r=R(G.value,"Respiratory rate","value"),o=R(G.value,"SAO2","value");await U.setBMI(e,t),await U.updateBP(a,i);const u=U.getPulseRateStatus(n);await U.updateRate("pulse",n," BMP",u,4);const s=U.getTemperatureStatus(l);U.updateRate("temp",l,"°C",s,4);const v=U.getRespiratoryRateStatus(r);U.updateRate("respiratory",r,"BMP",v,6);const c=U.getOxygenSaturationStatus(o);U.updateRate("oxygen",o,"%",c,6)})())},null,8,["contentData"]),p(r,null,{default:g((()=>[p(n,{ref_key:"accordionGroup",ref:V,class:"previousView"},{default:g((()=>[p(l,{value:"first","toggle-icon-slot":"start",style:{"border-radius":"10px","background-color":"#fff"}},{default:g((()=>[p(i,{slot:"header",color:"light"},{default:g((()=>[p(a,{class:"previousLabel"},{default:g((()=>t[1]||(t[1]=[y("Previous measurements")]))),_:1,__:[1]})])),_:1}),m("div",$,[p(O)])])),_:1})])),_:1},512)])),_:1})],64)}}}),[["__scopeId","data-v-24c5f37c"]]))}}}));
