var $t=Object.defineProperty;var Tt=(e,t,n)=>t in e?$t(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var X=(e,t,n)=>Tt(e,typeof t!="symbol"?t+"":t,n);import{d as z,ab as oe,M as st,ac as Ae,aa as ot,_ as De,dz as it,dF as rt,ad as Be,a2 as he,E as be,G as Pe,a7 as Se,I as Ce,bg as lt,N as Ne,aY as ct,R as qe,H as D,O as ee,f as C,J as l,l as o,k as b,K as x,Q as J,e as L,F as re,P as Ie,aS as K,ct as dt,r as k,c as ie,w as ye,a as Oe,u as A,aI as xt,n as Rt,b4 as je,cI as Ft,D as Ee,m as Z,b3 as Ht,b0 as ut,bd as Vt,aR as Ut,L as He,a9 as Jt,p as ue,aP as zt,aO as qt,ap as Wt,aM as Gt,a6 as Kt,bp as Yt,bl as jt,bK as Qt,aG as Xt}from"./vendor-CwRShy1a.js";import{aT as Le,S as O,aM as W,J as Me,aQ as Zt,n as me,H as w,G as le,u as q,_ as j,az as Qe,k as te,O as pe,aA as en,t as ne,aK as Ve,aF as Ue,o as tn,ba as nn,bb as an,bh as sn,Q as pt,U as Xe,l as mt,h as on,s as Je,a$ as rn,b9 as ln,B as ht,bg as cn,K as Y,ae as Re,bi as dn,aV as gt,P as ft,a6 as un,aN as pn,bj as mn,bk as hn,ap as gn,aH as $e,$ as fn,aY as ae,A as we,bl as vn,d as _n,aw as Fe,z as yn,ax as Dn,w as Ze}from"./index-DOaVu21k.js";import{D as bn}from"./DashBox-CnjbFVKZ.js";import{B as G}from"./BasicForm-PN6ZnWL3.js";import{u as ze,P as vt,L as Sn}from"./lab_order-B7U6S9xJ.js";import{v as et}from"./group_validation-BuNgO11D.js";import{l as _e}from"./lodash-Dt8AsbQm.js";import{g as Cn,a as _t,D as se}from"./drug_prescription_service-DevJslwF.js";import{A as In}from"./ncd_appointment_service-E-jfj7hh.js";import{D as On}from"./DateInputField-BvQhYj0t.js";import{D as yt}from"./drug_service-CHo6iofw.js";class Mn extends Le{constructor(t,n){super(t,8,n)}static async getDiagnosis(t="",n=1,a=10){if(O.getLanConnectionStatus()||O.getPouchDbStatus())return await W.getConceptSet("Qech outpatient diagnosis list");{const s=await W.getConceptID("Qech outpatient diagnosis list");return Le.getJson("diagnosis",{id:s,name:t,page:n,page_size:a})}}}const kn=z({components:{IonButtons:ct,IonButton:Ne,IonModal:lt,IonHeader:Ce,IonContent:Se,IonToolbar:Pe,IonTitle:be,IonItem:he,IonList:Be,IonAvatar:rt,IonImg:it,IonLabel:De,IonPage:ot,IonMenu:Ae,BasicForm:G,IonFooter:st,DynamicButton:Me},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{type:Object,default:{}},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},computed:{...oe(q,["patient"]),...oe(ze,["labResults"])},mounted(){},methods:{dismiss(){qe.dismiss()},async saveResults(){const e=await this.buildResults();this.patient.labOrders.results=[{encounter_id:"",date:w.sessionDate(),measures:e,test_id:this.labResults[0].id}];let t=!1;for(let n=0;n<this.patient.labOrders.unsaved.length;n++)if(this.patient.labOrders.unsaved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.unsaved[n].tests&&this.patient.labOrders.unsaved[n].tests.length>0){this.patient.labOrders.unsaved[n].tests[0].result=e,t=!0;break}if(!t){for(let n=0;n<this.patient.labOrders.saved.length;n++)if(this.patient.labOrders.saved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.saved[n].tests&&this.patient.labOrders.saved[n].tests.length>0){this.patient.labOrders.saved[n].tests[0].result=e;break}}await savePatientRecord(this.patient),le("Saved successfully"),this.$emit("saved")},async buildResults(){let e=[];return await Promise.all(this.labResults[1].data.rowData[0].colData.map(async t=>{var a;let n;O.getPouchDbStatus()||O.getLanConnectionStatus()?n=await me("testResultIndicators",{selector:{test_type_id:t.id}}):n=await vt.getTestIndicatorsWithID(t.id),e.push({indicator:{name:(a=n[0])==null?void 0:a.name,concept_id:t.id},value:t.value.name||t.value||"not done",value_modifier:"",value_type:"text"})})),e},async nav(e,t){const n=ze();t=="not_save"?(await Zt(),n.setLabResults(!1)):n.setLabResults(!0),this.dismiss(),this.$router.push(e)}}}),wn={class:"modal_wrapper"},Nn={class:"center text_12"};function Ln(e,t,n,a,s,u){const r=D("ion-title"),c=D("ion-button"),m=D("ion-buttons"),g=D("ion-toolbar"),_=D("ion-header"),I=D("basic-form"),h=D("ion-row"),R=D("ion-content"),S=D("DynamicButton"),f=D("ion-footer"),P=D("ion-modal");return C(),ee(P,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[2]||(t[2]=B=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:l(()=>[o(_,null,{default:l(()=>[o(g,null,{default:l(()=>[o(r,null,{default:l(()=>[b("b",null,"Enter lab results for ("+x(e.labResults[0].name)+") test",1)]),_:1}),o(m,{slot:"end"},{default:l(()=>[o(c,{onClick:t[0]||(t[0]=B=>e.$emit("closeModal"))},{default:l(()=>t[3]||(t[3]=[J("Close")])),_:1,__:[3]})]),_:1})]),_:1})]),_:1}),o(R,{class:"ion-padding"},{default:l(()=>[b("div",wn,[b("div",Nn,[o(h,null,{default:l(()=>[o(I,{contentData:e.labResults},null,8,["contentData"])]),_:1})])])]),_:1}),o(f,{translucent:!0},{default:l(()=>[o(g,null,{default:l(()=>[o(S,{onClick:t[1]||(t[1]=B=>e.saveResults()),name:"Save",fill:"clear",iconSlot:"icon-only",style:{float:"right"}})]),_:1})]),_:1})]),_:1},8,["is-open","keyboard-close"])}const An=j(kn,[["render",Ln],["__scopeId","data-v-dd82fb8d"]]),Bn=z({components:{IonButtons:ct,IonButton:Ne,IonModal:lt,IonHeader:Ce,IonContent:Se,IonToolbar:Pe,IonTitle:be,IonItem:he,IonList:Be,IonAvatar:rt,IonImg:it,IonLabel:De,IonPage:ot,IonMenu:Ae,BasicForm:G,IonFooter:st,DynamicButton:Me},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{default:[]},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},methods:{dismiss(){qe.dismiss()},nav(e,t){this.dismiss(),this.$router.push(e)}}}),Pn={class:"modal_wrapper"},En={class:"center text_12"};function $n(e,t,n,a,s,u){const r=D("ion-title"),c=D("ion-button"),m=D("ion-buttons"),g=D("ion-toolbar"),_=D("ion-header"),I=D("ion-skeleton-text"),h=D("ion-col"),R=D("ion-row"),S=D("ion-content"),f=D("ion-modal");return C(),ee(f,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[1]||(t[1]=P=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:l(()=>[o(_,null,{default:l(()=>[o(g,null,{default:l(()=>[o(r,null,{default:l(()=>[b("b",null,"Lab results for ("+x(e.content.name)+") test",1)]),_:1}),o(m,{slot:"end"},{default:l(()=>[o(c,{onClick:t[0]||(t[0]=P=>e.$emit("closeModal"))},{default:l(()=>t[2]||(t[2]=[J("Close")])),_:1,__:[2]})]),_:1})]),_:1})]),_:1}),o(S,{class:"ion-padding"},{default:l(()=>[b("div",Pn,[b("div",En,[o(R,null,{default:l(()=>[(C(!0),L(re,null,Ie(e.content.result,(P,B)=>(C(),ee(h,{size:"4",key:B},{default:l(()=>[o(R,null,{default:l(()=>[o(h,{size:"8"},{default:l(()=>[P.indicator&&P.indicator.name?(C(),L(re,{key:0},[J(x(P.indicator.name),1)],64)):(C(),ee(I,{key:1,animated:"",style:{width:"80%"}}))]),_:2},1024),o(h,{class:"bold",size:"0.5"},{default:l(()=>t[3]||(t[3]=[J(":")])),_:1,__:[3]}),o(h,{class:"bold",size:"2"},{default:l(()=>[J(x(P.value),1)]),_:2},1024)]),_:2},1024)]),_:2},1024))),128))]),_:1})])])]),_:1})]),_:1},8,["is-open","keyboard-close"])}const Tn=j(Bn,[["render",$n],["__scopeId","data-v-ec78e656"]]),xn=z({__name:"AddLabTestModal",setup(e){const t=q(),{patient:n}=K(t);dt();const a=te,s=k(""),u=k(""),r=k(""),c=k(""),m=k(null),g=ie(()=>[{componentType:"multiSelectInputField",name:"test",header:"Test",options:c.value,grid:{s:"6"},icon:te.search,validation:Qe.required,onChange:S=>{s.value=S.name}},{componentType:"multiSelectInputField",name:"specimen",header:"Specimen",grid:{s:"6"},icon:te.search,validation:Qe.required,value:r.value.length==1?r.value[0]:"",options:r.value.length>1?r.value:[]}]);ye(s,async S=>{if(S)try{r.value=await _(S)}catch(f){r.value=[]}else r.value=[]});const _=async S=>{let f;return O.getPouchDbStatus()||O.getLanConnectionStatus()?f=await me("specimens"):f=await pe.getSpecimens("",1e3),await W.getConceptSet(S,"",{names:f.map(B=>B.name)})};ye(n,async()=>{u.value=[...n.value.labOrders.saved,...n.value.labOrders.unsaved]},{deep:!0});const I=()=>{qe.dismiss()},h=async()=>O.getPouchDbStatus()||O.getLanConnectionStatus()?await me("test_types"):await pe.getTestTypes(),R=async()=>{var v,M,E,V,F,H;if(m.value&&m.value.validateForm()){ne("Test not saved");return}if(!m.value){console.error("Form reference is not available");return}const S=m.value.getFormValues(),f=[{concept_id:S.test.concept_id,name:S.test.name,specimen:S.specimen.name,reason:"Routine",specimenConcept:await W.getConceptID(S.specimen.name,!0)}];let B=(await pe.buildLabOrders("",f))[0];B.order_date=B.date,B.specimen.name=S.specimen.name,B.tests[0].name=S.test.name;const d=JSON.parse(JSON.stringify(n.value));(E=(M=(v=d.labOrders)!=null?v:d.labOrders={}).unsaved)!=null||(M.unsaved=[]),(H=(F=(V=d.labOrders)!=null?V:d.labOrders={}).saved)!=null||(F.saved=[]),d.labOrders.unsaved.push(B),await Ve(d),u.value=[...d.labOrders.saved,...d.labOrders.unsaved],I()};return Oe(async()=>{c.value=await h()}),(S,f)=>{const P=D("ion-icon"),B=D("ion-col"),d=D("ion-row"),v=D("ion-footer");return C(),L(re,null,[o(A(Ce),{style:{display:"flex","justify-content":"space-between"}},{default:l(()=>[o(A(be),{class:"modalTitle"},{default:l(()=>f[2]||(f[2]=[J("Add Lab Test")])),_:1,__:[2]}),o(P,{onClick:f[0]||(f[0]=M=>I()),style:{"padding-top":"10px","padding-right":"10px"},icon:A(a).cancel},null,8,["icon"])]),_:1}),o(A(Se),{fullscreen:!0,class:"ion-padding",style:{"--background":"#fff"}},{default:l(()=>[o(en,{formData:g.value,ref_key:"formRef",ref:m},null,8,["formData"])]),_:1}),o(v,{collapse:"fade",class:"ion-no-border"},{default:l(()=>[o(d,null,{default:l(()=>[o(B,null,{default:l(()=>[o(Me,{onClick:f[1]||(f[1]=M=>R()),name:"Save",fill:"solid",style:{float:"right",margin:"2%",width:"130px"}})]),_:1})]),_:1})]),_:1})],64)}}}),Rn=j(xn,[["__scopeId","data-v-6457cc61"]]),Fn={class:"container"},Hn={class:"table-responsive"},Vn=z({__name:"LabOrdersList",props:{propOrders:{default:()=>[]}},setup(e){const t=e,n=xt(),a=dt(),s=q(),u=ze(),r=Ue(),c=tn(),{patient:m}=K(s),{labResults:g}=K(u),{investigations:_}=K(r),{patientsWaitingForVitals:I,patientsWaitingForConsultation:h,patientsWaitingForLab:R,patientsWaitingForDispensation:S}=K(c),f=k(),P=k([]),B=k(["Lab Test","Specimen","Accession Number","Order Date","Result","Action"]);k(!0);const d=k(!1);k(!1);const v=k([]),M=k([]),E=k([]);k([]),k(!1);const V=k(""),F=k(!1),H=k(!1),Te=k(""),ke=te;nn(["#006401"]),an(["#636363"]);const We=k({responsive:!0,select:!1,layout:{topStart:"buttons",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,buttons:[{text:" <b>+ Add other tests </b>",className:"add-test text-white",action:async()=>{await wt()}},{text:" <b>Send to Lab </b>",className:"send-lab text-white",attr:{id:"send-to-lab-btn"},action:async()=>{await Nt()}}]});ie(()=>E.value.some(p=>p.btn&&p.btn.includes("enter_results")));const Ct=async()=>{F.value=!1,await de()},It=()=>{const p=document.getElementById("send-to-lab-btn");p&&(p.style.display="none")},Ot=()=>{const p=document.getElementById("send-to-lab-btn");p&&(p.style.display="inline")},Mt=()=>{Xe.getProgramID()==14&&!Xe.isLabTechnician()&&d.value?Ot():It()},kt=async p=>{const N=[{concept_id:await W.getConceptID(p.name,!0),name:p.name,specimen:p.specimen,reason:"Routine",specimenConcept:await W.getConceptID(p.specimen,!0)}];let i=(await pe.buildLabOrders("",N))[0];i.order_date=i.date,i.specimen.name=await W.getConceptName(i.specimen.concept_id),i.tests[0].name=await W.getConceptName(i.tests[0].concept_id),m.value.labOrders.unsaved.push(i),await Ve(m.value)},wt=async()=>{await mt(Rn,{class:"lab-results-modal"},!0,{title:"name"}),await de()},Nt=async()=>{await on("Do you want to send this patient to the lab?",{cancelBtnLabel:"Cancel",confirmBtnLabel:"Send to Lab",returnName:!0})=="Confirm"&&await Lt()},Lt=async()=>{try{const p=String(localStorage.getItem("locationID"));if(!p){Je("Location not found");return}await rn.addPatientToStage(m.value,"LAB"),await c.refresh(p),await n.push("home"),le("The patient successfully sent to the lab. You may now attend to other patients.")}catch(p){console.error("Error sending to lab:",p),Je("Failed to send patient to lab")}},Ge=async()=>{var N,y,i,U,$;if(!((N=m.value)!=null&&N.labOrders)||(v.value=[...(i=(y=m.value)==null?void 0:y.labOrders)==null?void 0:i.saved,...($=(U=m.value)==null?void 0:U.labOrders)==null?void 0:$.unsaved],!v.value))return;const p=await v.value.filter(T=>w.toStandardHisFormat(w.sessionDate())===w.toStandardHisFormat(T.order_date));p.length>0?_.value[0].selectedData=p:_.value[0].selectedData=""},At=async(p,N)=>{var i,U,$;if(await pt("Do you want to delete ".concat(p.tests[0].name," ?"),N)){const T=JSON.parse(JSON.stringify(m.value));T.labOrders.saved.some(ce=>{var fe,ve;return ce.order_date===p.order_date&&((fe=ce==null?void 0:ce.tests[0])==null?void 0:fe.name)==((ve=p==null?void 0:p.tests[0])==null?void 0:ve.name)})?(T.labOrders.saved=Ke(T.labOrders.saved,p.tests[0].name,p.order_date),($=(U=(i=T.labOrders)!=null?i:T.labOrders={}).voided)!=null||(U.voided=[]),T.labOrders.voided.push({orderId:p.id,reason:"Mistake entry"})):T.labOrders.unsaved=Ke(T.labOrders.unsaved,p.tests[0].name,p.date),await Ve(T)}await de()},Ke=(p,N,y)=>p.filter(i=>(i.order_date===y&&(i.tests=i.tests.filter(U=>U.name!==N)),i.tests.length>0)),Bt=async p=>{let N;O.getPouchDbStatus()||O.getLanConnectionStatus()?N=await me("testResultIndicators",{selector:{test_type_id:p.concept_id}}):N=await vt.getTestIndicatorsWithID(p.concept_id);const y=[p,{validationStatus:"",data:{rowData:[{colData:[]}]}}];N.forEach(i=>{let U={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:""};if(i.name=="RBS"&&(U={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),i.name=="FBS"&&(U={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),i.name=="MRDT"||i.name=="Tuberculosis program"||i.name=="Vdrl"||i.name=="Hepatitis B"||i.name=="Lam"||i.name=="CrAg"||i.name=="CD4 count"||i.name=="Leukocytes"||i.name=="Protein"||i.name=="Nitrite"||i.name=="Urine Ketones"||i.name=="HIV test"){let $=[];(i.name=="MRDT"||i.name=="Vdrl"||i.name=="Hepatitis B"||i.name=="CrAg"||i.name=="Lam")&&($=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),i.name=="Tuberculosis program"&&($=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),i.name=="CD4 count"&&($=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(i.name=="Leukocytes"||i.name=="Protein"||i.name=="Nitrite"||i.name=="Ketones"||i.name=="Urine Ketones")&&($=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),i.name=="HIV test"&&($=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),U={inputHeader:i.name,icon:te.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:$,id:i.concept_id,idName:"district_id"}}y[1].data.rowData[0].colData.push(U)}),u.setLabResults(y),F.value=!0,v.value=[...m.value.labOrders.saved,...m.value.labOrders.unsaved]},Pt=async p=>{V.value=p,H.value=!0},de=async()=>{if(!m.value.labOrders)return;v.value=[...m.value.labOrders.saved,...m.value.labOrders.unsaved];const p=Et(v.value),N=O.getProgramID()==32?[["FBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"FBS",specimen:"Blood"}),"'>Order Test</button> ")],["HbA1c","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"HbA1c",specimen:"Blood"}),"'>Order Test</button> ")],["RBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"RBS",specimen:"Blood"}),"'>Order Test</button> ")]]:[],y=N.filter($=>!p.some(T=>T[0]===$[0])),i=p.filter($=>N.some(T=>T[0]===$[0])),U=p.filter($=>!i.some(T=>T[0]===$[0]));P.value=[...i,...y,...U],Mt(),await Ge(),je.use(Ft)},Et=(p,N)=>(d.value=!1,p.length>0?p.flatMap(y=>y.tests.flatMap(i=>{var ce,fe,ve,Ye;const U='<button class="btn btn-outline-success btn-sm result-btn" data-id=\''.concat(JSON.stringify(i),"'>Enter Result</button> "),$='<button class="btn btn-outline-secondary btn-sm attach-btn" data-id=\''.concat(JSON.stringify(i),"'>").concat(ke.attach2,"</button>"),T='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(i),"'>").concat(ke.view2,"</button> ");let ge=U+$;((ce=i==null?void 0:i.result)==null?void 0:ce.length)==1?ge=(i==null?void 0:i.result)!=null?((fe=i==null?void 0:i.result[0])==null?void 0:fe.value_modifier)+((ve=i==null?void 0:i.result[0])==null?void 0:ve.value):null:((Ye=i==null?void 0:i.result)==null?void 0:Ye.length)>1?(i==null||i.result,ge=T):y!=null&&y.accession_number&&(d.value=!0);let xe="";return y!=null&&y.accession_number?xe='<button class="btn btn-outline-secondary btn-sm" data-id=\''.concat(JSON.stringify(y),"'>").concat(ke.print2,"</button>"):ge="",[[i==null?void 0:i.name,y==null?void 0:y.specimen.name,(y==null?void 0:y.accession_number)||"",w.toStandardHisFormat(y==null?void 0:y.order_date),ge,xe+'\n                        <button class="btn btn-outline-danger btn-sm delete-btn" data-id=\''.concat(JSON.stringify(y),"'>").concat(ke.delete2,"</button>\n                        ")]]})):[]);return Oe(async()=>{O.getProgramID()==14&&We.value.buttons.push(),await Ge(),await de(),Rt(()=>{const p=f.value.dt;p.columns.adjust().draw(),p.on("click",".result-btn",N=>{const y=N.target.getAttribute("data-id");Bt(JSON.parse(y))}),p.on("click",".view-btn",N=>{const y=N.target.getAttribute("data-id");Pt(JSON.parse(y))}),p.on("click",".delete-btn",N=>{const y=N.target.getAttribute("data-id");At(JSON.parse(y),N)}),p.on("click",".order-btn",N=>{const y=N.target.getAttribute("data-id");kt(JSON.parse(y))})}),v.value=t.propOrders,Te.value=new sn(m.value.patientID),M.value=await O.getUserRoles()}),ye(()=>a,async()=>{await de()},{deep:!0}),ye(()=>m.value,async()=>{await de()},{deep:!0}),(p,N)=>(C(),L("div",Fn,[b("div",Hn,[o(A(je),{ref_key:"dataTable",ref:f,options:We.value,data:P.value,class:"display nowrap modern-table",width:"100%"},{default:l(()=>[b("thead",null,[b("tr",null,[(C(!0),L(re,null,Ie(B.value,y=>(C(),L("th",{key:y},x(y),1))),128))])])]),_:1},8,["options","data"])]),o(Tn,{popoverOpen:H.value,content:V.value,onCloseModal:N[0]||(N[0]=y=>H.value=!1)},null,8,["popoverOpen","content"]),o(An,{popoverOpen:F.value,onSaved:Ct,onCloseModal:N[1]||(N[1]=y=>F.value=!1)},null,8,["popoverOpen"])]))}}),Un=j(Vn,[["__scopeId","data-v-1a065630"]]),Jn=z({data:()=>({userRole:"",ready:!1,userRoleSettings:{}}),watch:{$route:{async handler(e){this.userRole=O.getUserRoles();const t=O.getProgramID(),n=O.getProgramName();this.userRole=="Lab"&&t==14&&(this.userRoleSettings={url:"home",btnName:"Back to home",stepperTitle:"Laboratory"}),t==14&&this.userRole!="Lab"&&(this.userRoleSettings={url:"home",btnName:"Go to waiting list",stepperTitle:"Consultation Plan"}),t==12&&(this.userRoleSettings={url:"contact",btnName:"Back"}),n=="LABOUR AND DELIVERY PROGRAM"&&(this.userRoleSettings={url:"labour/labourHome",btnName:"Back to home"}),n=="PNC PROGRAM"&&(this.userRoleSettings={url:"pnc/home",btnName:"Back to home"})},immediate:!0,deep:!0}}}),tt=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Skull",value:"Skull",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mastoid",value:"Mastoid",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"ParaSinuses",value:"ParaSinuses",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Optic Foramen",value:"PVD",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Orbits",value:"Orbits",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Nasal Bone",value:"Nasal Bone",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mandible",value:"Mandible",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TMJs",value:"TMJs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Zygomatic",value:"Zygomatic",checked:!1}]}}],zn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Neck",value:"Neck",checked:!1}]}}],qn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Chest",value:"Chest",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Heart",value:"Heart",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sternum",value:"Sternum",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ribs",value:"Ribs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SCJ",value:"SCJ",checked:!1}]}}],Wn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Abdomen",value:"Abdomen",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"IVP",value:"IVP",checked:!1}]}}],Gn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Clavicle",value:"Clavicle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Shoulder",value:"Shoulder",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Scapula",value:"Scapula",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Humerus",value:"Humerus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Elbow",value:"Elbow",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Forearm",value:"Forearm",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Wrist",value:"Wrist",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hand",value:"Hand",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Phalanges",value:"Phalanges",checked:!1}]}}],Kn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"CSpine",value:"CSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TSpine",value:"TSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"LSpine",value:"LSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SSpine",value:"SSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Coccyx",value:"Coccyx",checked:!1}]}}],Yn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Pelvis",value:"Pelvis",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sacroillac Joints",value:"Sacroillac Joints",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hip",value:"Hip",checked:!1}]}}],jn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Femur",value:"Femur",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Knee",value:"Knee",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Patella",value:"Patella",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Leg",value:"Leg",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ankle",value:"Ankle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Calcaneus",value:"Calcaneus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Foot",value:"Foot",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Toe",value:"Toe",checked:!1}]}}],Qn=Ee("RadiologyStore",{state:()=>({head:[...tt],neck:[...zn],chest:[...qn],abdomen:[...Wn],upper_extremity:[...Gn],spine:[...Kn],pelvis:[...Yn],lower_extremity:[...jn]}),actions:{setOPDDiagnosis(e){this.head=e},getInitial(){return[..._e.cloneDeep(tt)]}}}),Xn=["innerHTML"],Zn={class:"scrollable-container"},ea={key:0,class:"form-section"},ta={key:1,class:"form-section"},na={key:2,class:"form-section"},aa={key:3,class:"form-section"},sa={key:4,class:"form-section"},oa={key:5,class:"form-section"},ia={key:6,class:"form-section"},ra={key:7,class:"form-section"},la=z({__name:"RadiologyInvestigation",setup(e){const t=Qn(),{head:n,neck:a,chest:s,abdomen:u,upper_extremity:r,spine:c,pelvis:m,lower_extremity:g}=K(t),_=k(te),I=k([]),h=(S,f,P)=>{document.querySelectorAll("#".concat(S," path")).forEach(d=>{d.classList.toggle("white-fill")}),document.querySelectorAll("#".concat(f," line")).forEach(d=>{d.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(f," rect")).forEach(d=>{d.classList.toggle("bright-green-fill"),d.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(f," path")).forEach(d=>{d.classList.toggle("dark-green-fill")}),document.querySelectorAll("#".concat(f," circle")).forEach(d=>{d.classList.toggle("bright-green-fill")});const B=I.value.findIndex(d=>d.id===P);B>=0?I.value.splice(B,1):I.value.unshift({id:P,active:!0})},R=()=>{const S=document.getElementById("SPINE");S.style.display==="none"||S.style.display==""?S.style.display="block":S.style.display="none",h("SPINE","SPINE_LABEL-2","spine")};return Oe(()=>{const S=document.getElementById("HEAD");S&&S.addEventListener("click",()=>{h("HEAD","LABEL-6","head")});const f=document.getElementById("NECK");f&&f.addEventListener("click",()=>{h("NECK","LABEL-5","neck")});const P=document.getElementById("CHEST");P&&P.addEventListener("click",()=>{h("CHEST","LABEL-4","chest")});const B=document.getElementById("ABDOMEN_LABEL");B&&B.addEventListener("click",()=>{const H=document.getElementById("ABDOMEN-2");H.style.display==="none"||H.style.display==""?H.style.display="block":H.style.display="none",h("ABDOMEN","ABDOMEN_LABEL-2","abdomen")});const d=document.getElementById("UPPER_EXTRMITY");d&&d.addEventListener("click",()=>{h("UPPER_EXTRMITY","LABEL-3","upper_extremity")});const v=document.getElementById("SPINE"),M=document.getElementById("SPINE_LABEL"),E=document.getElementById("LOWER_SPINE_INACTIVE");v&&v.addEventListener("click",()=>{R()}),M&&M.addEventListener("click",()=>{R()}),E&&E.addEventListener("click",()=>{R()});const V=document.getElementById("PELVIS");V&&V.addEventListener("click",()=>{h("PELVIS","LABEL-2","pelvis")});const F=document.getElementById("LOWER_EXTREMITY");F&&F.addEventListener("click",()=>{h("LOWER_EXTREMITY","LABEL","lower_extremity")})}),(S,f)=>{const P=D("ion-col"),B=D("ion-row");return C(),ee(B,null,{default:l(()=>[o(P,{size:"7"},{default:l(()=>[b("div",{innerHTML:_.value.full_body_sk},null,8,Xn)]),_:1}),o(P,{size:"5",class:"form-column"},{default:l(()=>[b("div",Zn,[(C(!0),L(re,null,Ie(I.value,d=>(C(),L(re,null,[d.id==="head"?(C(),L("div",ea,[f[0]||(f[0]=b("h6",null,"Body Part: Head",-1)),o(G,{contentData:A(n)},null,8,["contentData"])])):d.id==="neck"?(C(),L("div",ta,[f[1]||(f[1]=b("h6",null,"Body Part: Neck",-1)),o(G,{contentData:A(a)},null,8,["contentData"])])):d.id==="chest"?(C(),L("div",na,[f[2]||(f[2]=b("h6",null,"Body Part: Chest",-1)),o(G,{contentData:A(s)},null,8,["contentData"])])):d.id==="abdomen"?(C(),L("div",aa,[f[3]||(f[3]=b("h6",null,"Body Part: Abdomen",-1)),o(G,{contentData:A(u)},null,8,["contentData"])])):d.id==="upper_extremity"?(C(),L("div",sa,[f[4]||(f[4]=b("h6",null,"Body Part: Upper Extremity",-1)),o(G,{contentData:A(r)},null,8,["contentData"])])):d.id==="spine"?(C(),L("div",oa,[f[5]||(f[5]=b("h6",null,"Body Part: Spine",-1)),o(G,{contentData:A(c)},null,8,["contentData"])])):d.id==="pelvis"?(C(),L("div",ia,[f[6]||(f[6]=b("h6",null,"Body Part: Pelvis",-1)),o(G,{contentData:A(m)},null,8,["contentData"])])):d.id==="lower_extremity"?(C(),L("div",ra,[f[7]||(f[7]=b("h6",null,"Body Part: Lower Extremity",-1)),o(G,{contentData:A(g)},null,8,["contentData"])])):Z("",!0)],64))),256))])]),_:1})]),_:1})}}}),ca=j(la,[["__scopeId","data-v-5ab54fe8"]]),da=z({name:"Menu",mixins:[Jn],components:{IonContent:Se,IonHeader:Ce,IonItem:he,IonList:Be,IonMenu:Ae,IonTitle:be,IonToolbar:Pe,IonInput:ut,IonPopover:Ht,DashBox:bn,SelectionPopover:cn,BasicInputField:ht,BasicForm:G,List:ln,DynamicButton:Me,LabOrdersList:Un,RadiologyInvestigation:ca},data(){return{segmentContent:"Lab Investigations",iconsContent:te,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:Ut,pulseOutline:Vt}},computed:{...oe(Ue,["investigations"]),...oe(q,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var e;(e=this.patient)!=null&&e.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(e){this.segmentContent=e},async getTests(){let e;O.getPouchDbStatus()&&O.getLanConnectionStatus()?e=await me("test_types"):e=await pe.getTestTypes(),Y(this.investigations,"test","multiSelectData",e)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var t;if(!((t=this.patient)!=null&&t.labOrders))return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=await this.labOrders.filter(n=>w.toStandardHisFormat(w.sessionDate())===w.toStandardHisFormat(n.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),Ue().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return et(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(Y(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(Y(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){et(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(e,t){for(let n of t)for(let a of n.tests)if(a.name===e)return!0;return!1},async saveTest(){await new Sn().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await W.getConceptID(this.inputFields[1].value.name,!0)}]),Y(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(e){if(e.inputHeader=="Test"&&this.checkTest(),Y(this.investigations,"specimen","alertsErrorMassage",""),e.inputHeader=="Test"&&e.value){let t;O.getPouchDbStatus()&&O.getLanConnectionStatus()?t=await me("specimens"):t=await pe.getSpecimens("",1e3),this.specimen=await W.getConceptSet(e.value.name,"",{names:t.map(n=>n.name)}),this.specimen.length==1?(Y(this.investigations,"specimen","value",this.specimen[0]),Y(this.investigations,"specimen","disabled",!0)):(Y(this.investigations,"specimen","value",""),Y(this.investigations,"specimen","disabled",!1)),Y(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(e){return await this.labOrders.filter(t=>t.name.toLowerCase().includes(e.toLowerCase()))},async filterSpecimen(e){var t;return(t=this.specimen[0])!=null&&t.name&&e?await this.specimen.filter(n=>n==null?void 0:n.name.toLowerCase().includes(e.toLowerCase())):[]},setTest(e){this.selectedText=e.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=e.name:this.investigations[0].data.rowData[0].colData[1].value=e.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),ua={class:"background"},pa={key:0},ma={key:1},ha={key:2},ga={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},fa={key:3},va={class:"ion-padding",slot:"content"},_a={key:4};function ya(e,t,n,a,s,u){const r=D("ion-label"),c=D("ion-segment-button"),m=D("ion-segment"),g=D("VisitsHistory"),_=D("LabOrdersList"),I=D("RadiologyInvestigation");return C(),L("div",ua,[o(m,{value:e.segmentContent,style:{"margin-top":"5px"}},{default:l(()=>[o(c,{value:"Lab Investigations",onClick:t[0]||(t[0]=h=>e.setSegmentContent("Lab Investigations"))},{default:l(()=>[o(r,null,{default:l(()=>t[3]||(t[3]=[J("Lab Investigations")])),_:1,__:[3]})]),_:1}),o(c,{value:"Radiology Investigation",onClick:t[1]||(t[1]=h=>e.setSegmentContent("Radiology Investigation"))},{default:l(()=>[o(r,null,{default:l(()=>t[4]||(t[4]=[J("Radiology Investigation")])),_:1,__:[4]})]),_:1}),o(c,{value:"Other Investigation",onClick:t[2]||(t[2]=h=>e.setSegmentContent("Other Investigation"))},{default:l(()=>[o(r,null,{default:l(()=>t[5]||(t[5]=[J("Other Investigation")])),_:1,__:[5]})]),_:1})]),_:1},8,["value"]),e.segmentContent=="Radiology Investigation"?(C(),L("div",pa,[o(g)])):Z("",!0),e.segmentContent=="Other Investigation"?(C(),L("div",ma)):Z("",!0),e.segmentContent=="Lab Investigations"?(C(),L("div",ha,[b("div",ga,[b("span",null,[o(_,{propOrders:e.labOrders},null,8,["propOrders"])])])])):Z("",!0),e.segmentContent=="Radiology Investigation"?(C(),L("div",fa,[b("div",va,[o(I)])])):Z("",!0),e.segmentContent=="Other Investigation"?(C(),L("div",_a)):Z("",!0)])}const Ds=j(da,[["render",ya],["__scopeId","data-v-0803dcda"]]),Dt=(e,t,n,a={})=>({drug_id:e,name:t,category:n,...a}),Da=Ee("OtherNCDMedicationsStore",{state:()=>({otherNCDMedications:[],selectedOtherNCDMedicationList:[]}),actions:{setSelectedNCDMedicationList(e){this.selectedOtherNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedOtherNCDMedicationList},addSearchedDrug(e){const t=Dt(e.drug_id,e.name,"Other",e);if(t.units=e.units,!this.otherNCDMedications.some(a=>a.drug_id===t.drug_id)){this.otherNCDMedications.unshift(t);const a={dosage:{morning:null,afternoon:null,evening:null},duration:null,...t};this.setSelectedNCDMedicationList(a)}},clearOtherNCDMedications(){this.otherNCDMedications=[],this.selectedOtherNCDMedicationList=[]}},persist:!0}),Q=Ee("NCDmedicationsStore",{state:()=>({medications:[],filteredMedications:[],selectedNCDMedicationList:[],frequency_selections:k({}),currentPatientID:""}),actions:{setMedications(e){this.medications=e,this.filteredMedications=e},setFilteredMedications(e){this.filteredMedications=e},initMedications(){},setSelectedNCDMedicationList(e){this.selectedNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedNCDMedicationList},clearMedicationDataStores(){this.medications=[],this.filteredMedications=[],this.selectedNCDMedicationList=[],this.frequency_selections=[]},setCurrentPatientID(e){this.currentPatientID=e}},persist:!0});function bs(){try{const e=Q(),t=Da();e.medications=[...t.otherNCDMedications,...e.medications],e.medications=e.medications.reduce((n,a)=>(n.some(s=>s.drug_id===a.drug_id)||n.push(a),n),[]),e.selectedNCDMedicationList=[...t.selectedOtherNCDMedicationList,...e.selectedNCDMedicationList],e.filteredMedications=e.medications,le("Medication added successfully")}catch(e){}}const ba={name:"DiabetesMedication",ids:[337,336,280,410,729,263,812,265,264,240,266,726,728,223]},nt={name:"AntiHypertensivesMedication",ids:[]},Sa={ids:[274,168,648,289,286,164,287,288,672,257,1233,671]},Ca={ids:[559,1236,1234,558,1235,1211,276,277,278,279]},Ia={ids:[556,653,557,652,943,1238,1240,1237,942,1239,946,1503,944,1504,945,1505]},Oa={ids:[116,85,117,1232,936,1364,937,1365,1366]};async function bt(e){const t=Q(),n=e.ids.map(async a=>{try{const s=await yt.getOfflineDrugById(a);if(s){const u=t.medications.findIndex(c=>c.drug_id===s.drug_id),r=Dt(s.drug_id,s.name,e.name,s);u!==-1?t.medications[u]=r:t.medications.push(r)}}catch(s){console.error("Error fetching drug ID ".concat(a,":"),s)}});return t.filteredMedications=t.medications,Promise.all(n)}async function Ss(e){try{const t=await yt.getOfflineDrugById(e);return{drug_id:e,dosage:{morning:null,afternoon:null,evening:null},duration:null,...t}}catch(t){Je("Error fetching drug details. Please try again."),console.error("Error fetching drug details:",t)}}function Cs(){return bt(ba)}function Is(){return nt.ids=[...Sa.ids,...Ca.ids,...Ia.ids,...Oa.ids],bt(nt)}function Ma(){Q().clearMedicationDataStores()}function ka(e){Q().setCurrentPatientID(e)}function Os(e){Q().currentPatientID!=e&&(Ma(),ka(e))}function Ms(){return Q().selectedNCDMedicationList.some(t=>{const{morning:n,afternoon:a,evening:s}=t.dosage,u=typeof n=="string"?Number(n):n,r=typeof a=="string"?Number(a):a,c=typeof s=="string"?Number(s):s;return typeof u=="number"&&u>0||typeof r=="number"&&r>0||typeof c=="number"&&c>0})}class wa extends Le{constructor(t,n){super(t,105,n)}}class Na extends Le{constructor(t,n){super(t,25,n)}static async get_____(t="",n=1,a=10){}}async function ks(e){var t,n,a;try{const s=q(),{patient:u}=K(s),r=JSON.parse(JSON.stringify(u.value));return(a=(n=(t=r.allergies)!=null?t:r.allergies={}).unsaved)!=null||(n.unsaved=[]),r.allergies.unsaved.push(...e),le("Allergies appended to patient record successfully"),r}catch(s){ne("Unable to save Allegies!")}}class ws{async onSubmitNotes(t,n,a){const s=new wa(t,n);await s.createEncounter(),await s.saveObservationList(a)}async onSubmitAllergies(t,n,a){try{const s=new Na(t,n);await s.createEncounter(),await s.saveObservationList(a),le("Allergies saved successfully")}catch(s){console.error("Error saving allergies:",s),ne("Failed to save allergies")}}}class Ns{constructor(){X(this,"programID");X(this,"providerID");X(this,"patientID");X(this,"date");X(this,"demographics");X(this,"previousDrugPrescriptions",[]);X(this,"previousClinicalNotes");X(this,"previousDrugAllergies");const t=q();this.demographics=t.patient,this.patientID=this.demographics.patientID,this.date=Re.getSessionDate(),this.providerID=O.getUserID(),this.programID=Re.getProgramID(),this.previousClinicalNotes={},this.previousDrugAllergies={}}async getPatientEncounters(){const t=await this.getPatientVisitDates(),n=t.map(async s=>{const u=s.value,r=await dn.getEncounters(this.patientID,{date:u});await Promise.all(r.map(async c=>{var m;if(c.type.name=="NOTES"){const{observations:g}=c;_e.isEmpty(g)||g.forEach(_=>{if(_.concept_id=="2688"){const I=w.toStandardHisDisplayFormat(_.obs_datetime);_e.isEmpty(this.previousClinicalNotes.hasOwnProperty(I))&&(this.previousClinicalNotes[I]=[]),this.previousClinicalNotes[I].push({date:I,notes:_.value_text})}})}if(c.type.name=="TREATMENT"){const{observations:g}=c;if(!_e.isEmpty(g))for(const _ in g){let I="<UNKNOWN CONCEPT>";const h=g[_];try{(m=h==null?void 0:h.concept)!=null&&m.concept_names?I=h.concept.concept_names[0].name:I=await W.getConceptName(h.concept_id)}catch(f){console.error(h,f)}const R=await Re.resolvePrimaryValue(h),S=w.toStandardHisDisplayFormat(h.date_created);I=="Allergic"&&(this.previousDrugAllergies.hasOwnProperty(S)||(this.previousDrugAllergies[S]=[]),this.previousDrugAllergies[S].push({date:S,value:R}))}}}))});await Promise.all(n);const a=t.map(async s=>{const u=await gt.getOrderByPatient(this.patientID,{start_date:s.value});if(!_e.isEmpty(u)){const r=u.map(c=>({drugName:c.drug.name,value:w.toStandardHisTimeFormat(c.order.start_date),dose:c.dose,frequency:Cn(c.frequency),prescription:w.toStandardHisFormat(c.order.auto_expire_date),duration:La(c.order.instructions),other:c}));this.previousDrugPrescriptions.push({prescriptionDate:w.toStandardHisDisplayFormat(s.value),previousPrescriptions:r})}});return await Promise.all(a),{previousDrugPrescriptions:this.previousDrugPrescriptions,previousClinicalNotes:this.previousClinicalNotes,previousDrugAllergies:this.previousDrugAllergies}}async getPatientVisitDates(){return(await ft.getPatientVisits(this.patientID,!1)).map(t=>({label:w.toStandardHisDisplayFormat(t),value:t,other:{isActive:t===un.getSessionDate()}}))}}function La(e){const t=/(\d+)\s+days/i,n=e.match(t);return n&&n.length>1?parseInt(n[1]):null}async function Ls(){const e=q(),{patient:t}=K(e),n=t.value,a=[8809,903,6410,6409],s="";let u;O.getLanConnectionStatus()||O.getPouchDbStatus()?u=await Mn.getDiagnosis(s,1,15):u=await O.getJson("diagnosis",{id:7409,page_size:2e3});const r=u.filter(h=>a.includes(h.concept_id));r.push({concept_id:8809,concept_name_id:926,concept_name_type:"FULLY_SPECIFIED",creator:1,date_created:"2004-06-25T00:00:00.000+02:00",date_voided:null,id:72,locale:"en",locale_preferred:0,name:"Hypertension",uuid:"b99faa1e-8d80-11d8-abbb-0024217bb78e",void_reason:null,voided:0,voided_by:null});const c=n.diagnosis.saved.map(h=>h.value_coded),m=n.diagnosis.unsaved.map(h=>h.value_coded),g=[...c,...m];return r.filter(h=>g.includes(h.concept_id)).map(h=>h.name)}const Aa=z({created(){},components:{IonItem:he,IonCol:Jt,IonLabel:De,IonIcon:He},data(){return{iconsContent:te,localMedicalDrugsList:[...this.$props._selectedMedicalDrugsList]}},props:{_selectedMedicalDrugsList:{type:Array,default:[]},show_actions_buttons:{type:Boolean,default:!0},highLightBackground:{type:String,default:"item-native"}},watch:{},methods:{highlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#006401"),this.highlightActionBtns(e)},undoHighlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#636363"),this.undohighlightActionBtns(e)},highlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="inline-block"},undohighlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="none"},asignLblID(e){return e+"_lbl"},asignSpanLblID(e){return e+"_spanlbl"},async removeItemAtIndex(e,t){await pt("Do you want to delete it?",t)&&this.$emit("remove-item",e)},editItemAtIndex(e){this.$emit("edit-item",e)},highLightBnd(e){if(e){if(e.highlightbackground!==void 0&&e.highlightbackground==!0)return this.$props.highLightBackground}else return!1}}}),Ba=["onMousemove","onMouseout"],Pa={class:"route-label"};function Ea(e,t,n,a,s,u){const r=D("ion-label"),c=D("ion-col"),m=D("ion-row"),g=D("ion-icon");return C(!0),L(re,null,Ie(e.localMedicalDrugsList,(_,I)=>(C(),L("div",{id:"df",class:"medication-item",key:I,onMousemove:h=>e.highlightItem(I),onMouseout:h=>e.undoHighlightItem(I)},[o(m,{class:"medication-header"},{default:l(()=>[o(c,{class:ue(["ion-text-wrap",e.highLightBnd(_)])},{default:l(()=>[o(r,{id:e.asignLblID(I),class:"medication-name"},{default:l(()=>[J(x(_.drugName),1)]),_:2},1032,["id"])]),_:2},1032,["class"])]),_:2},1024),o(m,{class:"medication-details"},{default:l(()=>[o(c,{size:"10",class:ue(["ion-text-wrap details-col",e.highLightBnd(_)])},{default:l(()=>[o(r,{class:"details-text"},{default:l(()=>[J(x(_.dose)+" / "+x(_.frequency)+" / daily / "+x(_.duration)+" / until "+x(_.prescription)+" ",1),b("span",Pa,x(_.route_name),1)]),_:2},1024)]),_:2},1032,["class"]),e.show_actions_buttons?(C(),ee(c,{key:0,class:ue([e.highLightBnd(_),"actions-col"]),size:"2"},{default:l(()=>[o(r,{class:ue(["action-button",e.asignSpanLblID(I)]),onClick:h=>e.editItemAtIndex(I)},{default:l(()=>[o(g,{icon:e.iconsContent.edit},null,8,["icon"])]),_:2},1032,["class","onClick"]),o(r,{class:ue(["action-button",e.asignSpanLblID(I)]),onClick:h=>e.removeItemAtIndex(I,h)},{default:l(()=>[o(g,{icon:e.iconsContent.delete},null,8,["icon"])]),_:2},1032,["class","onClick"])]),_:2},1032,["class"])):Z("",!0)]),_:2},1024)],40,Ba))),128)}const As=j(Aa,[["render",Ea],["__scopeId","data-v-01c693a3"]]),$a={key:0,class:"custom-allergy-container"},Ta={class:"button-group"},xa=z({watch:{},name:"AllergiesComponent"}),Ra=z({...xa,setup(e){const t=pn(),n=q(),a=ie(()=>t.selectedMedicalAllergiesList),s=ie(()=>n.patient),u=ie(()=>t.medicalAllergiesList),r=k(f(8,"item-")),c=k(""),m=k(!1),g=[{multi_Selection:!0,show_list_label:!0,unqueId:r.value,name_of_list:"Add/Remove allergies",placeHolder:"Search for an allergy",items:[],listUpdatedFN:h,listFilteredFN:()=>{},searchTextFN:R,use_internal_filter:!0,show_error:k(!1),error_message:"please select a User",disabled:k(!1)}],_=k(!1);Oe(async()=>{I()});const I=()=>{t.current_patient.ID!=s.value.ID&&(t.clearSelectedMedicalAllergiesList(),t.setCurrentPatient(s.value))};function h(d){d.forEach(v=>{v.selected==!0&&v.name==="Other"&&(m.value=v.name==="Other"),v.selected==!1&&v.name==="Other"&&B()}),t.setSelectedMedicalAllergiesList(d),S()}async function R(d){const v=d,M=await W.getConceptSet("OPD Medication",v);M.map(H=>({label:H.name,value:H.name,other:H}));const E=mn(v),F=hn(E,M).sort((H,Te)=>H.name.localeCompare(Te.name));t.setMedicalAllergiesList(F),S()}function S(){const d=u.value;a.value.forEach(M=>{let E=!1;d.forEach((V,F)=>{V.concept_id==M.concept_id&&M.selected===!0&&(d[F]=M,E=!0)}),!E&&M.selected===!0&&d.push(M)});const v=d.filter((M,E,V)=>E===V.findIndex(F=>(F==null?void 0:F.concept_id)===(M==null?void 0:M.concept_id)));t.setMedicalAllergiesList(v)}function f(d=8,v=""){const M="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let E=v;for(let V=0;V<d;V++)E+=M.charAt(Math.floor(Math.random()*M.length));return E+="-".concat(Date.now()),E}async function P(d){try{const v=d.trim();if(v){const M={name:v,selected:!0,concept_id:f(8,"12"),concept_name_id:f(8,"34")};t.setMedicalAllergiesList([...u.value,M]),t.setSelectedMedicalAllergiesList(M),m.value=!1,_.value=!0,c.value="";const E=t.findSelectedAllergyByName("Other");t.unselectOther(E)}}catch(v){console.error(v)}}const B=()=>{m.value=!1,c.value="",_.value=!1;const d=t.findSelectedAllergyByName("Other");d&&t.unselectOther(d)};return(d,v)=>(C(),ee(A(zt),null,{default:l(()=>[o(A(qt),null,{default:l(()=>[o(A(De),{class:"header-container"},{default:l(()=>[o(A(He),{icon:A(Wt),class:"allergy-icon"},null,8,["icon"]),v[3]||(v[3]=b("span",{style:{"font-size":"16px","font-weight":"600"}}," Allergies (Medication, Healthcare items, Environment and Food) ",-1))]),_:1,__:[3]})]),_:1}),o(A(Gt),null,{default:l(()=>[o(gn,{multiSelection:g[0].multi_Selection,show_label:g[0].show_list_label,uniqueId:g[0].unqueId,name_of_list:g[0].name_of_list,choose_place_holder:g[0].placeHolder,"items_-list":u.value,use_internal_filter:g[0].use_internal_filter,disabled:g[0].disabled.value,onItemListUpDated:g[0].listUpdatedFN,onItemListFiltered:g[0].listFilteredFN,onItemSearchText:g[0].searchTextFN},null,8,["multiSelection","show_label","uniqueId","name_of_list","choose_place_holder","items_-list","use_internal_filter","disabled","onItemListUpDated","onItemListFiltered","onItemSearchText"]),m.value?(C(),L("div",$a,[o(A(ut),{modelValue:c.value,"onUpdate:modelValue":v[0]||(v[0]=M=>c.value=M),placeholder:"Please specify the allergy",fill:"outline",class:"custom-input"},null,8,["modelValue"]),b("div",Ta,[o(A(Ne),{onClick:v[1]||(v[1]=M=>P(c.value)),class:"addCustomAllergyBtn"},{default:l(()=>v[4]||(v[4]=[J(" Add Allergy ")])),_:1,__:[4]}),o(A(Ne),{onClick:v[2]||(v[2]=M=>B()),fill:"clear",class:"cancelBtn"},{default:l(()=>[o(A(He),{icon:A(Kt),slot:"icon-only"},null,8,["icon"])]),_:1})])])):Z("",!0)]),_:1})]),_:1}))}}),Bs=j(Ra,[["__scopeId","data-v-4de36202"]]);async function Ps(){var e,t,n;try{const a=q(),{patient:s}=K(a),u=Ha(),r=JSON.parse(JSON.stringify(s.value));if(u.length>0){(n=(t=(e=r.MedicationOrder)!=null?e:r.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const c=r.MedicationOrder.unsaved.findIndex(g=>g.NCD_Drug_Orders);if(c>=0)r.MedicationOrder.unsaved[c].NCD_Drug_Orders=[...r.MedicationOrder.unsaved[c].NCD_Drug_Orders,...u];else{const g={NCD_Drug_Orders:u};r.MedicationOrder.unsaved.push(g)}return Q().clearMedicationDataStores(),le("Drug order(s) has been created"),r}else ne("Unable to create drug orders!")}catch(a){ne("Unable to create drug orders!")}}function at(){try{const e=new Date(O.getSessionDate()),n=$e().selectedMedicalDrugsList;let a=0;if(n.forEach(g=>{const _=parseInt(g.duration,10);!isNaN(_)&&_>a&&(a=_)}),a<=0)return{date:null,formattedDate:null};const s=new Date(e);s.setDate(e.getDate()+a);const u=String(s.getDate()).padStart(2,"0"),r=String(s.getMonth()+1).padStart(2,"0"),c=s.getFullYear(),m="".concat(u,"/").concat(r,"/").concat(c);return{date:s,formattedDate:m}}catch(e){return console.error("Error calculating OPD medication run out date:",e),{date:null,formattedDate:null}}}function Fa(){try{const e=new Date(O.getSessionDate()),n=Q().selectedNCDMedicationList;let a=0;if(n.forEach(g=>{const _=parseInt(g.duration,10);!isNaN(_)&&_>a&&(a=_)}),a<=0)return{date:null,formattedDate:null};const s=new Date(e);s.setDate(e.getDate()+a);const u=String(s.getDate()).padStart(2,"0"),r=String(s.getMonth()+1).padStart(2,"0"),c=s.getFullYear(),m="".concat(u,"/").concat(r,"/").concat(c);return{date:s,formattedDate:m}}catch(e){return console.error("Error calculating medication run out date:",e),{date:null,formattedDate:null}}}const Ha=()=>{const e=Q();return e.selectedNCDMedicationList.map(t=>{t.frequency=e.frequency_selections[t.drug_id]||"",t.totalDosage=Object.values(t.dosage).reduce((s,u)=>s+Number(u),0);const n=_t.getSessionDate(),a=Ja(t.drug_id);return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.totalDosage=="Unknown"?0:t.totalDosage*(a==null?void 0:a.value)||0,start_date:n,auto_expire_date:St(n,t.duration),units:t.units,instructions:"".concat(t.name," ").concat(t.totalDosage," ").concat(t.units," ").concat((a==null?void 0:a.code)||""," for ").concat(t.duration," days"),dose:Va(t),frequency:(a==null?void 0:a.code)||""}})},Va=e=>e.dose_strength!=null&&e.dose_strength?Math.trunc(e.dose_strength):1;async function Es(){var e,t,n;try{const a=q(),{patient:s}=K(a),u=Ua(),r=JSON.parse(JSON.stringify(s.value));if(u.length>0){(n=(t=(e=r.MedicationOrder)!=null?e:r.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const c=r.MedicationOrder.unsaved.findIndex(g=>g.NCD_Drug_Orders);if(c>=0)r.MedicationOrder.unsaved[c].NCD_Drug_Orders=[...r.MedicationOrder.unsaved[c].NCD_Drug_Orders,...u];else{const g={NCD_Drug_Orders:u};r.MedicationOrder.unsaved.push(g)}return $e().clearSelectedMedicalDrugsList(),le("Drug order(s) has been created"),r}else ne("Unable to create drug orders!")}catch(a){ne("Unable to create drug orders!")}}const Ua=()=>$e().selectedMedicalDrugsList.map(t=>{const n=_t.getSessionDate(),a=se.find(s=>s.label===t.frequency)||{};return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.dose=="Unknown"?0:t.dose*(a==null?void 0:a.value)||0,start_date:n,auto_expire_date:St(n,t.duration),units:t.units,instructions:"".concat(t.drugName,": ").concat(t.dose," ").concat(t.units," ").concat((a==null?void 0:a.code)||""," for ").concat(t.duration," days"),dose:t.dose,frequency:(a==null?void 0:a.code)||""}}),Ja=e=>{const n=Q().selectedNCDMedicationList.find(s=>s.drug_id===e);if(!n||!n.dosage)return null;switch(["morning","afternoon","evening"].reduce((s,u)=>s+(n.dosage[u]?1:0),0)){case 1:return n.dosage.morning?se.find(s=>s.code==="QAM"):n.dosage.afternoon?se.find(s=>s.code==="QNOON"):n.dosage.evening?se.find(s=>s.code==="QPM"):se.find(s=>s.code==="OD");case 2:return se.find(s=>s.code==="BD");case 3:return se.find(s=>s.code==="TDS");default:return se.find(s=>s.code==="Unknown")}},St=(e,t)=>{const n=new Date(e);return n.setDate(n.getDate()+parseInt(t)),w.toStandardHisFormat(n)},za=()=>$e().nonPharmalogicalTherapyAndOtherNotes,qa=Ee("nonPharmaTherapyStore",{state:()=>({items:[{id:"wound-dressing",label:"Wound dressing",checked:!1},{id:"patient-education",label:"Patient education",checked:!1},{id:"counseling",label:"Counseling",checked:!1},{id:"minor-surgery",label:"Minor Surgery",checked:!1}],current_patient:{}}),actions:{async saveNonPharmaTherapyPatientData(){const e=fn(),t=[];this.items.forEach(a=>{a.checked==!0&&t.push({concept_id:11023,value_text:a.label,obs_datetime:w.toStandardHisFormat(O.getSessionDate()),location_id:e.facilityLocation.code})});const n=za();n&&t.push({concept_id:2592,obs_datetime:O.getSessionDate(),value_text:n,location_id:e.facilityLocation.code});try{if(t.length>0)return this.clearSelectednonPharmaTherapyStore(),le("Non Pharma Therapy staged successfully!"),await Wa(t)}catch(a){ne("Unable to update Non Pharma Therapy!")}},clearSelectednonPharmaTherapyStore(){this.items.forEach(e=>{e.checked=!1})},setCurrentPatient(e){this.current_patient=e}},persist:!0});async function Wa(e){var t,n,a;try{const s=q(),{patient:u}=K(s),r=JSON.parse(JSON.stringify(u.value));return(a=(n=(t=r.notes)!=null?t:r.notes={}).unsaved)!=null||(n.unsaved=[]),r.notes.unsaved.push(...e),r}catch(s){ne("Unable to create non pharmalogical notes!")}}const Ga={class:"checklist-container"},Ka=z({watch:{},name:"xxxComponent"}),Ya=z({...Ka,setup(e){const t=q(),n=ie(()=>t.patient),a=qa(),s=a.items;Oe(async()=>{u()});const u=()=>{a.current_patient.ID!=n.value.ID&&(a.clearSelectednonPharmaTherapyStore(),a.setCurrentPatient(n.value))};return ye(()=>n.value,async r=>{}),(r,c)=>(C(),L("div",Ga,[(C(!0),L(re,null,Ie(A(s),m=>(C(),ee(A(he),{key:m.id,class:"no-border"},{default:l(()=>[o(A(Yt),{id:m.id,modelValue:m.checked,"onUpdate:modelValue":g=>m.checked=g,slot:"start"},null,8,["id","modelValue","onUpdate:modelValue"]),o(A(De),{style:{"font-size":"16px","font-weight":"600"}},{default:l(()=>[J(x(m.label),1)]),_:2},1024)]),_:2},1024))),128))]))}}),$s=j(Ya,[["__scopeId","data-v-371e920f"]]),ja=z({components:{IonContent:Se,IonHeader:Ce,IonItem:he,IonList:Be,IonMenu:Ae,IonTitle:be,IonToolbar:Pe,BasicInputField:ht,IonDatetime:Qt,IonBadge:jt,DateInputField:On,DynamicButton:Me},setup(){const e=Fe(),t=k(0),n=ie(()=>e.getDisabledDates()),a=ie(()=>e.getAssignedAppointments()),s=k();return{disabledDates:n,datesCounts:a,appointment_count:t,calendarOutline:Xt,inputPRDate:s}},data(){return ae(),Ze(),{iconsContent:te,date:new Date(O.getSessionDate()),tomorrow:new Date(O.getSessionDate()).getDate()+1,appointment:"",drugRunoutDate:"",nextAppointmentDate:"",minDate:new Date(O.getSessionDate())}},computed:{...oe(ae,["nextAppointment","appointmentCountsCache","currentSelectedNextAppointmentDate"]),...oe(Fe,["maximumNumberOfDaysForEachDay","assignedAppointmentsDates"]),...oe(q,["patient"]),...oe(Ze,["activeProgram"]),calendarDate(){const e=ae();return e.currentSelectedNextAppointmentDate?w.toStandardHisDisplayFormat(e.currentSelectedNextAppointmentDate):""},runOutDate(){var e;return((e=this.activeProgram)==null?void 0:e.program_id)===14?at():Fa()}},watch:{calendarDate:{handler(){this.updateNextAppointment()},deep:!0},"$service.sessionDate":{handler(){this.updateMinDate()},immediate:!0},"patient.ID":{async handler(e,t){e!==t&&(this.cleanCurrentNextAppointmentDate(),this.checkIfSamePatientInContext())}}},async mounted(){this.checkIfSamePatientInContext(),await this.getAppointmentMents(this.runOutDate.date),await yn().loadGlobalProperty(),this.validateAppointmentCountsCache(),await this.preloadAppointmentCounts(),Dn();const e=O.getUserID(),t=new ft;this.appointment=new we(t.getID(),e),this.nextAppointmentDate=this.appointment.date,this.supposedRunOutDate(),window.addEventListener("storage",this.handleStorageChange),at()},beforeUnmount(){window.removeEventListener("storage",this.handleStorageChange)},methods:{handleStorageChange(e){e.key==="sessionDate"&&this.updateMinDate()},updateMinDate(){this.date=new Date(O.getSessionDate()),this.minDate=new Date(O.getSessionDate())},updateNextAppointment(){ae().setNextAppointment(this.calendarDate)},async handleDateUpdate(e){e&&(Fe().setsssignedAppointmentsDates(e,!0),this.calendarDate=w.toStandardHisDisplayFormat(e),await this.save(),await this.getAppointmentMents(e),await this.updateAppointmentCache(e),ae().setCurrentSelectedNextAppointmentDate(e,this.patient.ID))},async getAppointmentMents(e){if(_n().apiStatus)try{const n=await we.getDailyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(e));this.appointment_count=n.length}catch(n){}},getCounter(e){const t=w.toStandardHisFormat(e);return this.appointmentCountsCache[t]||""},async save(){if(this.assignedAppointmentsDates.length>0)try{const t=await new In().createOfflineAppointment()}catch(e){}},async openCornfirmModal(e){this.calendarDate=w.toStandardHisDisplayFormat(e),await this.getAppointmentMents(e),mt(vn,{class:"otherVitalsModal"},!0,{message:"Are you sure you want to add this Appointment?"},{cancel:s=>{},confirm:async s=>{s.detail==!0&&await this.handleDateUpdate(e)}})},async handleInput(e){this.inputPRDate=w.toStandardHisDisplayFormat(e),await this.openCornfirmModal(e)},async supposedRunOutDate(){await gt.getLastDrugsReceived(this.patient.patientID)},async preloadAppointmentCounts(){try{const e=new Date(O.getSessionDate());e.setDate(1);const t=new Date(O.getSessionDate());t.setMonth(t.getMonth()+2),t.setDate(0);try{const n=await we.getDailyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(t)),a=this.filterUniqueAppointments(n),s={};a.forEach(u=>{const r=new Date(u.appointment_date),c=w.toStandardHisFormat(r);s[c]||(s[c]=0),s[c]++}),Object.keys(s).forEach(u=>{this.appointmentCountsCache[u]=s[u]})}catch(n){console.error("Error fetching appointments for date range:",n)}}catch(e){console.error("Error in preload process:",e)}},filterUniqueAppointments(e){const t=new Map;return e.forEach(n=>{const a="".concat(n.given_name,"_").concat(n.family_name,"_").concat(n.birthdate,"_").concat(n.appointment_date);t.has(a)||t.set(a,n)}),Array.from(t.values())},async updateAppointmentCache(e){try{const t=w.toStandardHisFormat(e),n=await we.getDailyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(e));this.appointmentCountsCache[t]=n.length}catch(t){console.error("Error updating appointment cache:",t)}},validateAppointmentCountsCache(){ae().checkCurrentLocationIfInContext()},isRunOutDate(e){return!this.runOutDate||!this.runOutDate.date?!1:w.toStandardHisFormat(e)===w.toStandardHisFormat(this.runOutDate.date)},cleanCurrentNextAppointmentDate(){ae().cleanCurrentSelectedNextAppointmentDate()},checkIfSamePatientInContext(){const e=ae();e.current_patient.ID!=this.patient.ID&&(this.cleanCurrentNextAppointmentDate(),e.setCurrentPatient(this.patient))}}}),Qa={class:"card_content"},Xa={class:"count-badge"},Za={class:"dates_title"},es={class:"sub_data"},ts={class:"dates_title"},ns={class:"sub_data"},as={class:"dates_title"},ss={class:"sub_data"},os={class:"dates_title"},is={class:"sub_data"};function rs(e,t,n,a,s,u){const r=D("VueDatePicker"),c=D("ion-col"),m=D("DynamicButton"),g=D("ion-item"),_=D("ion-row"),I=D("DateInputField");return C(),L("div",Qa,[o(_,null,{default:l(()=>[o(c,{"size-sm":"12","size-md":"12","size-lg":"12","size-xl":"8"},{default:l(()=>[o(r,{class:"calender",onDateUpdate:e.openCornfirmModal,inline:"","auto-apply":"","enable-time-picker":!1,"disabled-dates":e.disabledDates,"min-date":e.minDate,modelValue:e.runOutDate.date,"onUpdate:modelValue":t[0]||(t[0]=h=>e.runOutDate.date=h)},{day:l(({day:h,date:R})=>[(C(),L("p",{key:0,class:ue({"run-out-date":e.isRunOutDate(R)}),style:{"font-weight":"600","font-size":"20px"}},[b("span",null,[J(x(h),1),b("sup",Xa,x(e.getCounter(R)),1)])],2))]),_:1},8,["onDateUpdate","disabled-dates","min-date","modelValue"])]),_:1}),o(c,null,{default:l(()=>[o(g,null,{default:l(()=>[b("div",Za,[t[3]||(t[3]=b("div",null,[J("Suggested Next Appointment Date "),b("span",{style:{"font-size":"16px"}},"(Medication run out date)")],-1)),b("div",es,[J(x(e.runOutDate.formattedDate||"No run out date available")+" ",1),e.runOutDate.formattedDate?(C(),ee(m,{key:0,onClick:t[1]||(t[1]=h=>e.handleDateUpdate(e.runOutDate.date)),name:"Set Next Appt.",fill:"solid",iconSlot:"icon-only",style:{float:"right"}})):Z("",!0)])])]),_:1}),o(g,null,{default:l(()=>[b("div",ts,[t[4]||(t[4]=b("div",null,"User set appointment date",-1)),b("div",ns,x(e.calendarDate),1)])]),_:1}),o(g,null,{default:l(()=>[b("div",as,[t[5]||(t[5]=b("div",null,"Appointments",-1)),b("div",ss,x(e.appointment_count),1)])]),_:1}),o(g,null,{default:l(()=>[b("div",os,[t[6]||(t[6]=b("div",null,"Appointment limit (per/day)",-1)),b("div",is,x(e.appointment_count)+"/"+x(e.maximumNumberOfDaysForEachDay),1)])]),_:1})]),_:1})]),_:1}),o(_,null,{default:l(()=>[o(c,{size:"4"},{default:l(()=>[o(I,{inputHeader:"Preferred Next Appointment Date",bold:"600",fontSize:"17px",placeholderFontSize:"17px",placeholderFontWeight:"600",unit:"",icon:e.calendarOutline,placeholder:"press to select date",iconRight:"",inputWidth:"100%",inputValue:e.inputPRDate,eventType:"",minDate:e.minDate,maxDate:"",disabled:!1,"onUpdate:rawDateValue":t[2]||(t[2]=h=>e.handleInput(h))},null,8,["icon","inputValue","minDate"])]),_:1})]),_:1})])}const Ts=j(ja,[["render",rs],["__scopeId","data-v-6a0cef53"]]);export{Bs as A,As as D,Ds as I,Ms as M,Ts as N,Mn as P,ws as T,Jn as _,qa as a,Es as b,Ps as c,Os as d,ka as e,Is as f,Ls as g,Cs as h,Ma as i,Da as j,Ss as k,bs as l,Ns as m,$s as n,ks as s,Q as u};
