var Te=Object.defineProperty;var Fe=(e,t,a)=>t in e?Te(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a;var U=(e,t,a)=>Fe(e,typeof t!="symbol"?t+"":t,a);import{d as q,D as Se,aV as Q,r as F,a as pe,H as A,O as J,f as y,J as p,l as r,k as v,e as b,P as me,F as ae,m as w,u as C,ah as Y,b5 as Re,b2 as Ce,G as be,E as ke,ai as Ie,aj as Ae,$ as se,I as Oe,a4 as Me,bf as He,aU as Ue,Q as R,L as de,X as he,a6 as Ve,p as K,K as M,c as W,aS as ze,aR as qe,av as Ge,aP as Je,N as ge,a3 as We,w as Ke,bs as Ye,bo as Qe,bN as Xe,aM as je}from"./vendor-D0D29_A_.js";import{O as Z,by as Ze,t as z,S as k,i as ie,_ as X,M as we,be as et,B as Ne,bp as tt,Q as $,s as ue,aP as ne,aG as fe,H as _,u as H,aW as Be,ag as le,bz as at,aY as Le,P as Ee,a8 as nt,K as ee,X as st,aQ as it,bA as ot,bB as rt,ar as lt,aI as oe,aJ as re,a1 as ct,b1 as T,A as te,o as dt,bo as ut,f as pt,ay as ce,D as mt,az as ht,y as ve}from"./index-B042x6Mo.js";import{D as gt}from"./DashBox-BHwBkOK4.js";import{B as V}from"./BasicForm-5-tUYJWv.js";import ft from"./LabOrdersList-5UBw3cFt.js";import{v as De}from"./group_validation-CzopsGgP.js";import{l as j}from"./lodash-NJiRuGo9.js";import{g as vt,a as Pe,D as G}from"./drug_prescription_service-PmjC1kDb.js";import{A as Dt}from"./ncd_appointment_service-D9iBKhON.js";import{D as yt}from"./DateInputField-tIZG3Yzd.js";class _t extends Z{constructor(){super()}async postActivities(t,a){const s=a.location_id,l=await new Ze(parseInt(t),-1,s).createEncounter();if(l){const i=await Z.buildLabOrders(l,a.orders||a);if(!await Z.saveOrdersArray(l.encounter_id,i))return z("Unable to save lab orders")}}}const St=q({data:()=>({userRole:"",ready:!1,userRoleSettings:{}}),watch:{$route:{async handler(e){this.userRole=k.getUserRoles();const t=k.getProgramID(),a=k.getProgramName();this.userRole=="Lab"&&t==14&&(this.userRoleSettings={url:"home",btnName:"Back to home",stepperTitle:"Laboratory"}),t==14&&this.userRole!="Lab"&&(this.userRoleSettings={url:"home",btnName:"Go to waiting list",stepperTitle:"Consultation Plan"}),t==12&&(this.userRoleSettings={url:"contact",btnName:"Back"}),a=="LABOUR AND DELIVERY PROGRAM"&&(this.userRoleSettings={url:"labour/labourHome",btnName:"Back to home"}),a=="PNC PROGRAM"&&(this.userRoleSettings={url:"pnc/home",btnName:"Back to home"})},immediate:!0,deep:!0}}}),ye=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Skull",value:"Skull",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mastoid",value:"Mastoid",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"ParaSinuses",value:"ParaSinuses",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Optic Foramen",value:"PVD",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Orbits",value:"Orbits",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Nasal Bone",value:"Nasal Bone",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mandible",value:"Mandible",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TMJs",value:"TMJs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Zygomatic",value:"Zygomatic",checked:!1}]}}],Ct=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Neck",value:"Neck",checked:!1}]}}],bt=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Chest",value:"Chest",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Heart",value:"Heart",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sternum",value:"Sternum",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ribs",value:"Ribs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SCJ",value:"SCJ",checked:!1}]}}],kt=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Abdomen",value:"Abdomen",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"IVP",value:"IVP",checked:!1}]}}],It=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Clavicle",value:"Clavicle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Shoulder",value:"Shoulder",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Scapula",value:"Scapula",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Humerus",value:"Humerus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Elbow",value:"Elbow",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Forearm",value:"Forearm",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Wrist",value:"Wrist",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hand",value:"Hand",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Phalanges",value:"Phalanges",checked:!1}]}}],At=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"CSpine",value:"CSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TSpine",value:"TSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"LSpine",value:"LSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SSpine",value:"SSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Coccyx",value:"Coccyx",checked:!1}]}}],Ot=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Pelvis",value:"Pelvis",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sacroillac Joints",value:"Sacroillac Joints",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hip",value:"Hip",checked:!1}]}}],Mt=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Femur",value:"Femur",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Knee",value:"Knee",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Patella",value:"Patella",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Leg",value:"Leg",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ankle",value:"Ankle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Calcaneus",value:"Calcaneus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Foot",value:"Foot",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Toe",value:"Toe",checked:!1}]}}],wt=Se("RadiologyStore",{state:()=>({head:[...ye],neck:[...Ct],chest:[...bt],abdomen:[...kt],upper_extremity:[...It],spine:[...At],pelvis:[...Ot],lower_extremity:[...Mt]}),actions:{setOPDDiagnosis(e){this.head=e},getInitial(){return[...j.cloneDeep(ye)]}}}),Nt=["innerHTML"],Bt={class:"scrollable-container"},Lt={key:0,class:"form-section"},Et={key:1,class:"form-section"},Pt={key:2,class:"form-section"},xt={key:3,class:"form-section"},$t={key:4,class:"form-section"},Tt={key:5,class:"form-section"},Ft={key:6,class:"form-section"},Rt={key:7,class:"form-section"},Ht=q({__name:"RadiologyInvestigation",setup(e){const t=wt(),{head:a,neck:s,chest:n,abdomen:l,upper_extremity:i,spine:o,pelvis:g,lower_extremity:c}=Q(t),m=F(ie),u=F([]),h=(I,D,B)=>{document.querySelectorAll("#".concat(I," path")).forEach(d=>{d.classList.toggle("white-fill")}),document.querySelectorAll("#".concat(D," line")).forEach(d=>{d.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(D," rect")).forEach(d=>{d.classList.toggle("bright-green-fill"),d.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(D," path")).forEach(d=>{d.classList.toggle("dark-green-fill")}),document.querySelectorAll("#".concat(D," circle")).forEach(d=>{d.classList.toggle("bright-green-fill")});const L=u.value.findIndex(d=>d.id===B);L>=0?u.value.splice(L,1):u.value.unshift({id:B,active:!0})},N=()=>{const I=document.getElementById("SPINE");I.style.display==="none"||I.style.display==""?I.style.display="block":I.style.display="none",h("SPINE","SPINE_LABEL-2","spine")};return pe(()=>{const I=document.getElementById("HEAD");I&&I.addEventListener("click",()=>{h("HEAD","LABEL-6","head")});const D=document.getElementById("NECK");D&&D.addEventListener("click",()=>{h("NECK","LABEL-5","neck")});const B=document.getElementById("CHEST");B&&B.addEventListener("click",()=>{h("CHEST","LABEL-4","chest")});const L=document.getElementById("ABDOMEN_LABEL");L&&L.addEventListener("click",()=>{const x=document.getElementById("ABDOMEN-2");x.style.display==="none"||x.style.display==""?x.style.display="block":x.style.display="none",h("ABDOMEN","ABDOMEN_LABEL-2","abdomen")});const d=document.getElementById("UPPER_EXTRMITY");d&&d.addEventListener("click",()=>{h("UPPER_EXTRMITY","LABEL-3","upper_extremity")});const f=document.getElementById("SPINE"),S=document.getElementById("SPINE_LABEL"),O=document.getElementById("LOWER_SPINE_INACTIVE");f&&f.addEventListener("click",()=>{N()}),S&&S.addEventListener("click",()=>{N()}),O&&O.addEventListener("click",()=>{N()});const E=document.getElementById("PELVIS");E&&E.addEventListener("click",()=>{h("PELVIS","LABEL-2","pelvis")});const P=document.getElementById("LOWER_EXTREMITY");P&&P.addEventListener("click",()=>{h("LOWER_EXTREMITY","LABEL","lower_extremity")})}),(I,D)=>{const B=A("ion-col"),L=A("ion-row");return y(),J(L,null,{default:p(()=>[r(B,{size:"7"},{default:p(()=>[v("div",{innerHTML:m.value.full_body_sk},null,8,Nt)]),_:1}),r(B,{size:"5",class:"form-column"},{default:p(()=>[v("div",Bt,[(y(!0),b(ae,null,me(u.value,d=>(y(),b(ae,null,[d.id==="head"?(y(),b("div",Lt,[D[0]||(D[0]=v("h6",null,"Body Part: Head",-1)),r(V,{contentData:C(a)},null,8,["contentData"])])):d.id==="neck"?(y(),b("div",Et,[D[1]||(D[1]=v("h6",null,"Body Part: Neck",-1)),r(V,{contentData:C(s)},null,8,["contentData"])])):d.id==="chest"?(y(),b("div",Pt,[D[2]||(D[2]=v("h6",null,"Body Part: Chest",-1)),r(V,{contentData:C(n)},null,8,["contentData"])])):d.id==="abdomen"?(y(),b("div",xt,[D[3]||(D[3]=v("h6",null,"Body Part: Abdomen",-1)),r(V,{contentData:C(l)},null,8,["contentData"])])):d.id==="upper_extremity"?(y(),b("div",$t,[D[4]||(D[4]=v("h6",null,"Body Part: Upper Extremity",-1)),r(V,{contentData:C(i)},null,8,["contentData"])])):d.id==="spine"?(y(),b("div",Tt,[D[5]||(D[5]=v("h6",null,"Body Part: Spine",-1)),r(V,{contentData:C(o)},null,8,["contentData"])])):d.id==="pelvis"?(y(),b("div",Ft,[D[6]||(D[6]=v("h6",null,"Body Part: Pelvis",-1)),r(V,{contentData:C(g)},null,8,["contentData"])])):d.id==="lower_extremity"?(y(),b("div",Rt,[D[7]||(D[7]=v("h6",null,"Body Part: Lower Extremity",-1)),r(V,{contentData:C(c)},null,8,["contentData"])])):w("",!0)],64))),256))])]),_:1})]),_:1})}}}),Ut=X(Ht,[["__scopeId","data-v-5ab54fe8"]]),Vt=q({name:"Menu",mixins:[St],components:{IonContent:Me,IonHeader:Oe,IonItem:se,IonList:Ae,IonMenu:Ie,IonTitle:ke,IonToolbar:be,IonInput:Ce,IonPopover:Re,DashBox:gt,SelectionPopover:tt,BasicInputField:Ne,BasicForm:V,List:et,DynamicButton:we,LabOrdersList:ft,RadiologyInvestigation:Ut},data(){return{segmentContent:"Lab Investigations",iconsContent:ie,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:Ue,pulseOutline:He}},computed:{...Y(fe,["investigations"]),...Y(H,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var e;(e=this.patient)!=null&&e.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(e){this.segmentContent=e},async getTests(){let e;k.getUseIndexDBStatus()&&k.getModsStatus()?e=await ue("testTypes"):e=await Z.getTestTypes(),$(this.investigations,"test","multiSelectData",e)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var t;if(!((t=this.patient)!=null&&t.labOrders))return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=await this.labOrders.filter(a=>_.toStandardHisFormat(_.sessionDate())===_.toStandardHisFormat(a.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),fe().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return De(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?($(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):($(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){De(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(e,t){for(let a of t)for(let s of a.tests)if(s.name===e)return!0;return!1},async saveTest(){await new _t().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await ne.getConceptID(this.inputFields[1].value.name,!0)}]),$(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(e){if(e.inputHeader=="Test"&&this.checkTest(),$(this.investigations,"specimen","alertsErrorMassage",""),e.inputHeader=="Test"&&e.value){let t;k.getUseIndexDBStatus()&&k.getModsStatus()?t=await ue("specimens"):t=await Z.getSpecimens("",1e3),this.specimen=await ne.getConceptSet(e.value.name,"",{names:t.map(a=>a.name)}),this.specimen.length==1?($(this.investigations,"specimen","value",this.specimen[0]),$(this.investigations,"specimen","disabled",!0)):($(this.investigations,"specimen","value",""),$(this.investigations,"specimen","disabled",!1)),$(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(e){return await this.labOrders.filter(t=>t.name.toLowerCase().includes(e.toLowerCase()))},async filterSpecimen(e){var t;return(t=this.specimen[0])!=null&&t.name&&e?await this.specimen.filter(a=>a==null?void 0:a.name.toLowerCase().includes(e.toLowerCase())):[]},setTest(e){this.selectedText=e.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=e.name:this.investigations[0].data.rowData[0].colData[1].value=e.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),zt={class:"background"},qt={key:0},Gt={key:1},Jt={key:2},Wt={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},Kt={key:3},Yt={class:"ion-padding",slot:"content"},Qt={key:4};function Xt(e,t,a,s,n,l){const i=A("ion-label"),o=A("ion-segment-button"),g=A("ion-segment"),c=A("VisitsHistory"),m=A("LabOrdersList"),u=A("RadiologyInvestigation");return y(),b("div",zt,[r(g,{value:e.segmentContent,style:{"margin-top":"5px"}},{default:p(()=>[r(o,{value:"Lab Investigations",onClick:t[0]||(t[0]=h=>e.setSegmentContent("Lab Investigations"))},{default:p(()=>[r(i,null,{default:p(()=>[...t[3]||(t[3]=[R("Lab Investigations",-1)])]),_:1})]),_:1}),r(o,{value:"Radiology Investigation",onClick:t[1]||(t[1]=h=>e.setSegmentContent("Radiology Investigation"))},{default:p(()=>[r(i,null,{default:p(()=>[...t[4]||(t[4]=[R("Radiology Investigation",-1)])]),_:1})]),_:1}),r(o,{value:"Other Investigation",onClick:t[2]||(t[2]=h=>e.setSegmentContent("Other Investigation"))},{default:p(()=>[r(i,null,{default:p(()=>[...t[5]||(t[5]=[R("Other Investigation",-1)])]),_:1})]),_:1})]),_:1},8,["value"]),e.segmentContent=="Radiology Investigation"?(y(),b("div",qt,[r(c)])):w("",!0),e.segmentContent=="Other Investigation"?(y(),b("div",Gt)):w("",!0),e.segmentContent=="Lab Investigations"?(y(),b("div",Jt,[v("div",Wt,[v("span",null,[r(m,{propOrders:e.labOrders},null,8,["propOrders"])])])])):w("",!0),e.segmentContent=="Radiology Investigation"?(y(),b("div",Kt,[v("div",Yt,[r(u)])])):w("",!0),e.segmentContent=="Other Investigation"?(y(),b("div",Qt)):w("",!0)])}const za=X(Vt,[["render",Xt],["__scopeId","data-v-c2f65a77"]]);class jt extends Be{constructor(t,a){super(t,105,a)}}class Zt extends Be{constructor(t,a){super(t,25,a)}static async get_____(t="",a=1,s=10){}}async function qa(e){var t,a,s;try{const n=H(),{patient:l}=Q(n),i=JSON.parse(JSON.stringify(l.value));return(s=(a=(t=i.allergies)!=null?t:i.allergies={}).unsaved)!=null||(a.unsaved=[]),i.allergies.unsaved.push(...e),ee("Allergies appended to patient record successfully"),i}catch(n){z("Unable to save Allegies!")}}class Ga{async onSubmitNotes(t,a,s){const n=new jt(t,a);await n.createEncounter(),await n.saveObservationList(s)}async onSubmitAllergies(t,a,s){try{const n=new Zt(t,a);await n.createEncounter(),await n.saveObservationList(s),ee("Allergies saved successfully")}catch(n){console.error("Error saving allergies:",n),z("Failed to save allergies")}}}class Ja{constructor(){U(this,"programID");U(this,"providerID");U(this,"patientID");U(this,"date");U(this,"demographics");U(this,"previousDrugPrescriptions",[]);U(this,"previousClinicalNotes");U(this,"previousDrugAllergies");const t=H();this.demographics=t.patient,this.patientID=this.demographics.patientID,this.date=le.getSessionDate(),this.providerID=k.getUserID(),this.programID=le.getProgramID(),this.previousClinicalNotes={},this.previousDrugAllergies={}}async getPatientEncounters(){const t=await this.getPatientVisitDates(),a=t.map(async n=>{const l=n.value,i=await at.getEncounters(this.patientID,{date:l});await Promise.all(i.map(async o=>{var g;if(o.type.name=="NOTES"){const{observations:c}=o;j.isEmpty(c)||c.forEach(m=>{if(m.concept_id=="2688"){const u=_.toStandardHisDisplayFormat(m.obs_datetime);j.isEmpty(this.previousClinicalNotes.hasOwnProperty(u))&&(this.previousClinicalNotes[u]=[]),this.previousClinicalNotes[u].push({date:u,notes:m.value_text})}})}if(o.type.name=="TREATMENT"){const{observations:c}=o;if(!j.isEmpty(c))for(const m in c){let u="<UNKNOWN CONCEPT>";const h=c[m];try{(g=h==null?void 0:h.concept)!=null&&g.concept_names?u=h.concept.concept_names[0].name:u=await ne.getConceptName(h.concept_id)}catch(D){console.error(h,D)}const N=await le.resolvePrimaryValue(h),I=_.toStandardHisDisplayFormat(h.date_created);u=="Allergic"&&(this.previousDrugAllergies.hasOwnProperty(I)||(this.previousDrugAllergies[I]=[]),this.previousDrugAllergies[I].push({date:I,value:N}))}}}))});await Promise.all(a);const s=t.map(async n=>{const l=await Le.getOrderByPatient(this.patientID,{start_date:n.value});if(!j.isEmpty(l)){const i=l.map(o=>({drugName:o.drug.name,value:_.toStandardHisTimeFormat(o.order.start_date),dose:o.dose,frequency:vt(o.frequency),prescription:_.toStandardHisFormat(o.order.auto_expire_date),duration:ea(o.order.instructions),other:o}));this.previousDrugPrescriptions.push({prescriptionDate:_.toStandardHisDisplayFormat(n.value),previousPrescriptions:i})}});return await Promise.all(s),{previousDrugPrescriptions:this.previousDrugPrescriptions,previousClinicalNotes:this.previousClinicalNotes,previousDrugAllergies:this.previousDrugAllergies}}async getPatientVisitDates(){return(await Ee.getPatientVisits(this.patientID,!1)).map(t=>({label:_.toStandardHisDisplayFormat(t),value:t,other:{isActive:t===nt.getSessionDate()}}))}}function ea(e){const t=/(\d+)\s+days/i,a=e.match(t);return a&&a.length>1?parseInt(a[1]):null}async function Wa(){const e=H(),{patient:t}=Q(e),a=t.value,s=[8809,903,6410,6409];let n;k.getModsStatus()||k.getUseIndexDBStatus()?n=await ue("diagnosis",{likeClause:"",currentPage:1,itemsPerPage:2e3}).then(u=>u.records):n=await k.getJson("diagnosis",{id:7409,page_size:2e3});const l=n.filter(u=>s.includes(u.concept_id));l.push({concept_id:8809,concept_name_id:926,concept_name_type:"FULLY_SPECIFIED",creator:1,date_created:"2004-06-25T00:00:00.000+02:00",date_voided:null,id:72,locale:"en",locale_preferred:0,name:"Hypertension",uuid:"b99faa1e-8d80-11d8-abbb-0024217bb78e",void_reason:null,voided:0,voided_by:null});const i=a.diagnosis.saved.map(u=>u.value_coded),o=a.diagnosis.unsaved.map(u=>u.value_coded),g=[...i,...o];return l.filter(u=>g.includes(u.concept_id)).map(u=>u.name)}const ta=q({created(){},components:{IonItem:se,IonCol:Ve,IonLabel:he,IonIcon:de},data(){return{iconsContent:ie,localMedicalDrugsList:[...this.$props._selectedMedicalDrugsList]}},props:{_selectedMedicalDrugsList:{type:Array,default:[]},show_actions_buttons:{type:Boolean,default:!0},highLightBackground:{type:String,default:"item-native"}},watch:{},methods:{highlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#006401"),this.highlightActionBtns(e)},undoHighlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#636363"),this.undohighlightActionBtns(e)},highlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let a=0;a<t.length;a++)t[a].style.display="inline-block"},undohighlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let a=0;a<t.length;a++)t[a].style.display="none"},asignLblID(e){return e+"_lbl"},asignSpanLblID(e){return e+"_spanlbl"},async removeItemAtIndex(e,t){await st("Do you want to delete it?",t)&&this.$emit("remove-item",e)},editItemAtIndex(e){this.$emit("edit-item",e)},highLightBnd(e){if(e){if(e.highlightbackground!==void 0&&e.highlightbackground==!0)return this.$props.highLightBackground}else return!1}}}),aa=["onMousemove","onMouseout"],na={class:"route-label"};function sa(e,t,a,s,n,l){const i=A("ion-label"),o=A("ion-col"),g=A("ion-row"),c=A("ion-icon");return y(!0),b(ae,null,me(e.localMedicalDrugsList,(m,u)=>(y(),b("div",{id:"df",class:"medication-item",key:u,onMousemove:h=>e.highlightItem(u),onMouseout:h=>e.undoHighlightItem(u)},[r(g,{class:"medication-header"},{default:p(()=>[r(o,{class:K(["ion-text-wrap",e.highLightBnd(m)])},{default:p(()=>[r(i,{id:e.asignLblID(u),class:"medication-name"},{default:p(()=>[R(M(m.drugName),1)]),_:2},1032,["id"])]),_:2},1032,["class"])]),_:2},1024),r(g,{class:"medication-details"},{default:p(()=>[r(o,{size:"10",class:K(["ion-text-wrap details-col",e.highLightBnd(m)])},{default:p(()=>[r(i,{class:"details-text"},{default:p(()=>[R(M(m.dose)+" / "+M(m.frequency)+" / daily / "+M(m.duration)+" / until "+M(m.prescription)+" ",1),v("span",na,M(m.route_name),1)]),_:2},1024)]),_:2},1032,["class"]),e.show_actions_buttons?(y(),J(o,{key:0,class:K([e.highLightBnd(m),"actions-col"]),size:"2"},{default:p(()=>[r(i,{class:K(["action-button",e.asignSpanLblID(u)]),onClick:h=>e.editItemAtIndex(u)},{default:p(()=>[r(c,{icon:e.iconsContent.edit},null,8,["icon"])]),_:1},8,["class","onClick"]),r(i,{class:K(["action-button",e.asignSpanLblID(u)]),onClick:h=>e.removeItemAtIndex(u,h)},{default:p(()=>[r(c,{icon:e.iconsContent.delete},null,8,["icon"])]),_:1},8,["class","onClick"])]),_:2},1032,["class"])):w("",!0)]),_:2},1024)],40,aa))),128)}const Ka=X(ta,[["render",sa],["__scopeId","data-v-01c693a3"]]),ia={key:0,class:"custom-allergy-container"},oa={class:"button-group"},ra=q({watch:{},name:"AllergiesComponent"}),la=q({...ra,setup(e){const t=it(),a=H(),s=W(()=>t.selectedMedicalAllergiesList),n=W(()=>a.patient),l=W(()=>t.medicalAllergiesList),i=F(D(8,"item-")),o=F(""),g=F(!1),c=[{multi_Selection:!0,show_list_label:!0,unqueId:i.value,name_of_list:"Add/Remove allergies",placeHolder:"Search for an allergy",items:[],listUpdatedFN:h,listFilteredFN:()=>{},searchTextFN:N,use_internal_filter:!0,show_error:F(!1),error_message:"please select a User",disabled:F(!1)}],m=F(!1);pe(async()=>{u()});const u=()=>{t.current_patient.ID!=n.value.ID&&(t.clearSelectedMedicalAllergiesList(),t.setCurrentPatient(n.value))};function h(d){d.forEach(f=>{f.selected==!0&&f.name==="Other"&&(g.value=f.name==="Other"),f.selected==!1&&f.name==="Other"&&L()}),t.setSelectedMedicalAllergiesList(d),I()}async function N(d){const f=d,S=await ne.getConceptSet("OPD Medication",f);S.map(x=>({label:x.name,value:x.name,other:x}));const O=ot(f),P=rt(O,S).sort((x,$e)=>x.name.localeCompare($e.name));t.setMedicalAllergiesList(P),I()}function I(){const d=l.value;s.value.forEach(S=>{let O=!1;d.forEach((E,P)=>{E.concept_id==S.concept_id&&S.selected===!0&&(d[P]=S,O=!0)}),!O&&S.selected===!0&&d.push(S)});const f=d.filter((S,O,E)=>O===E.findIndex(P=>(P==null?void 0:P.concept_id)===(S==null?void 0:S.concept_id)));t.setMedicalAllergiesList(f)}function D(d=8,f=""){const S="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let O=f;for(let E=0;E<d;E++)O+=S.charAt(Math.floor(Math.random()*S.length));return O+="-".concat(Date.now()),O}async function B(d){try{const f=d.trim();if(f){const S={name:f,selected:!0,concept_id:D(8,"12"),concept_name_id:D(8,"34")};t.setMedicalAllergiesList([...l.value,S]),t.setSelectedMedicalAllergiesList(S),g.value=!1,m.value=!0,o.value="";const O=t.findSelectedAllergyByName("Other");t.unselectOther(O)}}catch(f){console.error(f)}}const L=()=>{g.value=!1,o.value="",m.value=!1;const d=t.findSelectedAllergyByName("Other");d&&t.unselectOther(d)};return(d,f)=>(y(),J(C(ze),null,{default:p(()=>[r(C(qe),null,{default:p(()=>[r(C(he),{class:"header-container"},{default:p(()=>[r(C(de),{icon:C(Ge),class:"allergy-icon"},null,8,["icon"]),f[3]||(f[3]=v("span",{style:{"font-size":"16px","font-weight":"600"}}," Allergies (Medication, Healthcare items, Environment and Food) ",-1))]),_:1})]),_:1}),r(C(Je),null,{default:p(()=>[r(lt,{multiSelection:c[0].multi_Selection,show_label:c[0].show_list_label,uniqueId:c[0].unqueId,name_of_list:c[0].name_of_list,choose_place_holder:c[0].placeHolder,"items_-list":l.value,use_internal_filter:c[0].use_internal_filter,disabled:c[0].disabled.value,onItemListUpDated:c[0].listUpdatedFN,onItemListFiltered:c[0].listFilteredFN,onItemSearchText:c[0].searchTextFN},null,8,["multiSelection","show_label","uniqueId","name_of_list","choose_place_holder","items_-list","use_internal_filter","disabled","onItemListUpDated","onItemListFiltered","onItemSearchText"]),g.value?(y(),b("div",ia,[r(C(Ce),{modelValue:o.value,"onUpdate:modelValue":f[0]||(f[0]=S=>o.value=S),placeholder:"Please specify the allergy",fill:"outline",class:"custom-input"},null,8,["modelValue"]),v("div",oa,[r(C(ge),{onClick:f[1]||(f[1]=S=>B(o.value)),class:"addCustomAllergyBtn"},{default:p(()=>[...f[4]||(f[4]=[R(" Add Allergy ",-1)])]),_:1}),r(C(ge),{onClick:f[2]||(f[2]=S=>L()),fill:"clear",class:"cancelBtn"},{default:p(()=>[r(C(de),{icon:C(We),slot:"icon-only"},null,8,["icon"])]),_:1})])])):w("",!0)]),_:1})]),_:1}))}}),Ya=X(la,[["__scopeId","data-v-4de36202"]]);async function Qa(){var e,t,a;try{const s=H(),{patient:n}=Q(s),l=da(),i=JSON.parse(JSON.stringify(n.value));if(l.length>0){(a=(t=(e=i.MedicationOrder)!=null?e:i.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const o=i.MedicationOrder.unsaved.findIndex(c=>c.NCD_Drug_Orders);if(o>=0)i.MedicationOrder.unsaved[o].NCD_Drug_Orders=[...i.MedicationOrder.unsaved[o].NCD_Drug_Orders,...l];else{const c={NCD_Drug_Orders:l};i.MedicationOrder.unsaved.push(c)}const g=re();return g.setMedicationRunOutDate(ca()),g.clearMedicationDataStores(),ee("Drug order(s) has been created"),i}else z("Unable to create drug orders!")}catch(s){z("Unable to create drug orders!")}}function _e(){try{const e=new Date(k.getSessionDate()),a=oe().selectedMedicalDrugsList;let s=0;if(a.forEach(c=>{const m=parseInt(c.duration,10);!isNaN(m)&&m>s&&(s=m)}),s<=0)return{date:null,formattedDate:null};const n=new Date(e);n.setDate(e.getDate()+s);const l=String(n.getDate()).padStart(2,"0"),i=String(n.getMonth()+1).padStart(2,"0"),o=n.getFullYear(),g="".concat(l,"/").concat(i,"/").concat(o);return{date:n,formattedDate:g}}catch(e){return console.error("Error calculating OPD medication run out date:",e),{date:null,formattedDate:null}}}function ca(){try{const e=new Date(k.getSessionDate()),a=re().selectedNCDMedicationList;let s=0;if(a.forEach(c=>{const m=parseInt(c.duration,10);!isNaN(m)&&m>s&&(s=m)}),s<=0)return{date:null,formattedDate:null};const n=new Date(e);n.setDate(e.getDate()+s);const l=String(n.getDate()).padStart(2,"0"),i=String(n.getMonth()+1).padStart(2,"0"),o=n.getFullYear(),g="".concat(l,"/").concat(i,"/").concat(o);return{date:n,formattedDate:g}}catch(e){return console.error("Error calculating medication run out date:",e),{date:null,formattedDate:null}}}const da=()=>{const e=re();return e.selectedNCDMedicationList.map(t=>{t.frequency=e.frequency_selections[t.drug_id]||"",t.totalDosage=Object.values(t.dosage).reduce((n,l)=>n+Number(l),0);const a=Pe.getSessionDate(),s=ma(t.drug_id);return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.totalDosage=="Unknown"?0:t.totalDosage*(s==null?void 0:s.value)||0,start_date:a,auto_expire_date:xe(a,t.duration),units:t.units,instructions:"".concat(t.name," ").concat(t.totalDosage," ").concat(t.units," ").concat((s==null?void 0:s.code)||""," for ").concat(t.duration," days"),dose:ua(t),frequency:(s==null?void 0:s.code)||""}})},ua=e=>e.dose_strength!=null&&e.dose_strength?Math.trunc(e.dose_strength):1;async function Xa(){var e,t,a;try{const s=H(),{patient:n}=Q(s),l=pa(),i=JSON.parse(JSON.stringify(n.value));if(l.length>0){(a=(t=(e=i.MedicationOrder)!=null?e:i.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const o=i.MedicationOrder.unsaved.findIndex(c=>c.NCD_Drug_Orders);if(o>=0)i.MedicationOrder.unsaved[o].NCD_Drug_Orders=[...i.MedicationOrder.unsaved[o].NCD_Drug_Orders,...l];else{const c={NCD_Drug_Orders:l};i.MedicationOrder.unsaved.push(c)}return oe().clearSelectedMedicalDrugsList(),ee("Drug order(s) has been created"),i}else z("Unable to create drug orders!")}catch(s){z("Unable to create drug orders!")}}const pa=()=>oe().selectedMedicalDrugsList.map(t=>{const a=Pe.getSessionDate(),s=G.find(n=>n.label===t.frequency)||{};return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.dose=="Unknown"?0:t.dose*(s==null?void 0:s.value)||0,start_date:a,auto_expire_date:xe(a,t.duration),units:t.units,instructions:"".concat(t.drugName,": ").concat(t.dose," ").concat(t.units," ").concat((s==null?void 0:s.code)||""," for ").concat(t.duration," days"),dose:t.dose,frequency:(s==null?void 0:s.code)||""}}),ma=e=>{const a=re().selectedNCDMedicationList.find(n=>n.drug_id===e);if(!a||!a.dosage)return null;switch(["morning","afternoon","evening"].reduce((n,l)=>n+(a.dosage[l]?1:0),0)){case 1:return a.dosage.morning?G.find(n=>n.code==="QAM"):a.dosage.afternoon?G.find(n=>n.code==="QNOON"):a.dosage.evening?G.find(n=>n.code==="QPM"):G.find(n=>n.code==="OD");case 2:return G.find(n=>n.code==="BD");case 3:return G.find(n=>n.code==="TDS");default:return G.find(n=>n.code==="Unknown")}},xe=(e,t)=>{const a=new Date(e);return a.setDate(a.getDate()+parseInt(t)),_.toStandardHisFormat(a)},ha=()=>oe().nonPharmalogicalTherapyAndOtherNotes,ga=Se("nonPharmaTherapyStore",{state:()=>({items:[{id:"wound-dressing",label:"Wound dressing",checked:!1},{id:"patient-education",label:"Patient education",checked:!1},{id:"counseling",label:"Counseling",checked:!1},{id:"minor-surgery",label:"Minor Surgery",checked:!1}],current_patient:{}}),actions:{async saveNonPharmaTherapyPatientData(){const e=ct(),t=[];this.items.forEach(s=>{s.checked==!0&&t.push({concept_id:11023,value_text:s.label,obs_datetime:_.toStandardHisFormat(k.getSessionDate()),location_id:e.facilityLocation.code})});const a=ha();a&&t.push({concept_id:2592,obs_datetime:k.getSessionDate(),value_text:a,location_id:e.facilityLocation.code});try{if(t.length>0)return this.clearSelectednonPharmaTherapyStore(),ee("Non Pharma Therapy staged successfully!"),await fa(t)}catch(s){z("Unable to update Non Pharma Therapy!")}},clearSelectednonPharmaTherapyStore(){this.items.forEach(e=>{e.checked=!1})},setCurrentPatient(e){this.current_patient=e}},persist:!0});async function fa(e){var t,a,s;try{const n=H(),{patient:l}=Q(n),i=JSON.parse(JSON.stringify(l.value));return(s=(a=(t=i.notes)!=null?t:i.notes={}).unsaved)!=null||(a.unsaved=[]),i.notes.unsaved.push(...e),i}catch(n){z("Unable to create non pharmalogical notes!")}}const va={class:"checklist-container"},Da=q({watch:{},name:"xxxComponent"}),ya=q({...Da,setup(e){const t=H(),a=W(()=>t.patient),s=ga(),n=s.items;pe(async()=>{l()});const l=()=>{s.current_patient.ID!=a.value.ID&&(s.clearSelectednonPharmaTherapyStore(),s.setCurrentPatient(a.value))};return Ke(()=>a.value,async i=>{}),(i,o)=>(y(),b("div",va,[(y(!0),b(ae,null,me(C(n),g=>(y(),J(C(se),{key:g.id,class:"no-border"},{default:p(()=>[r(C(Ye),{id:g.id,modelValue:g.checked,"onUpdate:modelValue":c=>g.checked=c,slot:"start"},null,8,["id","modelValue","onUpdate:modelValue"]),r(C(he),{style:{"font-size":"16px","font-weight":"600"}},{default:p(()=>[R(M(g.label),1)]),_:2},1024)]),_:2},1024))),128))]))}}),ja=X(ya,[["__scopeId","data-v-371e920f"]]),_a=q({components:{IonContent:Me,IonHeader:Oe,IonItem:se,IonList:Ae,IonMenu:Ie,IonTitle:ke,IonToolbar:be,BasicInputField:Ne,IonDatetime:Xe,IonBadge:Qe,DateInputField:yt,DynamicButton:we},props:{showPeripheral:{type:Boolean,default:!0}},setup(e){const t=ce(),a=F(0),s=W(()=>t.getDisabledDates()),n=W(()=>t.getAssignedAppointments()),l=F(),i=W(()=>e.showPeripheral);return{disabledDates:s,datesCounts:n,appointment_count:a,calendarOutline:je,inputPRDate:l,show_peripheral:i}},data(){return T(),ve(),{iconsContent:ie,date:new Date(k.getSessionDate()),tomorrow:new Date(k.getSessionDate()).getDate()+1,appointment:"",drugRunoutDate:"",nextAppointmentDate:"",minDate:new Date(k.getSessionDate())}},computed:{...Y(T,["nextAppointment","appointmentCountsCache","currentSelectedNextAppointmentDate"]),...Y(ce,["maximumNumberOfDaysForEachDay","assignedAppointmentsDates"]),...Y(H,["patient"]),...Y(ve,["activeProgram"]),calendarDate(){const e=T();return e.currentSelectedNextAppointmentDate?_.toStandardHisDisplayFormat(e.currentSelectedNextAppointmentDate):""},runOutDate(){var t;const e=T();return((t=this.activeProgram)==null?void 0:t.program_id)===14?_e():e.getAppointmentMedicationRunOutDate()}},watch:{calendarDate:{handler(){this.updateNextAppointment()},deep:!0},"$service.sessionDate":{handler(){this.updateMinDate()},immediate:!0},"patient.ID":{async handler(e,t){e!==t&&(this.cleanCurrentNextAppointmentDate(),this.checkIfSamePatientInContext(),this.clearNextAppointment())}}},async mounted(){this.checkIfSamePatientInContext(),await this.getAppointmentMents(this.runOutDate.date),await mt().loadGlobalProperty(),this.validateAppointmentCountsCache(),await this.preloadAppointmentCounts(),ht();const e=k.getUserID(),t=new Ee;this.appointment=new te(t.getID(),e),this.nextAppointmentDate=this.appointment.date,this.supposedRunOutDate(),window.addEventListener("storage",this.handleStorageChange),_e()},beforeUnmount(){window.removeEventListener("storage",this.handleStorageChange)},methods:{handleStorageChange(e){e.key==="sessionDate"&&this.updateMinDate()},updateMinDate(){this.date=new Date(k.getSessionDate()),this.minDate=new Date(k.getSessionDate())},updateNextAppointment(){T().setNextAppointment(this.calendarDate)},async handleDateUpdate(e){e&&(ce().setAssignedAppointmentsDates(e,!0),this.calendarDate=_.toStandardHisDisplayFormat(e),await this.save(),await this.getAppointmentMents(e),await this.updateAppointmentCache(e),T().setCurrentSelectedNextAppointmentDate(e,this.patient.ID))},async getAppointmentMents(e){if(pt().apiStatus)try{const a=await te.getDailyAppointments(_.toStandardHisFormat(e),_.toStandardHisFormat(e));this.appointment_count=a.length}catch(a){}},getCounter(e){const t=_.toStandardHisFormat(e);return this.appointmentCountsCache[t]||""},async save(){if(this.assignedAppointmentsDates.length>0)try{const t=await new Dt().createOfflineAppointment()}catch(e){}},async openCornfirmModal(e){this.calendarDate=_.toStandardHisDisplayFormat(e),await this.getAppointmentMents(e),dt(ut,{class:"otherVitalsModal"},!0,{message:"Are you sure you want to add this Appointment?"},{cancel:n=>{},confirm:async n=>{n.detail==!0&&await this.handleDateUpdate(e)}})},async handleInput(e){this.inputPRDate=_.toStandardHisDisplayFormat(e),await this.openCornfirmModal(e)},async supposedRunOutDate(){await Le.getLastDrugsReceived(this.patient.patientID)},async preloadAppointmentCounts(){try{const e=new Date(k.getSessionDate());e.setDate(1);const t=new Date(k.getSessionDate());t.setMonth(t.getMonth()+2),t.setDate(0);try{const a=await te.getDailyAppointments(_.toStandardHisFormat(e),_.toStandardHisFormat(t)),s=this.filterUniqueAppointments(a),n={};s.forEach(l=>{const i=new Date(l.appointment_date),o=_.toStandardHisFormat(i);n[o]||(n[o]=0),n[o]++}),Object.keys(n).forEach(l=>{this.appointmentCountsCache[l]=n[l]})}catch(a){console.error("Error fetching appointments for date range:",a)}}catch(e){console.error("Error in preload process:",e)}},filterUniqueAppointments(e){const t=new Map;return e.forEach(a=>{const s="".concat(a.given_name,"_").concat(a.family_name,"_").concat(a.birthdate,"_").concat(a.appointment_date);t.has(s)||t.set(s,a)}),Array.from(t.values())},async updateAppointmentCache(e){try{const t=_.toStandardHisFormat(e),a=await te.getDailyAppointments(_.toStandardHisFormat(e),_.toStandardHisFormat(e));this.appointmentCountsCache[t]=a.length}catch(t){console.error("Error updating appointment cache:",t)}},validateAppointmentCountsCache(){T().checkCurrentLocationIfInContext()},isRunOutDate(e){return!this.runOutDate||!this.runOutDate.date?!1:_.toStandardHisFormat(e)===_.toStandardHisFormat(this.runOutDate.date)},cleanCurrentNextAppointmentDate(){T().cleanCurrentSelectedNextAppointmentDate()},checkIfSamePatientInContext(){const e=T();e.current_patient.ID!=this.patient.ID&&(this.cleanCurrentNextAppointmentDate(),e.setCurrentPatient(this.patient))},clearNextAppointment(){T().clearAppointmentMedicationRunOutDate()}}}),Sa={class:"card_content"},Ca={class:"count-badge"},ba={class:"dates_title"},ka={class:"sub_data"},Ia={class:"dates_title"},Aa={class:"sub_data"},Oa={class:"dates_title"},Ma={class:"sub_data"},wa={class:"dates_title"},Na={class:"sub_data"};function Ba(e,t,a,s,n,l){const i=A("VueDatePicker"),o=A("ion-col"),g=A("DynamicButton"),c=A("ion-item"),m=A("ion-row"),u=A("DateInputField");return y(),b("div",Sa,[r(m,null,{default:p(()=>[r(o,{"size-sm":"12","size-md":"12","size-lg":"12","size-xl":"8"},{default:p(()=>[r(i,{class:"calender",onDateUpdate:e.openCornfirmModal,inline:"","auto-apply":"","enable-time-picker":!1,"disabled-dates":e.disabledDates,"min-date":e.minDate,modelValue:e.runOutDate.date,"onUpdate:modelValue":t[0]||(t[0]=h=>e.runOutDate.date=h)},{day:p(({day:h,date:N})=>[(y(),b("p",{key:0,class:K({"run-out-date":e.isRunOutDate(N)}),style:{"font-weight":"600","font-size":"20px"}},[v("span",null,[R(M(h),1),v("sup",Ca,M(e.getCounter(N)),1)])],2))]),_:1},8,["onDateUpdate","disabled-dates","min-date","modelValue"])]),_:1}),e.show_peripheral?(y(),J(o,{key:0},{default:p(()=>[r(c,null,{default:p(()=>[v("div",ba,[t[3]||(t[3]=v("div",null,[R("Suggested Next Appointment Date "),v("span",{style:{"font-size":"16px"}},"(Medication run out date)")],-1)),v("div",ka,[R(M(e.runOutDate.formattedDate||"No run out date available")+" ",1),e.runOutDate.formattedDate?(y(),J(g,{key:0,onClick:t[1]||(t[1]=h=>e.handleDateUpdate(e.runOutDate.date)),name:"Set Next Appt.",fill:"solid",iconSlot:"icon-only",style:{float:"right"}})):w("",!0)])])]),_:1}),r(c,null,{default:p(()=>[v("div",Ia,[t[4]||(t[4]=v("div",null,"User set appointment date",-1)),v("div",Aa,M(e.calendarDate),1)])]),_:1}),r(c,null,{default:p(()=>[v("div",Oa,[t[5]||(t[5]=v("div",null,"Appointments",-1)),v("div",Ma,M(e.appointment_count),1)])]),_:1}),r(c,null,{default:p(()=>[v("div",wa,[t[6]||(t[6]=v("div",null,"Appointment limit (per/day)",-1)),v("div",Na,M(e.appointment_count)+"/"+M(e.maximumNumberOfDaysForEachDay),1)])]),_:1})]),_:1})):w("",!0)]),_:1}),e.show_peripheral?(y(),J(m,{key:0},{default:p(()=>[r(o,{size:"4"},{default:p(()=>[r(u,{inputHeader:"Preferred Next Appointment Date",bold:"600",fontSize:"17px",placeholderFontSize:"17px",placeholderFontWeight:"600",unit:"",icon:e.calendarOutline,placeholder:"press to select date",iconRight:"",inputWidth:"100%",inputValue:e.inputPRDate,eventType:"",minDate:e.minDate,maxDate:"",disabled:!1,"onUpdate:rawDateValue":t[2]||(t[2]=h=>e.handleInput(h))},null,8,["icon","inputValue","minDate"])]),_:1})]),_:1})):w("",!0)])}const Za=X(_a,[["render",Ba],["__scopeId","data-v-5d96ce77"]]);export{Ya as A,Ka as D,za as I,_t as L,Za as N,Ja as P,Ga as T,St as _,Xa as a,ja as b,Qa as c,Wa as g,qa as s,ga as u};
