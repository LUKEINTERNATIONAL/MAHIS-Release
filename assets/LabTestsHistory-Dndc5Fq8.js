var _=Object.defineProperty;var O=(e,a,s)=>a in e?_(e,a,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[a]=s;var c=(e,a,s)=>O(e,typeof a!="symbol"?a+"":a,s);import{d as R,ar as g,cu as I,U as C,T as B,as as k,ac as F,G as N,S as H,a9 as P,cx as $,X as A,a1 as E,a2 as W,E as b,e as u,f as p,m as T,l as D,k as f,z as V,F as z,L as J,B as q}from"./vendor-nmnlhkKn.js";import{aO as L,ay as r,D as U,av as j,H as v,i as w,F as G,h as K,j as X,l as y,g as Q,ax as S,k as Y,az as Z,S as x,aA as ee,aB as te,aC as ae,u as se,_ as ne}from"./index-B2b-e23R.js";import{S as ie,L as oe,a as re,u as M,E as le,b as de}from"./lab_order-D2zPX7xJ.js";import{D as ce}from"./DashBox-DWLlU5tB.js";class ue extends L{constructor(s){super(s,32);c(this,"patientID");c(this,"testTypeID");c(this,"resultDate");c(this,"testID");this.patientID=s,this.testTypeID=-1,this.resultDate="",this.testID=-1}createLabResult(s){return L.postJson("lab/tests/".concat(this.testID,"/results"),{encounter_id:this.encounterID,date:this.resultDate,measures:s})}getTestID(){return this.testID}getTestTypeID(){return this.testTypeID}setTestTypeID(s){this.testTypeID=s}setResultDate(s){this.resultDate=s}setTestID(s){this.testID=s}getTestsWithoutResults(){return r.getOrders(this.patientID,{status:"drawn"})}getTestIndicators(){return r.getJson("lab/test_result_indicators",{test_type_id:this.testTypeID})}static getTestIndicatorsWithID(s){return r.getJson("lab/test_result_indicators",{test_type_id:s})}}const pe=R({name:"Menu",components:{CheckInConfirmationModal:j,IonContent:P,IonHeader:H,IonItem:N,IonList:F,IonMenu:k,IonTitle:B,IonToolbar:C,DynamicButton:U,DashBox:ce,LabModal:re,LabViewResultsModal:oe,SendToLabConfirmationModal:ie,DataTable:I},computed:{...g(se,["patient"]),...g(M,["labResults"]),...g(ae,["investigations"]),...g(y,["patientsWaitingForVitals","patientsWaitingForConsultation","patientsWaitingForLab","patientsWaitingForDispensation"]),hasEnterResults(){return this.listOrders.some(e=>e.btn&&e.btn.includes("enter_results"))}},props:{propOrders:{default:[]}},data(){return{loading:!1,tableData:[],options:{responsive:!0,select:!1,layout:{topStart:"",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,order:[[3,"desc"]]},header:["Lab Test","Specimen","Accession Number","Order Date","Result"],iconsContent:w,valueNumericArray:[],obsDatetime:[],graphIcon:te(["#006401"]),listIcon:ee(["#636363"]),displayGraph:!0,sendToLabModalOpen:!1,orders:[],userRoles:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],listOrders:[],listResults:[],hasPatientsWaitingForLab:!1,labResultsContent:"",listHeaderOrders:"",service:"",openModal:!1,openResultsModal:!1,series:[{name:"",data:[]}]}},setup(){return{checkmark:W,pulseOutline:E}},async mounted(){this.loading=!0,await this.updateInvestigationWizard(),await this.setListData(),this.loading=!1,this.$nextTick(()=>{const e=this.$refs.dataTable.dt;e.columns.adjust().draw(),e.on("click",".result-btn",a=>{const s=a.target.getAttribute("data-id");this.openResultsForm(JSON.parse(s))}),e.on("click",".view-btn",a=>{const s=a.target.getAttribute("data-id");this.viewLabOrder(JSON.parse(s))}),e.on("click",".delete-btn",a=>{const s=a.target.getAttribute("data-id");this.voidLabOrder(JSON.parse(s),a)}),e.on("click",".order-btn",a=>{const s=a.target.getAttribute("data-id");this.saveTest(JSON.parse(s))})}),this.orders=this.propOrders,this.service=new Z(this.patient.patientID),this.userRoles=await x.getUserRoles()},watch:{$route:{async handler(){await this.setListData()},deep:!0},patient:{async handler(e){e&&e.patientID&&await this.setListData()},immediate:!0},tableData:{handler(e){if(this.$refs.dataTable){const a=this.$refs.dataTable.dt;a.clear(),a.rows.add(e),a.draw()}},deep:!0}},methods:{async closeModal(){this.openModal=!1,await this.setListData()},async saveTest(e){await new de().postActivities(this.patient.patientID,[{concept_id:await S.getConceptID(e.name,!0),name:e.name,specimen:e.specimen,reason:"Routine",specimenConcept:await S.getConceptID(e.specimen,!0)}]),Y("Successfully saved"),this.orders=await r.getOrders(this.patient.patientID),this.tableData=this.generateListItems(this.orders,"order"),this.tableData.sort((n,t)=>{const o=new Date(n[3]);return new Date(t[3]).getTime()-o.getTime()});const s=this.$refs.dataTable.dt;s.clear(),s.rows.add(this.tableData),s.draw()},async openEnterResultModal(){await Q(le,{class:"lab-results-modal"},!0,{title:"name"}),await this.setListData()},toggleSendToLabModal(){this.sendToLabModalOpen=!this.sendToLabModalOpen},async fetchPatientLabStageData(){const e=await K(),a=e?e.code:null;if(a){const s=await X.getPatientList("LAB",a);await y().refresh(a),this.patient.patientID&&(this.hasPatientsWaitingForLab=s.some(n=>n.patient_id===this.patient.patientID))}},async updateInvestigationWizard(){this.orders=await r.getOrders(this.patient.patientID);const e=await this.orders.filter(a=>v.toStandardHisFormat(v.sessionDate())===v.toStandardHisFormat(a.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},dismiss(){A.dismiss()},async voidLabOrder(e,a){await G("Do you want to delete ".concat(e.tests[0].name," ?"),a)&&await this.service.voidOrder(e.id,"Mistake entry"),await this.setListData()},async openResultsForm(e){const a=await ue.getTestIndicatorsWithID(e.concept_id);console.log({testIndicators:a});const s=[e,{validationStatus:"",data:{rowData:[{colData:[]}]}}];a.forEach(t=>{let o={inputHeader:t.name,value:"",colSize:3,id:t.concept_id,name:t.name,required:!0,eventType:"input",alertsErrorMassage:""};if(t.name=="RBS"&&(o={inputHeader:t.name,value:"",colSize:3,id:t.concept_id,name:t.name,required:!0,eventType:"input",alertsErrorMassage:"",validationFunctionName:"validateRBS",unit:"mg/dL"}),t.name=="FBS"&&(o={inputHeader:t.name,value:"",colSize:3,id:t.concept_id,name:t.name,required:!0,eventType:"input",alertsErrorMassage:"",validationFunctionName:"validateFBS",unit:"mg/dL"}),t.name=="MRDT"||t.name=="Tuberculosis program"||t.name=="Vdrl"||t.name=="Hepatitis B"||t.name=="Lam"||t.name=="CrAg"||t.name=="CD4 count"||t.name=="Leukocytes"||t.name=="Protein"||t.name=="Nitrite"||t.name=="Urine Ketones"||t.name=="HIV test"){let i=[];(t.name=="MRDT"||t.name=="Vdrl"||t.name=="Hepatitis B"||t.name=="CrAg"||t.name=="Lam")&&(i=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),t.name=="Tuberculosis program"&&(i=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),t.name=="CD4 count"&&(i=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(t.name=="Leukocytes"||t.name=="Protein"||t.name=="Nitrite"||t.name=="Ketones"||t.name=="Urine Ketones")&&(i=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),t.name=="HIV test"&&(i=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),o={inputHeader:t.name,icon:w.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:i,id:t.concept_id,idName:"district_id"}}s[1].data.rowData[0].colData.push(o)}),M().setLabResults(s),this.openModal=!0,this.orders=await r.getOrders(this.patient.patientID),console.log("ðŸš€ ~ openResultsForm ~ this.orders:",this.orders)},async viewLabOrder(e){this.labResultsContent=e,this.openResultsModal=!0},async setListData(){this.loading=!0,this.orders=await r.getOrders(this.patient.patientID);let e=this.generateListItems(this.orders,"order");e.sort((o,i)=>{const l=new Date(o[3]);return new Date(i[3]).getTime()-l.getTime()});const a=[],s=a.filter(o=>!e.some(i=>i[0]===o[0])),n=e.filter(o=>a.some(i=>i[0]===o[0])),t=e.filter(o=>!n.some(i=>i[0]===o[0]));this.tableData=[...n,...s,...t],await this.updateInvestigationWizard(),this.loading=!1,I.use($)},generateListItems(e,a){return e.length>0?e.flatMap(s=>s.tests.flatMap(n=>{var i,l,d,m;const t='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(n),"'>").concat(this.iconsContent.view2,"</button> ");let o="";return((i=n==null?void 0:n.result)==null?void 0:i.length)==1?o=(n==null?void 0:n.result)!=null?((l=n==null?void 0:n.result[0])==null?void 0:l.value_modifier)+((d=n==null?void 0:n.result[0])==null?void 0:d.value):null:((m=n==null?void 0:n.result)==null?void 0:m.length)>1&&(n==null||n.result,o=t),[[n.name,s.specimen.name,s.accession_number,v.toStandardHisFormat(s.order_date),o]]})):[]}}}),me={class:"container"},he={key:0,class:"loading-container"},ge={key:1,class:"table-responsive"};function be(e,a,s,n,t,o){const i=b("ion-spinner"),l=b("DataTable"),d=b("LabViewResultsModal"),m=b("LabModal");return p(),u("div",me,[e.loading?(p(),u("div",he,[D(i,{name:"crescent"}),a[2]||(a[2]=f("p",null,"Loading lab results...",-1))])):T("",!0),e.loading?T("",!0):(p(),u("div",ge,[D(l,{ref:"dataTable",options:e.options,data:e.tableData,class:"display nowrap",width:"100%"},{default:V(()=>[f("thead",null,[f("tr",null,[(p(!0),u(z,null,J(e.header,h=>(p(),u("th",{key:h,"data-orderable":!0},q(h),1))),128))])])]),_:1},8,["options","data"])])),D(d,{popoverOpen:e.openResultsModal,content:e.labResultsContent,onCloseModal:a[0]||(a[0]=h=>e.openResultsModal=!1)},null,8,["popoverOpen","content"]),D(m,{popoverOpen:e.openModal,onSaved:e.closeModal,onCloseModal:a[1]||(a[1]=h=>e.openModal=!1)},null,8,["popoverOpen","onSaved"])])}const De=ne(pe,[["render",be],["__scopeId","data-v-519fa306"]]),we=Object.freeze(Object.defineProperty({__proto__:null,default:De},Symbol.toStringTag,{value:"Module"}));export{De as L,ue as P,we as a};
