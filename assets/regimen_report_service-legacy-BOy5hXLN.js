!function(){function e(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var i=r.call(e,t||"default");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}System.register(["./regimens-legacy-CsGa93aR.js","./index-legacy-CM_J0vDj.js","./lodash-legacy-pOOc9Efu.js"],function(t,r){"use strict";var i,n,s;return{setters:[e=>{i=e.a},e=>{n=e.bP},e=>{s=e.l}],execute:function(){t("R",class extends n{constructor(){super(),e(this,"type",void 0),this.type="pepfar"}setReportType(e){this.type=e}getTptNewInitiations(){return this.getReport(`programs/${this.programId}/reports/tpt_newly_initiated`)}getRegimenFormulationReport(e,t){return this.getReport(`programs/${this.programId}/reports/regimens_and_formulations`,{regimen:e,formulation:t})}async getRegimenReport(){const e=await this.getReport("regimen_report",{type:this.type});return this.regimenReportBuilder(e)}async getRegimenSwitchReport(){const e=await this.getReport("regimen_switch",{pepfar:this.isPepfar()});return this.regimenReportBuilder(e)}regimenReportBuilder(e){return Object.values(null!=e?e:{}).map(e=>{let t="";const r=e.medication.map(e=>(t=e.start_date,`${e.medication} (${e.quantity})`));return{...e,dispensation_date:t,medications:r.join(", ")}})}regimenDistributionRowBuilder(e,t,r){const n={weight:e,gender:t,total:0};return[...i,"N/A"].reduce((e,t)=>{const i=r.find(e=>!s.isEmpty(e[t]));return i?(e[t]=i[t],e.total+=i[t]):e[t]=0,e},n)}async getRegimensByWeight(){const e=await this.getReport(`programs/${this.programId}/reports/regimens_by_weight_and_gender`),t=[],r=[];return null==e||e.forEach(e=>{r.push(this.regimenDistributionRowBuilder(e.weight,"F",e.females)),t.push(this.regimenDistributionRowBuilder(e.weight,"M",e.males))}),[...r,...t]}getSCReport(){return this.getReport("sc_arvdisp",{pepfar:this.isPepfar()})}isPepfar(){return/pepfar/i.test(this.type)}async getRegimenDispensationReport(e){const t=[],r=await this.getReport("latest_regimen_dispensed",{rebuild_outcome:e});if(!r)return[];for(const i in r)for(const e in r[i]){const n=r[i][e];t.push({identifier:n.identifier,drugName:n.name,gender:n.gender,dob:n.birthdate,dispensationDate:n.dispensation_date,packSize:n.pack_sizes[0],packSizes:n.pack_sizes.length,quantity:n.quantity,vlResult:n.vl_latest_result,vlResultDate:n.vl_latest_result_date,vlOrderDate:n.vl_latest_order_date})}return t}})}}})}();
