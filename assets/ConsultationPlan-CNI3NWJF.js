import{d as W,V as Y,G as E,S as z,ao as B,E as u,y as U,f as v,z as O,k as $,l as g,al as i,bg as G,D as J,M as j,J as Q,ae as q,bI as K,af as X,ad as Z,ag as tt,W as et,cB as at,U as st,T as nt,au as it,bj as ot,r as rt,ai as ct,ck as lt,e as k,m as A}from"./vendor-IHO26Iap.js";import{w as pt,_ as H,z as dt,T as ut,ac as mt,S as p,t as d,H as D,J as T,g as ht,a0 as gt,k as h,a5 as b,aI as _,j as y,h as C,l as w,Q as Dt,aJ as c,m as M,aK as ft,o as Pt,aL as St,a6 as yt,aM as wt,aN as vt,V as It,a7 as bt,aO as _t,aP as Ct,aQ as Lt,u as Ot,i as kt,P as At,W as Tt,Y as Mt}from"./index-BUOqMZYn.js";import{D as Ft}from"./DemographicBar-DHu6g77C.js";import{c as F,a as P,f as N,S as Nt}from"./SaveProgressModal-DnProDVt.js";import{S as Wt,e as Et,T as zt,k as Bt,n as Ut,m as $t,s as Ht}from"./Stepper-1V7QtBFK.js";import{l as L}from"./lodash-Dt8AsbQm.js";import{D as Vt}from"./diagnosis-hIAp3EP5.js";import{P as xt}from"./patient_complaints_service-Ciz8OVtQ.js";import{A as I}from"./app_encounter_service-RKYf1Er9.js";import{B as Rt}from"./BasicFooter-CtGbwiql.js";import{_ as Yt}from"./SetEncounter.vue_vue_type_script_lang-G-2sSc0B.js";import{O as Gt}from"./OPDPrintingModal-CbV_4EOn.js";import{u as Jt}from"./usePatientProfile-CNwbYw16.js";import"./previousVitals-CTDJlfD_.js";import"./apexcharts-BRNTdOtj.js";import"./SvgDynamicColor-DeD0f1Y6.js";import"./patient_lab_service-KbSY86um.js";import"./group_validation-BnrsoIf6.js";import"./ncd_appointment_service-4C6JR8nN.js";import"./clinicalDaysStore-DJm_CKmQ.js";import"./UpcomingFeature-4cWDa50w.js";import"./DatePicker.vue_vue_type_script_setup_true_lang-DctJVZ_2.js";import"./SelectFacility-y3EC6Amq.js";import"./drug_service-CDl2DHKq.js";import"./drug_prescription_service-DJerx_XS.js";import"./appointment_service-B3G7Vp82.js";import"./FeatusModal-DYjaSrbI.js";import"./vitals_service-BKkGnNOl.js";import"./patient_registration_service-DC05aYJO.js";import"./relationship_service-D0mnKDHJ.js";import"./relations_service-CBri8N1j.js";import"./FollowUpStore-C83S5UEI.js";import"./BirthRegistration-DG5mxcQb.js";import"./OutcomeModal-DFAhJJFD.js";import"./SetRelationship.vue_vue_type_script_lang-CPrY0ybI.js";import"./AddVillage-Cpx7bwwZ.js";import"./NCDNumber-DWmhWaAF.js";import"./index-K1HQNfX8.js";class jt extends I{constructor(e,a){super(e,111,a)}}class Qt extends I{constructor(e,a){super(e,30,a)}}class qt extends I{constructor(e,a){super(e,141,a)}}class Kt extends I{constructor(e,a){super(e,28,a)}}const Xt=W({name:"Menu",components:{IonContent:B,IonHeader:z,IonItem:E,IonFooter:Y,DynamicButton:pt},data(){return{}},props:{status:{type:Boolean,default:!0},name:{type:String,default:"Save and end visit"}},methods:{}}),Zt={class:"button-container"};function te(t,e,a,s,o,m){const f=u("DynamicButton"),n=u("ion-footer");return v(),U(n,{translucent:!0,class:"ion-no-border"},{default:O(()=>[$("div",Zt,[g(f,{name:t.name,iconSlot:"end",onClick:e[0]||(e[0]=l=>t.$emit("finishBtn"))},null,8,["name"])])]),_:1})}const ee=H(Xt,[["render",te],["__scopeId","data-v-e844e8f2"]]),ae=W({name:"ConsultationPlan",mixins:[Et,Yt],components:{OPDPrintingModal:Gt,CheckInConfirmationModal:mt,IonContent:B,IonHeader:z,IonMenuButton:ot,IonPage:it,IonTitle:nt,IonToolbar:st,IonLoading:at,Toolbar:ut,ToolbarSearch:dt,DemographicBar:Ft,IonButton:et,IonCard:tt,IonCardContent:Z,IonCardHeader:X,IonCardSubtitle:K,IonCardTitle:q,IonAccordion:Q,IonAccordionGroup:j,IonItem:E,IonLabel:J,IonModal:G,Stepper:Wt,BasicFooter:Rt,OPDFooter:ee},data(){return{openStepper:"1",wizardData:[],StepperData:[],isOpen:!1,hasPatientsWaitingForLab:!1,iconsContent:kt,isLoading:!1,isLoadingPrinter:!1,patients:[],showAlert:!1,checkedIn:!1,printModalOpen:!1}},props:{list:{default:""}},computed:{...i(Ot,["patient"]),...i(Lt,["pregnancy"]),...i(Ct,["presentingComplaints"]),...i(_t,["pastMedicalHistory"]),...i(bt,["vitals"]),...i(It,["investigations"]),...i(vt,["OPDdiagnosis"]),...i(wt,["physicalExam"]),...i(yt,["selectedMedicalDrugsList","nonPharmalogicalTherapyAndOtherNotes","selectedMedicalAllergiesList"]),...i(St,["adult","minor"]),...i(b,["outcomes"]),...i(Pt,["OPDActivities"]),...i(w,["patientsWaitingForVitals","patientsWaitingForConsultation","patientsWaitingForLab","patientsWaitingForDispensation","counter"]),...i(ft,["currentSelectedNextAppointmentDate"])},async created(){},async mounted(){await this.getData(),await this.fetchPatientLabStageData(),this.markWizard()},watch:{patientsWaitingForLab(t){this.hasPatientsWaitingForLab=t.some(e=>e.patient_id===this.patient.patientID),this.showAlert=this.hasPatientsWaitingForLab,this.showAlert&&setTimeout(()=>{this.showAlert=!1},15e3)},vitals:{handler(){this.markWizard()},deep:!0},$route:{async handler(){await this.getData(),this.markWizard(),this.fetchPatientLabStageData(),this.hasPatientsWaitingForLab=!1},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},OPDdiagnosis:{handler(){this.markWizard()},deep:!0},selectedMedicalDrugsList:{handler(){this.markWizard()}},outcomes:{handler(){this.markWizard()}},currentSelectedNextAppointmentDate:{handler(){this.markWizard()}},hasPatientsWaitingForLab:{immediate:!0,handler(t){}}},setup(){const{printVisitSummary:t}=Jt(),e=rt([]);async function a(n){const l=new At,r=await Tt.getEncounters(l.getID(),{date:n});await s(r)}async function s(n){var l;try{const r=(l=n.find(S=>S.type.name==="PRESENTING COMPLAINTS"))==null?void 0:l.observations;r?e.value=await m(o(r,"Presenting complaint"),"coded"):e.value=[]}catch(r){console.error("Error setting presenting complaints encounters:",r)}}async function o(n,l){return n==null?void 0:n.filter(r=>r.concept.concept_names.some(S=>S.name===l))}async function m(n,l){return n.length>0?Promise.all(n.map(async r=>await Mt.getConceptName(r.value_coded))):[]}return(async()=>{const n=new Date().toISOString().split("T")[0];await a(n)})(),{presentingComplaintsValue:e,printVisitSummary:t,loadSavedEncounters:a,chevronBackOutline:lt,checkmark:ct}},methods:{endConsultation(){},togglePrintModal(){this.printModalOpen=!this.printModalOpen},closeCheckInModal(){this.printModalOpen=!1},async printYes(){this.isLoadingPrinter=!0,h("Printing consultation summary... Please wait.");try{await this.printVisitSummary(),h("Consultation summary printed successfully!"),setTimeout(()=>{this.$router.push("home")},3500)}catch(t){M("Failed to print consultation summary.")}finally{this.isLoadingPrinter=!1}},async printNo(){h("Patient has finished consultation!"),this.$router.push("home")},getSaveFunction(t){if(t<this.StepperData.length-1)switch(t){case 0:return this.presentingComplaintsValue.length===0?this.saveClinicalAssessment:()=>Promise.resolve();case 1:return()=>Promise.resolve();case 2:return()=>Promise.resolve();case 3:return()=>Promise.resolve();default:return()=>Promise.resolve()}else return async()=>{await this.saveDiagnosis(),await this.saveTreatmentPlan(),await b().saveOutcomPatientData(),_();const e=await C(),a=e?e.code:null;if(!a){M("Location ID could not be found. Please check your settings.");return}this.userRole!=="Lab"?(await y.addPatientToStage(this.patient.patientID,D.todayDateFormatted(),"DISPENSATION",a),await w().refresh(a),this.$router.push("home"),h("Patient has finished consultation!")):(await y.addPatientToStage(this.patient.patientID,D.todayDateFormatted(),"CONSULTATION",a),await w().refresh(a),this.$router.push("home"),h("Lab results submitted. Patient can return to consultation"))}},async fetchPatientLabStageData(){const t=await C(),e=t?t.code:null;if(e){const a=await y.getPatientList("LAB",e);this.patient.patientID&&(this.hasPatientsWaitingForLab=a.some(s=>s.patient_id===this.patient.patientID))}},setList(){const t={VITALS:this.patientsWaitingForVitals,CONSULTATION:this.patientsWaitingForConsultation,LAB:this.patientsWaitingForLab,DISPENSATION:this.patientsWaitingForDispensation};this.patients=t[this.list]||[]},async getData(){try{this.wizardData=[{title:"Clinical Assessment",class:"open_step common_step",checked:!1,disabled:!1,number:1,last_step:""},{title:"Investigations",class:"common_step",checked:!1,disabled:!1,number:2,last_step:""},{title:"Diagnosis",class:"common_step",checked:"",disabled:!1,number:3,last_step:""},{title:"Treatment Plan",class:"common_step",checked:"",disabled:!1,number:4,last_step:"last_step"}],this.StepperData=[{title:"Clinical Assessment",component:"ClinicalAssessment",value:"1"},{title:"Investigations",component:"Investigations",value:"2"},{title:"Diagnosis",component:"OPDDiagnosis",value:"3"},{title:"Treatment Plan",component:"OPDTreatmentPlan",value:"4"}]}catch(t){console.error(t)}},markWizard(){this.presentingComplaints?c(this.wizardData,"Clinical Assessments",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Clinical Assessments",{checked:!1}),this.investigations[0].selectedData.length>0?c(this.wizardData,"Investigations",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Investigations",{checked:!1}),this.OPDdiagnosis[0].selectedData.length>0?c(this.wizardData,"Diagnosis",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Diagnosis",{checked:!1}),this.selectedMedicalDrugsList.length>0?c(this.wizardData,"Treatment Plan",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Treatment Plan",{checked:!1}),this.currentSelectedNextAppointmentDate?c(this.wizardData,"Next Appointment",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Next Appointment",{checked:!1}),this.outcomes.length>0?c(this.wizardData,"Outcome",{checked:!0,class:"open_step common_step"}):c(this.wizardData,"Outcome",{checked:!1})},getFormatedData(t){return t.map(e=>(e==null?void 0:e.data[0])||(e==null?void 0:e.data))},async saveClinicalAssessment(){this.isLoading=!0;try{const t=await Dt.getAll(this.patient.patientID,"Presenting complaint");let e=[];if(t&&(e=t.filter(a=>D.toStandardHisFormat(D.sessionDate())===D.toStandardHisFormat(a.obs_datetime))),this.presentingComplaints[0].selectedData.length>0||e.length>0)await this.saveConsciousness(),await this.savePresentingComplaints(),await this.saveWomenStatus(),await this.savePastMedicalHistory(),await this.saveAllergies(),await this.savePhysicalExam(),_();else{d("Patient complaints are required");return}}catch(t){}finally{this.isLoading=!1}},async saveData(){try{await this.saveDiagnosis(),await this.saveTreatmentPlan(),await b().saveOutcomPatientData(),_();const t=await y.getCheckInStatus(this.patient.patientID);await y.checkOutPatient(t[0].id,D.todayDateFormatted());const e=await C(),a=e?e.code:null;await w().refresh(a),this.checkedIn=!1}catch(t){}this.togglePrintModal()},async savePastMedicalHistory(){const t=await this.buildPastMedicalHistory(),e=p.getUserID();if(t.length>0){const a=new Qt(this.patient.patientID,e);if(!await a.createEncounter())return d("Unable to create past medical history encounter");if(!await a.saveObservationList(t))return d("Unable to create past medical history!");h("Past medical history has been created")}},async savePresentingComplaints(){if(this.presentingComplaints[0].selectedData.length>0){const t=p.getUserID(),e=new xt(this.patient.patientID,t);if(!await e.createEncounter())return d("Unable to create patient complaints encounter");if(!await e.saveObservationList(this.getFormatedData(this.presentingComplaints[0].selectedData)))return d("Unable to create patient complaints  !");h("Patient complaints has been created")}this.presentingComplaints[0].selectedData},async savePhysicalExam(){const t=await this.buildPhysicalExamination();if(t.length>0){const e=p.getUserID(),a=new Kt(this.patient.patientID,e);if(!await a.createEncounter())return d("Unable to create patient physical examination encounter");if(!await a.saveObservationList(t))return d("Unable to create patient physical examination  !");h("Physical examination has been created")}},async saveWomenStatus(){const t=await P(this.pregnancy);if(t.length>0){const e=p.getUserID(),a=new jt(this.patient.patientID,e);if(!await a.createEncounter())return d("Unable to create pregnant Status encounter");if(!await a.saveObservationList(t))return d("Unable to create pregnant Status !");h("Pregnant Status has been created")}},async saveDiagnosis(){var t,e,a,s;if(this.OPDdiagnosis[0].selectedData.length>0){const o=p.getUserID(),m=new Vt,f=this.getFormatedData(this.OPDdiagnosis[0].selectedData);console.log(this.patient),(s=(a=(e=(t=this.patient).diagnosis)!=null?e:t.diagnosis={}).unsaved)!=null||(a.unsaved=[]),this.patient.diagnosis.unsaved.push(...f),await gt(this.patient),await m.onSubmit(this.patient.patientID,o,this.getFormatedData(this.OPDdiagnosis[0].selectedData))}this.OPDdiagnosis[0].selectedData=[]},async saveAllergies(){if(p.getUserID(),this.patient.patientID,!L.isEmpty(this.selectedMedicalAllergiesList)){const t=this.mapToAllergies();Ht(t)}},async saveTreatmentPlan(){const t=p.getUserID(),e=this.patient.patientID,a=new zt;if(!L.isEmpty(this.selectedMedicalAllergiesList)){const s=this.mapToAllergies();a.onSubmitAllergies(e,t,s)}if(!L.isEmpty(this.nonPharmalogicalTherapyAndOtherNotes)){const s=T(),o=[{concept_id:2688,obs_datetime:p.getSessionDate(),value_text:this.nonPharmalogicalTherapyAndOtherNotes,location_id:s.facilityLocation.code}];await Bt(o)}Ut(),await $t().saveNonPharmaTherapyPatientData()},saveInvestigations(){},openModal(){ht(Nt)},mapToAllergies(){const t=T();return this.selectedMedicalAllergiesList.map(e=>({concept_id:985,obs_datetime:p.getSessionDate(),value_coded:e.concept_id,location_id:t.facilityLocation.code}))},async buildPastMedicalHistory(){return[...await F(this.pastMedicalHistory),...await P(this.pastMedicalHistory),...await N(this.pastMedicalHistory)]},async saveConsciousness(){if((await P(this.adult)).length>0){const e=p.getUserID(),a=new qt(this.patient.patientID,e);if(!await a.createEncounter())return d("Unable to create patient complaints encounter");const o=D.getAgeInYears(this.patient.personInformation.birthdate);let m;o<18?m=await P(this.minor):m=await P(this.adult),await a.saveObservationList(m)}},async buildPhysicalExamination(){return[...await F(this.physicalExam),...await P(this.physicalExam),...await N(this.physicalExam)]}}}),se={key:0,class:"spinner-overlay"},ne={key:1,class:"pause-alert"};function ie(t,e,a,s,o,m){const f=u("OPDPrintingModal"),n=u("ion-spinner"),l=u("ion-loading"),r=u("Toolbar"),S=u("DemographicBar"),V=u("Stepper"),x=u("ion-content"),R=u("ion-page");return v(),U(R,null,{default:O(()=>[g(f,{onYes:t.printYes,onNo:t.printNo,isOpen:t.printModalOpen,title:"Do you want to print the consultation summary?"},null,8,["onYes","onNo","isOpen"]),t.isLoading?(v(),k("div",se,[g(n,{name:"bubbles"}),e[0]||(e[0]=$("div",{class:"loading-text"},"Please wait...",-1))])):A("",!0),g(l,{"is-open":t.isLoadingPrinter,message:"Printing consultation summary...",spinner:"circles"},null,8,["is-open"]),g(r),g(x,{fullscreen:!0},{default:O(()=>[g(S),g(V,{stepperTitle:t.userRoleSettings.stepperTitle,wizardData:t.wizardData,onUpdateStatus:t.markWizard,StepperData:t.StepperData,openStepper:t.openStepper,backUrl:t.userRoleSettings.url,backBtn:t.userRoleSettings.btnName,getSaveFunction:t.getSaveFunction,hasPatientsWaitingList:t.hasPatientsWaitingForLab,specialButtonLabel:"save & end visit",specialButtonFn:t.saveData,userRole:t.userRole},null,8,["stepperTitle","wizardData","onUpdateStatus","StepperData","openStepper","backUrl","backBtn","getSaveFunction","hasPatientsWaitingList","specialButtonFn","userRole"])]),_:1}),(t.userRole==="Clinician"||t.userRole==="Superuser")&&t.showAlert?(v(),k("div",ne," Consultation for this patient is paused due to lab orders. ")):A("",!0)]),_:1})}const Re=H(ae,[["render",ie],["__scopeId","data-v-cb94fa00"]]);export{Re as default};
