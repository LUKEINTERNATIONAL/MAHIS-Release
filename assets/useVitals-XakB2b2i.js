import{c as _}from"./SvgDynamicColor-DJbURSnW.js";import{i as l,u as V,Q as h,P as g,Z as P,ak as m,X as T,H as y,aO as f,w as D}from"./index-7oXXhM88.js";import{R as z,r as B,c as F,O as H}from"./vendor-BsZAuWFl.js";import{l as A}from"./lodash-Dt8AsbQm.js";const b=[{isFinishBtn:!1,validationStatus:"",sectionHeader:"Height and weight",actionBtn:"Finish and Save",data:{rowData:[{colData:[{inputHeader:"Height*",unit:"cm",icon:l.height,value:"",name:"Height (cm)",required:!0,eventType:"input",alertsErrorMassage:"",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"vitalsHeight"},{inputHeader:"Weight*",unit:"kg",icon:l.weight,value:"",name:"Weight",required:!0,eventType:"input",alertsErrorMassage:"",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"vitalsWeight"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"bmi",index:""}],previousView:{name:"vitals"}},{classDash:"",selectedData:[],sideColSize:3.8,checkboxBtnContent:{header:{title:"",selectedValue:" ",displayNone:!1,name:"Height Not Done"},data:[{colSize:"5.8",name:"Height Not Done",value:"Height Not Done",checked:!1,displayNone:!1}],inputFields:[{inputHeader:"Specify Reason",icon:l.search,isMultiSelect:!0,isCheckboxInputField:!0,popOver:!0,value:"",name:"Height (cm)",valueType:"text",multiSelectData:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],eventType:"input",required:!0,id:"",idName:"district_id",displayNone:!0}]}},{classDash:"dashed_bottom_border",selectedData:[],sideColSize:3.8,checkboxBtnContent:{header:{title:"",selectedValue:" "},data:[{colSize:"5.8",name:"Weight Not Done",value:"Weight Not Done",checked:!1,displayNone:!1}],inputFields:[{inputHeader:"Specify Reason",icon:l.search,isMultiSelect:!0,isCheckboxInputField:!0,popOver:!0,value:"",name:"Weight",valueType:"text",multiSelectData:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],eventType:"input",required:!0,id:"",idName:"district_id",displayNone:!0}]}},{sectionHeader:"Blood pressure",data:{rowData:[{colData:[{inputHeader:"Systolic Pressure*",unit:"mmHg",icon:l.systolicPressure,value:"",name:"Systolic",required:!0,eventType:"input",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"vitalsSystolic"},{inputHeader:"Diastolic pressure*",unit:"mmHg",icon:l.diastolicPressure,value:"",name:"Diastolic",required:!0,eventType:"input",disabled:!1,valueType:"number",inputType:"number",validationFunctionName:"vitalsDiastolic"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"bp",index:""}],previousView:{name:"vitals"}},{classDash:"dashed_bottom_border",selectedData:[],sideColSize:3.8,checkboxBtnContent:{header:{title:"",selectedValue:" ",name:"Primary diagnosis"},data:[{colSize:"5.8",name:"Blood Pressure Not Done",value:"Blood Pressure Not Done",checked:!1,displayNone:!1}],inputFields:[{inputHeader:"Specify Reason",icon:l.search,isMultiSelect:!0,isCheckboxInputField:!0,popOver:!0,value:"",name:"Blood Pressure",valueType:"text",multiSelectData:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],eventType:"input",required:!0,alertsErrorMassage:"",id:"",idName:"district_id",displayNone:!0}]}},{sectionHeader:"Temperature and rates",data:{rowData:[{colData:[{inputHeader:"Temperature*",unit:"C",icon:l.temprature,value:"",name:"Temperature",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"vitalsTemperature"},{inputHeader:"Pulse rate*",unit:"BMP",icon:l.pulse,value:"",name:"Pulse",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"vitalsPulseRate"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"temp",index:""},{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"pulse",index:""}]},{selectedData:[],sideColSize:3.8,checkboxBtnContent:{header:{title:"",selectedValue:" ",name:"Primary diagnosis"},data:[{colSize:"5.8",name:"Pulse Rate Not Done",value:"Pulse Rate Not Done",checked:!1,displayNone:!1}],inputFields:[{inputHeader:"Specify Reason",icon:l.search,isMultiSelect:!0,isCheckboxInputField:!0,popOver:!0,value:"",name:"Pulse",valueType:"text",multiSelectData:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],eventType:"input",required:!0,alertsErrorMassage:"",id:"",idName:"district_id",displayNone:!0}]}},{classDash:"dashed_bottom_border",selectedData:[],sideColSize:3.8,checkboxBtnContent:{header:{title:"",selectedValue:" ",name:"Primary diagnosis"},data:[{colSize:"5.8",name:"Temperature Not Done",value:"Temperature Not Done",checked:!1,displayNone:!1}],inputFields:[{inputHeader:"Specify Reason",icon:l.search,isMultiSelect:!0,isCheckboxInputField:!0,popOver:!0,value:"",name:"Temperature",valueType:"text",multiSelectData:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],eventType:"input",required:!0,alertsErrorMassage:"",id:"",idName:"district_id",displayNone:!0}]}},{sectionHeader:"null",data:{rowData:[{colData:[{inputHeader:"Respiratory rate*",unit:"BMP",icon:l.respiratory,value:"",name:"Respiratory rate",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"vitalsRespiratoryRate"},{inputHeader:"Oxygen saturation*",unit:"%",icon:l.oxgenStaturation,value:"",name:"SAO2",eventType:"input",valueType:"number",inputType:"number",validationFunctionName:"vitalsOxygenSaturation"}]}]},alerts:[{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"respiratory",index:""},{backgroundColor:"",status:"",icon:"",textColor:"",value:"",name:"oxygen",index:""}]},{selectedData:[],sideColSize:3.8,checkboxBtnContent:{header:{title:"",selectedValue:" ",name:"Primary diagnosis"},data:[{colSize:"5.8",name:"Respiratory rate Not Done",value:"Respiratory rate Not Done",checked:!1,displayNone:!1}],inputFields:[{inputHeader:"Specify Reason",icon:l.search,isMultiSelect:!0,isCheckboxInputField:!0,popOver:!0,value:"",name:"Respiratory rate",valueType:"text",multiSelectData:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],eventType:"input",required:!0,alertsErrorMassage:"",id:"",idName:"district_id",displayNone:!0}]}},{classDash:"dashed_bottom_border",selectedData:[],sideColSize:3.8,checkboxBtnContent:{header:{title:"",selectedValue:" ",name:"Primary diagnosis"},data:[{colSize:"5.8",name:"Oxygen saturation Not Done",value:"Oxygen saturation Not Done",checked:!1,displayNone:!1}],inputFields:[{inputHeader:"Specify Reason",icon:l.search,isMultiSelect:!0,isCheckboxInputField:!0,popOver:!0,value:"",name:"SAO2",valueType:"text",multiSelectData:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],eventType:"input",required:!0,alertsErrorMassage:"",id:"",idName:"district_id",displayNone:!0}]}}],q=z("NCDVitalsStore",{state:()=>({vitals:[...b],current_patient:{}}),actions:{setVitals(u){this.vitals=u},getInitialVitals(u){var p;return(p=this.current_patient)!=null&&p.ID&&this.current_patient.ID!==u?A.cloneDeep(b):A.cloneDeep(b)},setCurrentPatient(u){this.current_patient=u}},persist:!0});function J(){const u=B({}),p=B({});let c=B({});const R=V(),d=F(()=>R.patient),E=q();c=F(()=>E.vitals);const k=async()=>{const a=await h.getFirstValueNumber(d.value.patientID,"Height (cm)"),i=await h.getFirstObsDatetime(d.value.patientID,"Height (cm)"),e=new g;if(a&&!(H(i).diff(e.getBirthdate(),"year")<18||e.getAge()<18))return a},M=async()=>{var t,r,s,o;const a=[...((r=(t=d.value)==null?void 0:t.vitals)==null?void 0:r.saved)||[],...((o=(s=d.value)==null?void 0:s.vitals)==null?void 0:o.unsaved)||[]],i=await P(a,"value_numeric",5090),e=await P(a,"obs_datetime",5090),n=new g;if(i&&!(H(e).diff(n.getBirthdate(),"year")<18||n.getAge()<18))return i},w=async()=>{var n,t;const a=["Height (cm)","Weight","Systolic","Diastolic","Temperature","Pulse","SAO2","Respiratory rate"],i=y.getAgeInYears((t=(n=d.value)==null?void 0:n.personInformation)==null?void 0:t.birthdate),e=a.map(async r=>{const s=await h.getFirstObsDatetime(d.value.patientID,r);s&&y.toStandardHisFormat(s)==y.sessionDate()?(r=="Weight"&&f(c.value,"Height And Weight Not Done","displayNone",!0),r=="Systolic"&&f(c.value,"Blood Pressure Not Done","displayNone",!0),r=="Pulse"&&f(c.value,"Pulse Rate Not Done","displayNone",!0),r=="Respiratory rate"&&f(c.value,"Respiratory rate Not Done","displayNone",!0),D(c.value,r,"value",await h.getFirstValueNumber(d.value.patientID,r,y.sessionDate())),D(c.value,r,"disabled",!0)):D(c.value,r,"value",""),r==="Respiratory rate"&&i<=5&&(D(c.value,r,"required",!0),D(c.value,r,"inputHeader","Respiratory rate*"))});await Promise.all(e)},O=async(a,i)=>{var e,n,t,r,s,o,v,C;return(n=(e=d.value)==null?void 0:e.personInformation)!=null&&n.gender&&((r=(t=d.value)==null?void 0:t.personInformation)!=null&&r.birthdate)&&m.vitalsHeight(a)==null&&m.vitalsWeight(i)==null?u.value=await T.getBMI(parseInt(i),parseInt(a),(o=(s=d.value)==null?void 0:s.personInformation)==null?void 0:o.gender,y.calculateAge((C=(v=d.value)==null?void 0:v.personInformation)==null?void 0:C.birthdate,y.sessionDate())):u.value={},await x()},x=async()=>{var i,e,n,t,r,s;if(!c.value[0])return;const a=(e=(i=u.value)==null?void 0:i.color)!=null?e:[];return S("bmi","BMI "+((t=(n=u.value)==null?void 0:n.index)!=null?t:""),"",{colors:a,value:(s=(r=u.value)==null?void 0:r.result)!=null?s:""},T.iconBMI(a))},I=async(a,i)=>{var n,t,r,s;p.value=N(a,i),m.vitalsSystolic(a)==null&&m.vitalsDiastolic(i)==null||(p.value={});const e=(t=(n=p.value)==null?void 0:n.colors)!=null?t:[];return S("bp",a+"/"+i,"mmHg",{colors:e,value:(s=(r=p.value)==null?void 0:r.value)!=null?s:""},_(e))},S=async(a,i,e,n,t="")=>{var o,v;if(!i)return;const r=i+" "+e,s=(o=n==null?void 0:n.colors)!=null?o:[];return{icon:t||"",textColor:s[1],index:r,backgroundColor:s[0],value:(v=n==null?void 0:n.value)!=null?v:""}},N=(a,i)=>{if(a&&i){let e,n,t,r;const o=new g().getAge();return o<1?(e=75,n=100,t=50,r=70):o>=1&&o<6?(e=80,n=110,t=50,r=80):o>=6&&o<13?(e=85,n=120,t=55,r=80):o>=13&&o<18?(e=95,n=140,t=60,r=90):(e=100,n=130,t=60,r=90),a<e&&i<t?{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low BP "}:a>=e&&a<=n&&i>=t&&i<=r?{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal BP "}:a>140&&i>90?{colors:["#FECDCA","#B42318","#FDA19B"],value:"High BP"}:a<e?{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low BP (Using Systolic Only)"}:a>=e&&a<=n?{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal BP (Using Systolic Only)"}:{colors:["#FECDCA","#B42318","#FDA19B"],value:"High BP (Using Systolic Only)"}}return{}};return{BMI:u,BPStatus:p,vitalsData:c,patient:d,setTodayVitals:w,setBMI:O,updateBMI:x,updateBP:I,updateRate:S,getBloodPressureStatus:N,getTemperatureStatus:a=>{if(a&&m.vitalsTemperature(a)==null){let i,e;const t=new g().getAge();if(t<=1)i=35.5,e=37.4;else if(t>=1&&t<=18)i=35.5,e=37.4;else if(t>=19&&t<=64)i=35.5,e=37.4;else if(t>=65)i=35.5,e=37.4;else return{};if(a<i)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low Temperature "};if(a>=i&&a<=e)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal Temperature "};if(a>e)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High Temperature "}}return{}},getPulseRateStatus:a=>{if(m.vitalsPulseRate(a)==null){let i,e;const t=new g().getAge();if(t<=.25)i=100,e=160;else if(t>=.25&&t<=1)i=80,e=120;else if(t>=1&&t<=2)i=80,e=120;else if(t>=6&&t<=12)i=70,e=100;else if(t>=13&&t<=18)i=55,e=90;else if(t>=18)i=60,e=100;else return{};if(a<i)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low Pulse Rate "};if(a>=i&&a<=e)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal Pulse Rate "};if(a>e)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High Pulse Rate "}}return{}},getOxygenSaturationStatus:a=>{if(a&&m.vitalsOxygenSaturation(a)==null){if(a<95)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low oxygen saturation"};if(a>=95&&a<=100)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal oxygen saturation"}}return{}},getRespiratoryRateStatus:a=>{if(m.vitalsRespiratoryRate(a)==null){let i,e;const t=new g().getAge();if(t<=1)i=30,e=60;else if(t>=1&&t<3)i=24,e=40;else if(t>=3&&t<=6)i=22,e=34;else if(t>=6&&t<=12)i=18,e=30;else if(t>=12&&t<=18)i=12,e=16;else if(t>=19)i=12,e=20;else return{};if(a<i)return{colors:["#B9E6FE","#026AA2","#9ADBFE"],value:"Low respiratory rate"};if(a>=i&&a<=e)return{colors:["#DDEEDD","#016302","#BBDDBC"],value:"Normal respiratory rate"};if(a>e)return{colors:["#FECDCA","#B42318","#FDA19B"],value:"High respiratory rate"}}return{}},checkHeight:M,checkHeightServer:k}}export{q as a,J as u};
