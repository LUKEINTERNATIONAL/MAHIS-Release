System.register(["./ReportMixin.vue_vue_type_script_lang-legacy-nApUXceS.js","./BaseTableReport-legacy-w4CNiFnn.js","./lodash-legacy-pOOc9Efu.js","./vendor-legacy-CFX0KWSj.js","./index-legacy-DhOsa4Y5.js","./Export-legacy-C-XRYCPV.js"],function(e,t){"use strict";var r,s,i,o,n,a,l,d,c,u,p,g,f;return{setters:[e=>{r=e.t,s=e._,i=e.O},e=>{o=e.R},e=>{n=e.l},e=>{a=e.d,l=e.af,d=e.E,c=e.y,u=e.f,p=e.z,g=e.l},e=>{f=e._},null],execute:function(){const t=a({components:{ReportTemplate:o,IonPage:l},mixins:[s],data:()=>({title:"OPD diagnosis by address report",rows:[],reportService:{},columns:[[r.thTxt("Address"),r.thTxt("Diagnosis"),r.thTxt("Count")]]}),created(){this.fields=this.getDateDurationFields()},methods:{async init(e,t){this.reportService=new i,this.reportService.setStartDate(t.start_date),this.reportService.setEndDate(t.end_date),this.period=this.reportService.getDateIntervalPeriod(),this.rows=this.buildRows(await this.reportService.getDiagnosisByAddress())},totalDiagnosis:e=>Object.values(e).reduce((e,t)=>e+t,0),buildRows(e){const t=[];if(n.isEmpty(e))return t;for(const s in e)for(const i in e[s])t.push([r.td(i),r.td(s),r.td(e[s][i])]);return t}}});e("default",f(t,[["render",function(e,t,r,s,i,o){const n=d("report-template"),a=d("ion-page");return u(),c(a,null,{default:p(()=>[g(n,{title:e.title,rows:e.rows,fields:e.fields,columns:e.columns,period:e.period,reportPrefix:"Clinic",onReportConfiguration:e.init},null,8,["title","rows","fields","columns","period","onReportConfiguration"])]),_:1})}]]))}}});
