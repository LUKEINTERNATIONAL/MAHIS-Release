import{d as g,ao as o,b8 as F,D as U,G as B,M as D,J as y,aX as P,ca as M,aY as k,aW as C,aZ as V,W as T,U as z,T as $,an as W,ba as E,S as O,ah as L,aa as A,bG as G,E as s,y as H,f as R,z as d,l as i}from"./vendor-sxlzK-28.js";import{aK as v,F as J,T as j,S as c,t as n,C as p,aJ as q,u as x,i as K,_ as N}from"./index-Dm-K6ecT.js";import{D as X}from"./DemographicBar-CkfzSeHe.js";import{S as Y,p as Z,q as Q,r as tt,s as et,t as at,w as ot}from"./Stepper-D8syKj8G.js";import{f as u,c as r,a as m}from"./formatServerData-PUJKT65S.js";import{B as st}from"./BasicFooter-BPxfzXcV.js";import{_ as nt}from"./NextAppointment-CqHjF5VS.js";import{_ as it}from"./SetEncounter.vue_vue_type_script_lang-B9S060fj.js";import"./lodash-Dt8AsbQm.js";import"./apexcharts-BG8Kp1-k.js";import"./OPDOutcome-Cz37Rbvt.js";import"./patient_complaints_service-BB6XdGPI.js";import"./DashBox-Bg2uDMJv.js";import"./useExposeFromStandardForm-DJZMJea1.js";import"./BasicForm-DGnJqGnq.js";import"./DateInputField-D1Tg45A3.js";import"./drug_prescription_service-7ba7hqvX.js";import"./drug_service-DcwmEbGq.js";import"./Outcome-D6xaL7mA.js";import"./TreatmentPlan-DKSWdlqw.js";import"./previousDiagnosis-B_IQmcYq.js";import"./group_validation-DBH0ub2o.js";import"./FeatusModal-BDMB-e1x.js";import"./BasicCard-CQX7mMwP.js";import"./PastObstreticHistoryStore-InVwyiyM.js";import"./SaveProgressModal-CWzp6dq9.js";import"./lab_order-DCAtxYCp.js";import"./UpcomingFeature-CfdirdOY.js";import"./stages-Db1hOgWm.js";import"./ncd_appointment_service-CFgSFH6u.js";class rt extends v{constructor(t,a){super(t,57,a)}}class h extends v{constructor(t,a){super(t,151,a)}}const lt=g({name:"Home",mixins:[nt,it],components:{BasicFooter:st,IonContent:L,IonHeader:O,IonMenuButton:E,IonPage:W,IonTitle:$,IonToolbar:z,Toolbar:j,ToolbarSearch:J,DemographicBar:X,IonButton:T,IonCard:V,IonCardContent:C,IonCardHeader:k,IonCardSubtitle:M,IonCardTitle:P,IonAccordion:y,IonAccordionGroup:D,IonItem:B,IonLabel:U,IonModal:F,Stepper:Y},data(){return{wizardData:[{title:"Medical follow-up",class:"common_step",checked:"",icon:!1,disabled:!1,number:1,last_step:""},{title:"Persistent behaviours and symptoms",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Intimate partner violence(IPV)",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:"last_step"}],StepperData:[{title:"Medical follow-up",component:"MedicalFollowUp",value:"1"},{title:"Persistent behaviours and symptoms",component:"PersistentBehaviour",value:"2"},{title:"Intimate partner violence(IPV)",component:"Ipv",value:"3"}],isOpen:!1,iconsContent:K}},computed:{...o(ot,["medicalFollowUp"]),...o(at,["persistentBehaviour"]),...o(et,["physiologicalSymptoms"]),...o(tt,["ipv","ipv1","additionalCare","safety_assessment","physical_violence","beaten_pregnant","strangling","murder_threat","referrals","constant_jealous","woman_threatened"]),...o(Q,["fatalMovement"]),...o(x,["patient"])},mounted(){this.markWizard()},setup(){return{chevronBackOutline:G,checkmark:A}},methods:{markWizard(){},getSaveFunction(){},getFormatedData(e){return e.map(t=>t==null?void 0:t.data)},async saveData(){this.saveMedicalFollowUp(),this.savePersistentBehaviours(),this.saveIPV(),await q(),this.$router.push("contact")},async buildMedicalFollowUp(){return[...await u(this.medicalFollowUp),...await r(this.medicalFollowUp),...await m(this.medicalFollowUp)]},async validations(e,t){return t.every(a=>Z(e,a,this[a]))},async buildPersistentBehaviours(){return[...await u(this.persistentBehaviour),...await r(this.persistentBehaviour),...await m(this.persistentBehaviour)]},async buildCurrentPhysiologicalSymptoms(){return[...await r(this.physiologicalSymptoms)]},async buildIPV(){return[...await r(this.ipv),...await m(this.ipv)]},async buildFetalMovement(){return[...await u(this.fatalMovement)]},async saveMedicalFollowUp(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new rt(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create medical follow up encounter");if(!await t.saveObservationList(await this.buildMedicalFollowUp()))return n("Unable to create patient Medical follow up details!");p("Medical follow up has been created")}console.log(await this.buildMedicalFollowUp())},async savePersistentBehaviours(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new h(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create persistent behaviour encounter");if(!await t.saveObservationList(await this.buildPersistentBehaviours()))return n("Unable to create patient persistent behaviour details!");p("Persistent behaviour details have been created")}console.log(await this.buildPersistentBehaviours())},async saveIPV(){if(this.medicalFollowUp.length>0){const e=c.getUserID(),t=new h(this.patient.patientID,e);if(!await t.createEncounter())return n("Unable to create IPV encounter");if(!await t.saveObservationList(await this.buildIPV()))return n("Unable to create patient IPV details!");p("IPV details have been created")}console.log(await this.buildIPV())}}});function ct(e,t,a,l,pt,ut){const w=s("Toolbar"),b=s("DemographicBar"),f=s("Stepper"),S=s("ion-content"),I=s("BasicFooter"),_=s("ion-page");return R(),H(_,null,{default:d(()=>[i(w),i(S,{fullscreen:!0},{default:d(()=>[i(b),i(f,{stepperTitle:"Symptoms  and follow up",wizardData:e.wizardData,onUpdateStatus:e.markWizard,StepperData:e.StepperData,backUrl:e.userRoleSettings.url,backBtn:e.userRoleSettings.btnName,getSaveFunction:e.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),i(I,{onFinishBtn:t[0]||(t[0]=mt=>e.saveData())})]),_:1})}const Rt=N(lt,[["render",ct]]);export{Rt as default};
