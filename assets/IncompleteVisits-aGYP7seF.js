import{R as p,c5 as m,c4 as o,c6 as d,aE as n,aD as u}from"./index-fRmZltk6.js";import{d as f,r as s,O as h,f as _}from"./vendor-BiX5TTcL.js";import"./lodash-NJiRuGo9.js";import"./apexcharts-CpWilqEc.js";class b extends p{constructor(){super()}async generate(){const t=await this.getReport("incomplete_visits",{tool_name:"INCOMPLETE VISITS"});return Object.values(t!=null?t:{})}}const I=f({__name:"IncompleteVisits",setup(i){const t=s("-"),r=s([]),l=[{path:"arv_number",label:"ARV Number"},{path:"national_id",label:"NHID"},{path:"given_name",label:"First name",exportable:!1},{path:"family_name",label:"Last name",exportable:!1},{path:"gender",label:"Gender",formatter:m},{path:"birthdate",label:"Date of Birth",formatter:o},{path:"dates",label:"Date(s)",formatter:a=>a.map(o).join(", ")}];async function c(a){await n.show();try{const e=new b;e.setStartDate(a.dateRange.startDate),e.setEndDate(a.dateRange.endDate),e.setOccupation(a.occupation),t.value=e.getDateIntervalPeriod(),r.value=await e.generate()}catch(e){u("Unable to load report data"),console.error(e)}await n.hide()}return(a,e)=>(_(),h(d,{title:"Incomplete Visits Clinic Report","report-type":"Clinic",columns:l,rows:r.value,period:t.value,"use-date-range-filter":"","use-secure-export":"","show-indices":"",onGenerate:c},null,8,["rows","period"]))}});export{I as default};
