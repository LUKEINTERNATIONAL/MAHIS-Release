import{A as o,b as r,aa as h,u as l,ah as p}from"./index-C_B4etN5.js";import{d,aa as s}from"./vendor-Bx_IVmwz.js";import{R as u}from"./relations_service-xis0d_i1.js";const _=d({data:()=>({relationships:[],relationshipsData:[],patientGender:"male",filteredRelationships:[]}),computed:{...s(p,["guardianInformation","personInformation"]),...s(l,["patient"]),...s(r,["apiStatus"]),gender(){var e,t;return h(this.personInformation,"gender")||((t=(e=this.patient)==null?void 0:e.personInformation)==null?void 0:t.gender)}},watch:{$route:{async handler(e){await this.getRelationships()},immediate:!0,deep:!0}},methods:{async getRelationships(){var e;this.gender&&(this.relationshipsData=await o("relationship"),this.apiStatus&&this.relationshipsData.length!=((e=r().offlineRelationshipStatus)==null?void 0:e.total)&&(this.relationshipsData=await u.getRelations()),this.filterRelationships(),this.relationships=this.filteredRelationships.map(t=>[{name:t.b_is_to_a,id:t.relationship_type_id,trackByID:t.relationship_type_id+t.b_is_to_a}]).reduce((t,i)=>t.concat(i),[]))},filterRelationships(){var n;const e=["Brother","Father","Son","Grandfather","Grandson","Boyfriend","Stepfather","Stepson"],t=["Sister","Mother","Daughter","Grandmother","Granddaughter","Girlfriend","Stepmother","Stepdaughter"],i=["Spouse/Partner","Aunt/Uncle","Niece/Nephew","Doctor","Other","Patient","TB Contact Person","TB Patient","treatment suporter"];((n=this.relationshipsData)==null?void 0:n.length)>0&&(this.filteredRelationships=this.relationshipsData.filter(a=>this.gender==="M"?e.includes(a.a_is_to_b)||i.includes(a.a_is_to_b):this.gender==="F"?t.includes(a.a_is_to_b)||i.includes(a.a_is_to_b):!1))}}});export{_};
