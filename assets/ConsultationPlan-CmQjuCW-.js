import{d as Y,al as M,c4 as Oe,U as ce,T as de,am as ue,an as he,G as ve,S as pe,ao as Z,c7 as lt,X as ct,ap as me,ai as ge,E as w,e as P,f as O,k as B,l as m,z as _,F as Ve,L as dt,B as ut,aq as ht,ar as xe,m as x,A as G,O as vt,aD as pt,r as W,a as We,n as mt,b1 as gt,bY as ft,aj as L,c as bt,w as k,y as ae,u as V,dE as yt,ck as St,ct as _t,au as wt}from"./vendor-DowD5zKn.js";import{w as fe,ac as Ct,H as D,A as re,i as K,C as Ot,a1 as le,h as It,j as Tt,l as Ie,g as Ee,Z as N,az as Pt,S as j,V as X,u as Q,_ as be,B as ze,e as Je,O as Dt,x as n,y as A,$ as Te,P as Nt,aA as p,aB as Rt,R as Ht,a7 as Lt,o as kt,a6 as At,d as Bt,G as Mt,b as $t,T as Ft,aC as U,aD as Vt,k as ie,t as Pe,aE as xt,J as De}from"./index-Cu2JEMub.js";import{D as Wt}from"./DemographicBar-ysbb2FBV.js";import{a as Et,b as zt,c as Jt,D as qe,u as Ne,E as qt,P as Ut,d as Gt,_ as jt,e as Kt,f as ne,N as Re,g as He,C as Le,h as ke,M as Xt,s as Yt,i as Zt,j as Qt,k as es}from"./Stepper-D6pJ_4qK.js";import{i as ts,a as ss,L as as}from"./SvgDynamicColor-SqjviohE.js";import{a as is}from"./lab_order-CrBDUar0.js";import{v as Ae}from"./group_validation-BJZE-M8D.js";import{S as Be}from"./RiskAssessment-BeK8ZYrQ.js";import{u as E}from"./VitalsStore-BCNt-R5j.js";import{P as ns}from"./previousVitals-B5m9RS-E.js";import{l as Me}from"./lodash-Dt8AsbQm.js";import{b as os,f as oe,c as rs,a as ls}from"./formatServerData-BkXd7Ika.js";import{C as cs}from"./ConfirmPrinting-Bc6UlRUh.js";import{u as ds}from"./usePatientProfile-BnhEdAnJ.js";import"./app_encounter_service-DUFQOcer.js";import"./patient_complaints_service-DnsiMyiu.js";import"./ncd_appointment_service-Dt0gCCXX.js";import"./clinicalDaysStore-CfBpg_-z.js";import"./UpcomingFeature-CvTKImeG.js";import"./DatePicker.vue_vue_type_script_setup_true_lang-B8H-baea.js";import"./vitals_service-CyGV0bwE.js";import"./drug_service-CqyaNFux.js";import"./drug_prescription_service-DYM43-cK.js";import"./appointment_service-gS0OmJln.js";import"./FeatusModal-BDdgKNXA.js";import"./SaveProgressModal-jAWpIIiJ.js";import"./apexcharts-DlRg9dVi.js";import"./patient_registration_service-DrEyPCbm.js";import"./relationship_service-wV36x8Fu.js";import"./relations_service-D3QJZ3Yb.js";import"./FollowUpStore-qnzw7xbY.js";import"./BirthRegistration-RdRx8nTP.js";import"./OutcomeModal-D1kYqMwG.js";import"./SetRelationship.vue_vue_type_script_lang-ZZLTGhiV.js";import"./AddVillage-BUEBFDfQ.js";import"./diagnosis-C10lzk9Y.js";import"./NCDNumber-CXsEqEGO.js";import"./index-qMBNTLUk.js";const us=Y({name:"Menu",components:{CheckInConfirmationModal:Ct,IonContent:Z,IonHeader:pe,IonItem:ve,IonList:he,IonMenu:ue,IonTitle:de,IonToolbar:ce,DynamicButton:fe,DashBox:qe,LabModal:Jt,LabViewResultsModal:zt,SendToLabConfirmationModal:Et,DataTable:Oe},computed:{...M(Q,["patient"]),...M(Ne,["labResults"]),...M(X,["investigations"]),...M(Ie,["patientsWaitingForVitals","patientsWaitingForConsultation","patientsWaitingForLab","patientsWaitingForDispensation"]),hasEnterResults(){return this.listOrders.some(e=>e.btn&&e.btn.includes("enter_results"))}},props:{propOrders:{default:[]}},data(){return{tableData:[],options:{responsive:!0,select:!1,layout:{topStart:"buttons",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,buttons:[{text:" <b>+ Add other tests </b>",className:"add-test text-white",action:async()=>{await this.openEnterResultModal()}}]},header:["Lab Test","Specimen","Accession Number","Order Date","Result","Action"],iconsContent:K,valueNumericArray:[],obsDatetime:[],graphIcon:ss(["#006401"]),listIcon:ts(["#636363"]),displayGraph:!0,sendToLabModalOpen:!1,orders:[],userRoles:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],listOrders:[],listResults:[],hasPatientsWaitingForLab:!1,labResultsContent:"",listHeaderOrders:"",service:"",openModal:!1,openResultsModal:!1,series:[{name:"",data:[]}]}},setup(){return{checkmark:ge,pulseOutline:me}},async mounted(){await this.updateInvestigationWizard(),await this.setListData(),this.$nextTick(()=>{const e=this.$refs.dataTable.dt;e.columns.adjust().draw(),e.on("click",".result-btn",t=>{const o=t.target.getAttribute("data-id");this.openResultsForm(JSON.parse(o))}),e.on("click",".view-btn",t=>{const o=t.target.getAttribute("data-id");this.viewLabOrder(JSON.parse(o))}),e.on("click",".delete-btn",t=>{const o=t.target.getAttribute("data-id");this.voidLabOrder(JSON.parse(o),t)}),e.on("click",".order-btn",t=>{const o=t.target.getAttribute("data-id");this.saveTest(JSON.parse(o))})}),this.orders=this.propOrders,this.service=new Ut(this.patient.patientID),this.userRoles=await j.getUserRoles()},watch:{$route:{async handler(){await this.setListData()},deep:!0},patient:{async handler(){await this.setListData()},deep:!0}},methods:{async closeModal(){this.openModal=!1,await this.setListData()},async saveTest(e){const t=[{concept_id:await N.getConceptID(e.name,!0),name:e.name,specimen:e.specimen,reason:"Routine",specimenConcept:await N.getConceptID(e.specimen,!0)}];let a=(await Pt.buildLabOrders("",t))[0];a.order_date=a.date,a.specimen.name=await N.getConceptName(a.specimen.concept_id),a.tests[0].name=await N.getConceptName(a.tests[0].concept_id),this.patient.labOrders.unsaved.push(a),await le(this.patient)},async openEnterResultModal(){await Ee(qt,{class:"lab-results-modal"},!0,{title:"name"}),await this.setListData()},toggleSendToLabModal(){this.sendToLabModalOpen=!this.sendToLabModalOpen},async fetchPatientLabStageData(){const e=await It(),t=e?e.code:null;if(t){const o=await Tt.getPatientList("LAB",t);await Ie().refresh(t),this.patient.patientID&&(this.hasPatientsWaitingForLab=o.some(a=>a.patient_id===this.patient.patientID))}},async updateInvestigationWizard(){this.orders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=await this.orders.filter(t=>D.toStandardHisFormat(D.sessionDate())===D.toStandardHisFormat(t.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},dismiss(){ct.dismiss()},async voidLabOrder(e,t){var a,s,c;if(await Ot("Do you want to delete ".concat(e.tests[0].name," ?"),t)){const i=JSON.parse(JSON.stringify(this.patient));i.labOrders.saved.some(h=>{var g,y;return h.order_date===e.order_date&&((g=h==null?void 0:h.tests[0])==null?void 0:g.name)==((y=e==null?void 0:e.tests[0])==null?void 0:y.name)})?(i.labOrders.saved=this.removeTestByNameAndDate(i.labOrders.saved,e.tests[0].name,e.order_date),(c=(s=(a=i.labOrders)!=null?a:i.labOrders={}).voided)!=null||(s.voided=[]),i.labOrders.voided.push({orderId:e.id,reason:"Mistake entry"})):i.labOrders.unsaved=this.removeTestByNameAndDate(i.labOrders.unsaved,e.tests[0].name,e.date),await le(i)}await this.setListData()},removeTestByNameAndDate(e,t,o){return e.filter(a=>(a.order_date===o&&(a.tests=a.tests.filter(s=>s.name!==t)),a.tests.length>0))},async openResultsForm(e){const t=await re("testResultIndicators",{whereClause:{test_type_id:e.concept_id}}),o=[e,{validationStatus:"",data:{rowData:[{colData:[]}]}}];t.forEach(s=>{let c={inputHeader:s.name,value:"",colSize:3,id:s.concept_id,name:s.name,required:!0,eventType:"input",alertsErrorMassage:""};if(s.name=="RBS"&&(c={inputHeader:s.name,value:"",colSize:3,id:s.concept_id,name:s.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),s.name=="FBS"&&(c={inputHeader:s.name,value:"",colSize:3,id:s.concept_id,name:s.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),s.name=="MRDT"||s.name=="Tuberculosis program"||s.name=="Vdrl"||s.name=="Hepatitis B"||s.name=="Lam"||s.name=="CrAg"||s.name=="CD4 count"||s.name=="Leukocytes"||s.name=="Protein"||s.name=="Nitrite"||s.name=="Urine Ketones"||s.name=="HIV test"){let i=[];(s.name=="MRDT"||s.name=="Vdrl"||s.name=="Hepatitis B"||s.name=="CrAg"||s.name=="Lam")&&(i=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),s.name=="Tuberculosis program"&&(i=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),s.name=="CD4 count"&&(i=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(s.name=="Leukocytes"||s.name=="Protein"||s.name=="Nitrite"||s.name=="Ketones"||s.name=="Urine Ketones")&&(i=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),s.name=="HIV test"&&(i=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),c={inputHeader:s.name,icon:K.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:i,id:s.concept_id,idName:"district_id"}}o[1].data.rowData[0].colData.push(c)}),Ne().setLabResults(o),this.openModal=!0,this.orders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async viewLabOrder(e){this.labResultsContent=e,this.openResultsModal=!0},async setListData(){this.orders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=this.generateListItems(this.orders,"order"),t=[["FBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"FBS",specimen:"Blood"}),"'>Order Test</button> ")],["HbA1c","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"HbA1c",specimen:"Blood"}),"'>Order Test</button> ")],["RBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"RBS",specimen:"Blood"}),"'>Order Test</button> ")]],o=t.filter(c=>!e.some(i=>i[0]===c[0])),a=e.filter(c=>t.some(i=>i[0]===c[0])),s=e.filter(c=>!a.some(i=>i[0]===c[0]));this.tableData=[...a,...o,...s],await this.updateInvestigationWizard(),Oe.use(lt)},generateListItems(e,t){return e.length>0?e.flatMap(o=>o.tests.flatMap(a=>{var h,g,y,T;const s='<button class="btn btn-outline-success btn-sm result-btn" data-id=\''.concat(JSON.stringify(a),"'>Enter Result</button> "),c='<button class="btn btn-outline-secondary btn-sm attach-btn" data-id=\''.concat(JSON.stringify(a),"'>").concat(this.iconsContent.attach2,"</button>"),i='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(a),"'>").concat(this.iconsContent.view2,"</button> ");let l=s+c;((h=a==null?void 0:a.result)==null?void 0:h.length)==1?l=(a==null?void 0:a.result)!=null?((g=a==null?void 0:a.result[0])==null?void 0:g.value_modifier)+((y=a==null?void 0:a.result[0])==null?void 0:y.value):null:((T=a==null?void 0:a.result)==null?void 0:T.length)>1&&(a==null||a.result,l=i);let d="";return o!=null&&o.accession_number?d='<button class="btn btn-outline-secondary btn-sm" data-id=\''.concat(JSON.stringify(o),"'>").concat(this.iconsContent.print2,"</button>"):l="",[[a==null?void 0:a.name,o==null?void 0:o.specimen.name,(o==null?void 0:o.accession_number)||"",D.toStandardHisFormat(o==null?void 0:o.order_date),l,d+'\n                                <button class="btn btn-outline-danger btn-sm delete-btn" data-id=\''.concat(JSON.stringify(o),"'>").concat(this.iconsContent.delete2,"</button>\n                                ")]]})):[]}}}),hs={class:"container"},vs={class:"table-responsive"};function ps(e,t,o,a,s,c){const i=w("DataTable"),l=w("LabViewResultsModal"),d=w("LabModal");return O(),P("div",hs,[B("div",vs,[m(i,{ref:"dataTable",options:e.options,data:e.tableData,class:"display nowrap",width:"100%"},{default:_(()=>[B("thead",null,[B("tr",null,[(O(!0),P(Ve,null,dt(e.header,h=>(O(),P("th",{key:h},ut(h),1))),128))])])]),_:1},8,["options","data"])]),m(l,{popoverOpen:e.openResultsModal,content:e.labResultsContent,onCloseModal:t[0]||(t[0]=h=>e.openResultsModal=!1)},null,8,["popoverOpen","content"]),m(d,{popoverOpen:e.openModal,onSaved:e.closeModal,onCloseModal:t[1]||(t[1]=h=>e.openModal=!1)},null,8,["popoverOpen","onSaved"])])}const ms=be(us,[["render",ps],["__scopeId","data-v-8f2dd07b"]]),gs=Y({name:"Menu",mixins:[Gt],components:{IonContent:Z,IonHeader:pe,IonItem:ve,IonList:he,IonMenu:ue,IonTitle:de,IonToolbar:ce,IonInput:xe,IonPopover:ht,DashBox:qe,SelectionPopover:Dt,BasicInputField:Je,BasicForm:ze,List:as,DynamicButton:fe,labOrderResults:ms},data(){return{segmentContent:"Lab Investigations",iconsContent:K,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:ge,pulseOutline:me}},computed:{...M(X,["investigations"]),...M(Q,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(e){this.segmentContent=e},async getTests(){const e=await re("testTypes");n(this.investigations,"test","multiSelectData",e)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=await this.labOrders.filter(t=>D.toStandardHisFormat(D.sessionDate())===D.toStandardHisFormat(t.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),X().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return Ae(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(n(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(n(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){Ae(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(e,t){for(let o of t)for(let a of o.tests)if(a.name===e)return!0;return!1},async saveTest(){await new is().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await N.getConceptID(this.inputFields[1].value.name,!0)}]),n(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(e){if(e.inputHeader=="Test"&&this.checkTest(),n(this.investigations,"specimen","alertsErrorMassage",""),e.inputHeader=="Test"&&e.value){const t=await re("specimens");this.specimen=await N.getConceptSet(e.value.name,"",{names:t.map(o=>o.name)}),this.specimen.length==1?(n(this.investigations,"specimen","value",this.specimen[0]),n(this.investigations,"specimen","disabled",!0)):(n(this.investigations,"specimen","value",""),n(this.investigations,"specimen","disabled",!1)),n(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(e){return await this.labOrders.filter(t=>t.name.toLowerCase().includes(e.toLowerCase()))},async filterSpecimen(e){var t;return(t=this.specimen[0])!=null&&t.name&&e?await this.specimen.filter(o=>o==null?void 0:o.name.toLowerCase().includes(e.toLowerCase())):[]},setTest(e){this.selectedText=e.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=e.name:this.investigations[0].data.rowData[0].colData[1].value=e.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),fs={class:"background"},bs={key:0},ys={key:1},Ss={key:2},_s={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},ws={key:3},Cs={key:4};function Os(e,t,o,a,s,c){const i=w("ion-label"),l=w("ion-segment-button"),d=w("ion-segment"),h=w("VisitsHistory"),g=w("labOrderResults");return O(),P("div",fs,[m(d,{value:e.segmentContent,style:{"margin-top":"5px"}},{default:_(()=>[m(l,{value:"Lab Investigations",onClick:t[0]||(t[0]=y=>e.setSegmentContent("Lab Investigations"))},{default:_(()=>[m(i,null,{default:_(()=>t[3]||(t[3]=[G("Lab Investigations")])),_:1,__:[3]})]),_:1}),m(l,{value:"Radiology Investigation",onClick:t[1]||(t[1]=y=>e.setSegmentContent("Radiology Investigation"))},{default:_(()=>[m(i,null,{default:_(()=>t[4]||(t[4]=[G("Radiology Investigation")])),_:1,__:[4]})]),_:1}),m(l,{value:"Other Investigation",onClick:t[2]||(t[2]=y=>e.setSegmentContent("Other Investigation"))},{default:_(()=>[m(i,null,{default:_(()=>t[5]||(t[5]=[G("Other Investigation")])),_:1,__:[5]})]),_:1})]),_:1},8,["value"]),e.segmentContent=="Radiology Investigation"?(O(),P("div",bs,[m(h)])):x("",!0),e.segmentContent=="Other Investigation"?(O(),P("div",ys)):x("",!0),e.segmentContent=="Lab Investigations"?(O(),P("div",Ss,[B("div",_s,[B("span",null,[m(g,{propOrders:e.labOrders},null,8,["propOrders"])])])])):x("",!0),e.segmentContent=="Radiology Investigation"?(O(),P("div",ws)):x("",!0),e.segmentContent=="Other Investigation"?(O(),P("div",Cs)):x("",!0)])}const $e=be(gs,[["render",Os],["__scopeId","data-v-0fe9251a"]]),Is=Y({mixins:[jt],components:{IonContent:Z,IonHeader:pe,IonItem:ve,IonList:he,IonMenu:ue,IonTitle:de,IonToolbar:ce,IonInput:xe,BasicInputField:Je,BasicForm:ze,PreviousVitals:ns},data(){return{iconsContent:K,saveBtnStatus:{},TempStatus:{},PulseStatus:{},RespiratoryStatus:{},OxygenStatus:{},vValidations:"",hasValidationErrors:[],vitalsInstance:{},validationStatus:{heightWeight:!1,bloodPressure:!1}}},watch:{$route:{async handler(){this.vitalsData=this.vitals,await this.validateRowData("onload")},deep:!0},"patient.ID":{async handler(e,t){e!==t&&(this.cleanVitalForm(),this.checkIfSamePatientInContext(),await this.checkHeight())}}},computed:{...M(Q,["patient"]),...M(E,["vitals"])},async mounted(){this.checkIfSamePatientInContext(),this.vitalsData=this.vitals,await this.checkHeight(),await this.validateRowData("onload")},setup(){return{checkmark:ge,pulseOutline:me}},methods:{checkIfSamePatientInContext(){const e=E();e.current_patient.ID!=this.patient.ID&&(this.cleanVitalForm(),e.setCurrentPatient(this.patient))},navigationMenu(e){pt.close(),this.$router.push(e)},cleanVitalForm(){const e=E();e.setVitals(e.getInitialVitals(this.patient.ID))},async validationController(e){var t,o,a,s,c,i,l,d,h,g,y,T,$,z;((t=e==null?void 0:e.col)==null?void 0:t.name)=="Height Not Done"&&e.col.checked?(p(this.vitals,"Height (cm)","displayNone",!1),n(this.vitals,"Height (cm)","disabled",!0),n(this.vitals,"Height (cm)","inputHeader","Height"),n(this.vitals,"Height (cm)","value",""),this.validationStatus.heightWeight=!1):((o=e==null?void 0:e.col)==null?void 0:o.name)=="Height Not Done"&&(p(this.vitals,"Height (cm)","displayNone",!0),p(this.vitals,"Height (cm)","value",""),n(this.vitals,"Height (cm)","disabled",!1),n(this.vitals,"Height (cm)","inputHeader","Height*"),this.validationStatus.heightWeight=!0),((a=e==null?void 0:e.col)==null?void 0:a.name)=="Weight Not Done"&&e.col.checked?(p(this.vitals,"Weight","displayNone",!1),n(this.vitals,"Weight","disabled",!0),n(this.vitals,"Weight","inputHeader","Weight"),n(this.vitals,"Weight","value",""),this.validationStatus.heightWeight=!1):((s=e==null?void 0:e.col)==null?void 0:s.name)=="Weight Not Done"&&(p(this.vitals,"Weight","displayNone",!0),p(this.vitals,"Weight","value",""),n(this.vitals,"Weight","disabled",!1),n(this.vitals,"Weight","inputHeader","Weight*"),this.validationStatus.heightWeight=!0),((c=e==null?void 0:e.col)==null?void 0:c.name)=="Blood Pressure Not Done"&&e.col.checked?(p(this.vitals,"Blood Pressure","displayNone",!1),n(this.vitals,"Systolic","disabled",!0),n(this.vitals,"Diastolic","disabled",!0),n(this.vitals,"Systolic","inputHeader","Systolic Pressure"),n(this.vitals,"Diastolic","inputHeader","Diastolic pressure"),n(this.vitals,"Systolic","value",""),n(this.vitals,"Diastolic","value",""),this.validationStatus.bloodPressure=!1):((i=e==null?void 0:e.col)==null?void 0:i.name)=="Blood Pressure Not Done"&&(p(this.vitals,"Blood Pressure","displayNone",!0),p(this.vitals,"Blood Pressure","value",""),n(this.vitals,"Systolic","disabled",!1),n(this.vitals,"Diastolic","disabled",!1),n(this.vitals,"Systolic","inputHeader","Systolic Pressure*"),n(this.vitals,"Diastolic","inputHeader","Diastolic pressure*"),n(this.vitals,"Systolic","value",""),n(this.vitals,"Diastolic","value",""),this.validationStatus.bloodPressure=!0),((l=e==null?void 0:e.col)==null?void 0:l.name)=="Pulse Rate Not Done"&&e.col.checked?(p(this.vitals,"Pulse","displayNone",!1),n(this.vitals,"Pulse","disabled",!0),n(this.vitals,"Pulse","inputHeader","Pulse rate"),n(this.vitals,"Pulse","value",""),this.validationStatus.bloodPressure=!1):((d=e==null?void 0:e.col)==null?void 0:d.name)=="Pulse Rate Not Done"&&(p(this.vitals,"Pulse","displayNone",!0),p(this.vitals,"Pulse","value",""),n(this.vitals,"Pulse","disabled",!1),n(this.vitals,"Pulse","inputHeader","Pulse rate*"),n(this.vitals,"Pulse","value",""),this.validationStatus.bloodPressure=!0),((h=e==null?void 0:e.col)==null?void 0:h.name)=="Temperature Not Done"&&e.col.checked?(p(this.vitals,"Temperature","displayNone",!1),n(this.vitals,"Temperature","disabled",!0),n(this.vitals,"Temperature","inputHeader","Temperature"),n(this.vitals,"Temperature","value",""),this.validationStatus.bloodPressure=!1):((g=e==null?void 0:e.col)==null?void 0:g.name)=="Temperature Not Done"&&(p(this.vitals,"Temperature","displayNone",!0),p(this.vitals,"Temperature","value",""),n(this.vitals,"Temperature","disabled",!1),n(this.vitals,"Temperature","inputHeader","Temperature*"),n(this.vitals,"Temperature","value",""),this.validationStatus.bloodPressure=!0),((y=e==null?void 0:e.col)==null?void 0:y.name)=="Respiratory rate Not Done"&&e.col.checked?(p(this.vitals,"Respiratory rate","displayNone",!1),n(this.vitals,"Respiratory rate","disabled",!0),n(this.vitals,"Respiratory rate","inputHeader","Respiratory rate"),n(this.vitals,"Respiratory rate","value",""),this.validationStatus.bloodPressure=!1):((T=e==null?void 0:e.col)==null?void 0:T.name)=="Respiratory rate Not Done"&&(p(this.vitals,"Respiratory rate","displayNone",!0),p(this.vitals,"Respiratory rate","value",""),n(this.vitals,"Respiratory rate","disabled",!1),n(this.vitals,"Respiratory rate","inputHeader","Respiratory rate*"),n(this.vitals,"Respiratory rate","value",""),this.validationStatus.bloodPressure=!0),(($=e==null?void 0:e.col)==null?void 0:$.name)=="Oxygen saturation Not Done"&&e.col.checked?(p(this.vitals,"SAO2","displayNone",!1),n(this.vitals,"SAO2","disabled",!0),n(this.vitals,"SAO2","inputHeader","Oxygen saturation"),n(this.vitals,"SAO2","value",""),this.validationStatus.bloodPressure=!1):((z=e==null?void 0:e.col)==null?void 0:z.name)=="Oxygen saturation Not Done"&&(p(this.vitals,"SAO2","displayNone",!0),p(this.vitals,"SAO2","value",""),n(this.vitals,"SAO2","disabled",!1),n(this.vitals,"SAO2","inputHeader","Oxygen saturation*"),n(this.vitals,"SAO2","value",""),this.validationStatus.bloodPressure=!0)},async checkHeight(){var s,c,i,l;const e=[...((c=(s=this.patient)==null?void 0:s.vitals)==null?void 0:c.saved)||[],...((l=(i=this.patient)==null?void 0:i.vitals)==null?void 0:l.unsaved)||[]],t=await Te(e,"value_numeric",5090),o=await Te(e,"obs_datetime",5090),a=new Nt;t&&(vt(o).diff(a.getBirthdate(),"year")<18||a.getAge()<18||(n(this.vitals,"Height (cm)","disabled",!0),n(this.vitals,"Height (cm)","value",t),n(this.vitals,"Height (cm)","buildConceptIgnore",!0),p(this.vitals,"Height (cm)","displayNone",!0),Rt(this.vitals,"Height Not Done","displayNone",!0),p(this.vitals,"Height (cm)","value","")))},async validateRowData(e){if(e!="onload"){await this.validationController(e);const t=A(this.vitals,"Height (cm)","value"),o=A(this.vitals,"Weight","value"),a=A(this.vitals,"Systolic","value"),s=A(this.vitals,"Diastolic","value"),c=A(this.vitals,"Temperature","value"),i=A(this.vitals,"Pulse","value"),l=A(this.vitals,"Respiratory rate","value"),d=A(this.vitals,"SAO2","value");await this.setBMI(t,o),await this.updateBP(a,s);const h=this.getPulseRateStatus(i);await this.updateRate("pulse",i," BMP",h,4);const g=this.getTemperatureStatus(c);this.updateRate("temp",c,"°C",g,4);const y=this.getRespiratoryRateStatus(l);this.updateRate("respiratory",l,"BMP",y,6);const T=this.getOxygenSaturationStatus(d);this.updateRate("oxygen",d,"%",T,6)}}}}),Ts={class:"ion-padding",slot:"content"};function Ps(e,t,o,a,s,c){const i=w("basic-form"),l=w("ion-label"),d=w("ion-item"),h=w("PreviousVitals"),g=w("ion-accordion"),y=w("ion-accordion-group"),T=w("ion-row");return O(),P(Ve,null,[m(i,{contentData:e.vitals,"onUpdate:inputValue":t[0]||(t[0]=$=>e.validateRowData($))},null,8,["contentData"]),m(T,null,{default:_(()=>[m(y,{ref:"accordionGroup",class:"previousView"},{default:_(()=>[m(g,{value:"first","toggle-icon-slot":"start",style:{"border-radius":"10px","background-color":"#fff"}},{default:_(()=>[m(d,{slot:"header",color:"light"},{default:_(()=>[m(l,{class:"previousLabel"},{default:_(()=>t[1]||(t[1]=[G("Previous measurements")])),_:1,__:[1]})]),_:1}),B("div",Ts,[m(h)])]),_:1})]),_:1},512)]),_:1})],64)}const Fe=be(Is,[["render",Ps],["__scopeId","data-v-a052fe15"]]),Ds=e=>{const t=W(""),o=(i,l)=>{i%1===0&&(t.value=i)},a=()=>{t.value===0&&console.log("First Tab"),console.log("All Tabs")},s=i=>{const l=document.getElementsByClassName("form-wizard-vue");if(!l.length)return;const d=l[0].getElementsByClassName("fw-body-list");if(!d.length)return;const h=d[0].querySelector(".fw-custom-title");h&&h.remove();const g=document.createElement("li");g.className="fw-custom-title",g.textContent=i||e,g.style.cssText="\n            text-align: center;\n            font-weight: 700;\n            font-size: 18px;\n            flex-grow: 0.08;\n            padding: 10px 0;\n        ",d[0].insertBefore(g,d[0].firstChild)},c=()=>{mt(()=>{const i=document.querySelector(".fw-footer-left .fw-btn");if(console.log("🚀 ~ changeBtnIconPosition ~ button:",i),!i)return;const l=i.querySelector("span"),d=i.querySelector("i");!l||!d||(i.removeChild(l),i.removeChild(d),i.appendChild(d),i.appendChild(l))})};return We(()=>{s()}),{currentTabIndex:t,onChangeCurrentTab:o,onTabBeforeChange:a,changeBtnIconPosition:c,addHeaderAboveList:s}},Ns={style:{width:"88vw",margin:"0 auto","margin-top":"10px"}},Rs={class:"back_profile"},ga=Y({__name:"ConsultationPlan",setup(e,{expose:t}){const{onTabBeforeChange:o,onChangeCurrentTab:a,currentTabIndex:s}=Ds("Consultation Plan"),{printVisitSummary:c}=ds(),i=gt(),l=ft();W([]),W([]),W(!1);const d=W(!0),h=E(),g=Q(),y=X(),T=Ht(),$=Lt(),z=Kt(),J=kt();At();const Ue=Bt(),Ge=ne(),je=Mt(),{patient:C}=L(g),{vitals:ee}=L(h),{investigations:Ke}=L(y),{diagnosis:Xe}=L(T),{substance:ye}=L(Ue),{selectedNCDMedicationList:Se}=L(z),{FootScreening:Ye,visualScreening:Ze,cvScreening:Qe}=L(Ge),{sessionDate:_e}=L(je),{apiStatus:Hs}=L($t()),et=()=>{i.push("patientProfile")},te=()=>J.NCDActivities.map(r=>({title:r,icon:""})),S=W(te());bt(()=>s.value!==void 0?s.value:0);const tt=()=>{var v;if(!S.value||S.value.length===0)return console.log("Tabs not yet initialized"),null;const r=s.value>=0&&s.value<S.value.length?s.value:0,u=(v=S.value[r])==null?void 0:v.title;switch(console.log("Current tab:",u,"Index:",r),u){case"Vital Signs":return Fe;case"Risk Assessment":return Be;case"Investigations":return $e;case"Diagnosis":return ke;case"Complications Screening":return Le;case"Treatment Plan":return He;case"Next Appointment":return Re;default:if(console.log("No matching component found for tab:",u),J.NCDActivities.length>0){const b=J.NCDActivities[0];switch(console.log("Falling back to first activity:",b),b){case"Vital Signs":return Fe;case"Risk Assessment":return Be;case"Investigations":return $e;case"Diagnosis":return ke;case"Complications Screening":return Le;case"Treatment Plan":return He;case"Next Appointment":return Re}}return null}},se=()=>{d.value=!1,setTimeout(()=>{s.value=0,d.value=!0},0)},we=()=>{const r=E();r.setVitals(r.getInitialVitals(C.value.ID))},R=async()=>{var v,b;const r=A(_e.value,"sessionDate","value")||D.sessionDate(),u=U("vitals");for(let f=0;f<S.value.length;f++){const H=S.value[f];if(H.title==="Vital Signs")S.value[f].icon=q(r,u)?"check":"";else if(H.title==="Risk Assessment"){const I=U("substanceAbuse");S.value[f].icon=q(r,I)?"check":""}else if(H.title==="Investigations"){const I=(b=(v=C==null?void 0:C.value)==null?void 0:v.labOrders)==null?void 0:b.saved,F=I==null?void 0:I.filter(rt=>D.toStandardHisFormat(r)===D.toStandardHisFormat(rt.order_date));S.value[f].icon=(F==null?void 0:F.length)>0?"check":""}else if(H.title==="Diagnosis"){const I=U("diagnosis");S.value[f].icon=q(r,I)?"check":""}else if(H.title==="Complications Screening"){const I=U("screening");S.value[f].icon=q(r,I)?"check":""}else H.title==="Treatment Plan"&&(Se.value.length>0?S.value[f].icon=Xt()?"check":"":S.value[f].icon="")}},q=(r,u)=>{const v=new Date(r);return v.setHours(0,0,0,0),u.some(b=>{const f=new Date(b.obs_datetime);return f.setHours(0,0,0,0),f.getTime()===v.getTime()})},st=async()=>{var v;const r=await os(ee.value),u=await oe(ee.value);if(u.length>0||r.length>0){let b=(v=C.value)==null?void 0:v.vitals;b.unsaved=[...b.unsaved,...u,...r],ie("Vitals saved successful")}else Pe("Vitals not saved")},at=async()=>{var f,H,I,F;const r=[],u=await oe(Ze.value),v=await rs(Ye.value),b=await oe(Qe.value);u.length>0&&r.push({concept_id:await N.getConceptID("Visual acuity",!0),value_text:"visual acuity test",obs_datetime:N.getSessionDate(),child:u}),v.length>0&&r.push({concept_id:await N.getConceptID("Foot check",!0),value_text:"foot screening",obs_datetime:N.getSessionDate(),child:v}),b.length>0&&r.push(...b),r.length>0&&((F=(I=(H=(f=C.value).screening)!=null?H:f.screening={}).unsaved)!=null||(I.unsaved=[]),C.value.screening.unsaved.push(...r),ie("Complications saved successfully"))},it=async()=>{var u,v,b,f;(f=(b=(v=(u=C.value).substanceAbuse)!=null?v:u.substanceAbuse={}).unsaved)!=null||(b.unsaved=[]);const r=await ls(ye.value);r.length>0?(C.value.substanceAbuse.unsaved.push(...r),ie("Substance abuse saved successfully")):Pe("Substance abuse not saved")},nt=async()=>{j.getUserID(),C.value.patientID;const r=xt();if(!Me.isEmpty(r.selectedMedicalAllergiesList)){const u=De(),v=r.selectedMedicalAllergiesList.map(b=>({concept_id:985,obs_datetime:j.getSessionDate(),value_coded:b.concept_id,location_id:u.facilityLocation.code}));Yt(v),r.clearSelectedMedicalAllergiesList()}if(!Me.isEmpty($.nonPharmalogicalTherapyAndOtherNotes)){const u=De(),v=[{concept_id:2688,obs_datetime:j.getSessionDate(),value_text:$.nonPharmalogicalTherapyAndOtherNotes,location_id:u.facilityLocation.code}];await Zt(v)}await Qt(),await es().saveNonPharmaTherapyPatientData()},Ce=async()=>{await st(),await nt(),await it(),await at(),await Vt(),await le(C.value),await ot(),i.push("patientProfile")},ot=async()=>{await Ee(cs,{class:"small-confirm-modal "})!=="dismiss"&&await c()};return We(async()=>{if(J.NCDActivities.length===0){i.push("patientProfile");return}ne().resetScreening(),S.value=te(),await R(),(s.value===void 0||s.value<0)&&(s.value=0,console.log("Setting initial tab index to 0"))}),k(ee,async()=>{await R()},{deep:!0}),k(C,async()=>{ne().resetScreening(),await R()},{deep:!0}),k(_e,async()=>{await R()},{deep:!0}),k(Ke,async()=>{await R()},{deep:!0}),k(Xe,async()=>{await R()},{deep:!0}),k(ye,async()=>{await R()},{deep:!0}),k(Se,async()=>{await R()},{deep:!0}),k(l,async r=>{se(),we(),S.value=te()},{deep:!0}),k(C,async(r,u)=>{r.ID!=u.ID&&(se(),we())},{deep:!0}),t({saveData:Ce,markWizard:R,refreshWizard:se}),(r,u)=>(O(),ae(V(wt),null,{default:_(()=>[m(Ft),m(V(Z),{fullscreen:!0},{default:_(()=>[m(Wt),B("div",Ns,[d.value?(O(),ae(V(yt),{key:0,ref:"wizard","vertical-tabs":"","navigable-tabs":"","scrollable-tabs":"",startIndex:0,doneButton:{text:"Finish",icon:"check",hideText:!1,hideIcon:!1,disabled:!1},"custom-tabs":S.value,beforeChange:V(o),onChange:V(a),"onComplete:wizard":u[1]||(u[1]=v=>Ce())},{default:_(()=>[B("div",null,[B("div",Rs,[m(fe,{name:"Back to profile",iconSlot:"start",fill:"clear",icon:V(St),"font-weight":"600",onClick:u[0]||(u[0]=v=>et())},null,8,["icon"])])]),(O(),ae(_t(tt())))]),_:1},8,["custom-tabs","beforeChange","onChange"])):x("",!0)])]),_:1})]),_:1}))}});export{ga as default};
