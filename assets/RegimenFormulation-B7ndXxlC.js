import{c7 as p,cl as r,c8 as u,c5 as d,c4 as g,c6 as R,aF as n,aE as f}from"./index-B7bZSySF.js";import{R as b}from"./regimen_report_service-Hls1aRfq.js";import{R as _,b as h}from"./regimens-Dknk55PA.js";import{d as w,r as i,c as F,O as v,f as D}from"./vendor-D0D29_A_.js";import"./lodash-NJiRuGo9.js";import"./apexcharts-yV10MRMc.js";const A=w({__name:"RegimenFormulation",setup(S){const a=i("-"),o=i([]),s=[p("patient_id")],l=[{path:"arv_number",label:"ARV Number",preSort:u,initialSort:!0},{path:"gender",label:"Gender",formatter:d},{path:"birthdate",label:"Date of Birth",formatter:g},{path:"regimen",label:"Reg. name"},{path:"drugs",label:"Formulation"}],c=F(()=>[{id:"regimen",label:"Select Regimen",type:"select",options:r(_)},{id:"formulation",label:"Formulation",type:"select",options:r(h)}]);async function m(t){await n.show();try{const e=new b;e.setStartDate(t.dateRange.startDate),e.setEndDate(t.dateRange.endDate),e.setOccupation(t.occupation),a.value=e.getDateIntervalPeriod(),o.value=await e.getRegimenFormulationReport(t.regimen,t.formulation)}catch(e){f("Unable to load report data"),console.error(e)}await n.hide()}return(t,e)=>(D(),v(R,{title:"Regimen Formulation: Patient Level Clinic Report","report-type":"Clinic",columns:l,rows:o.value,period:a.value,"row-action-buttons":s,"custom-filters":c.value,"use-date-range-filter":"",onGenerate:m},null,8,["rows","period","custom-filters"]))}});export{A as default};
