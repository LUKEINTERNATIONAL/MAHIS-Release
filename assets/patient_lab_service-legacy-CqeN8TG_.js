System.register(["./app_encounter_service-legacy-CplDL468.js","./index-legacy-CPVrS3n3.js"],function(e,t){"use strict";var r,n,s;return{setters:[e=>{r=e.A},e=>{n=e.aA,s=e.a3}],execute:function(){e("P",class extends r{constructor(e){super(e,57)}getOrders(e){return n.getOrders(this.patientID,{status:e})}voidOrder(e,t){return n.void(`lab/orders/${e}`,{reason:t})}updateOrderSpecimen(e,t){return n.putJson(`lab/orders/${e}`,{specimen:{concept_id:t}})}printSpecimenLabel(e){return(new s).printLbl(`lab/labels/order?order_id=${e}`)}async placeOrder(e){let t=[];const r=await this.createEncounter();if(!r)throw"Unable to create encounter";const s={encounter_id:r.encounter_id,date:this.date,...e};return s.requesting_clinician||(s.requesting_clinician=n.getUserName()),t=e.combine_tests?[s]:s.tests.map(e=>{const t={...s};return t.tests=[e],t}),n.postJson("lab/orders",{orders:t})}static async getSpecimensForTests(e){const t=await Promise.all(e.map(e=>n.getSpecimens(e.name)));return this.getCommonSpecimens(t)}static getCommonSpecimens(e){const t={},r=[];e.forEach(e=>{e.forEach(({name:e,...r})=>{const n={name:e,...r};t[e]?t[e].push(n):t[e]=[n]})});for(const n in t)t[n].length>=e.length&&r.push(t[n][0]);return r}})}}});
