System.register(["./ReportMixin.vue_vue_type_script_lang-legacy-D7_fHeG0.js","./BaseTableReport-legacy-B6k-wl2K.js","./index-legacy-Db6qwARs.js","./vendor-legacy-CJLpW7UD.js","./lodash-legacy-pOOc9Efu.js","./Export-legacy-CN7IIwq_.js","./apexcharts-legacy-KZZvWaHO.js"],function(t,e){"use strict";var i,r,s,a,n,o,l,d,c,p,u,h,g;return{setters:[t=>{i=t.t,r=t._,s=t.O},t=>{a=t.R},t=>{n=t.H,o=t._},t=>{l=t.d,d=t.ae,c=t.H,p=t.N,u=t.f,h=t.J,g=t.l},null,null,null],execute:function(){const e=l({components:{ReportTemplate:a,IonPage:d},mixins:[r],data:()=>({title:"Clients / Patients with NIDs",rows:[],reportService:{},columns:[[i.thTxt("NID"),i.thTxt("First Name"),i.thTxt("Last Name"),i.thTxt("Gender"),i.thTxt("DOB"),i.thTxt("Date Reg."),i.thTxt("Address")]]}),created(){this.fields=this.getDateDurationFields()},methods:{async init(t,e){this.reportService=new s,this.reportService.setStartDate(e.start_date),this.reportService.setEndDate(e.end_date),this.period=this.reportService.getDateIntervalPeriod(),this.rows=this.buildRows(await this.reportService.getPatientsWithNIDs())},buildRows:t=>t.length?t.map(t=>[i.td(t.nid),i.td(t.given_name),i.td(t.family_name),i.td(t.gender),i.td(n.toStandardHisDisplayFormat(t.birthdate)),i.td(n.toStandardHisDisplayFormat(t.date)),i.td(t.address)]):[]}});t("default",o(e,[["render",function(t,e,i,r,s,a){const n=c("report-template"),o=c("ion-page");return u(),p(o,null,{default:h(()=>[g(n,{title:t.title,rows:t.rows,fields:t.fields,columns:t.columns,period:t.period,reportPrefix:"Clinic",onReportConfiguration:t.init},null,8,["title","rows","fields","columns","period","onReportConfiguration"])]),_:1})}]]))}}});
