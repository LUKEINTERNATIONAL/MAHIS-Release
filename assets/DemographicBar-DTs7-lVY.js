import{d as E,au as F,b2 as x,r as b,w as L,a as O,E as W,y as U,f as g,z as h,k as o,e as M,u as t,A as r,B as n,l as q,de as J,I as K}from"./vendor-BzS-GRGX.js";import{u as Q,o as X,at as Y,P as Z,b2 as $,b3 as d,H as c,b4 as ee,_ as oe}from"./index-xmN8DORW.js";const le={style:{width:"97%",overflow:"scroll"}},ne={key:0,class:"second_bar_list"},se={key:1,class:"second_bar_list"},re=E({__name:"DemographicBar",emits:["openPopover"],setup(te,{emit:A}){const G=A;F();const V=Q(),T=X(),{patient:l}=x(V),{activeProgram:H,authorizedPrograms:ie}=x(T),u=b({}),I=b(""),f=b(),R=async(s,e)=>{var m,i,a,p;if((m=l==null?void 0:l.value.personInformation)!=null&&m.gender&&((i=l==null?void 0:l.value.personInformation)!=null&&i.birthdate)){const v=await ee.getBMI(parseInt(s),parseInt(e),(a=l==null?void 0:l.value.personInformation)==null?void 0:a.gender,c.calculateAge((p=l==null?void 0:l.value.personInformation)==null?void 0:p.birthdate,c.sessionDate()));I.value=v.index}},B=async()=>{let s=Y("vitals");f.value=new Z().getBloodGlucose(l.value);const e=$(s);u.value={weight:d(e,"Weight (kg)","value_numeric"),height:d(e,"Height (cm)","value_numeric"),temperature:d(e,"Temperature (c)","value_numeric"),pulse:d(e,"Pulse","value_numeric"),diastolic:d(e,"Diastolic blood pressure","value_numeric"),systolic:d(e,"Systolic blood pressure","value_numeric")},await R(u.value.weight,u.value.height)},y=()=>{var s,e;return c.getBirthdateAge((e=(s=l.value)==null?void 0:s.personInformation)==null?void 0:e.birthdate)},j=s=>{var m,i,a;return[(m=s==null?void 0:s.personInformation)==null?void 0:m.current_district,(i=s==null?void 0:s.personInformation)==null?void 0:i.current_traditional_authority,(a=s==null?void 0:s.personInformation)==null?void 0:a.current_village].filter(Boolean).join(",")};return L(()=>l,async()=>{await B()},{deep:!0}),O(async()=>{await B()}),(s,e)=>{const m=W("ion-card");return g(),U(m,{class:"second_bar",style:{display:"flex"}},{default:h(()=>{var i,a,p,v,D,w,_,N,C,P,S,k;return[o("div",le,[t(H).program_id==32?(g(),M("ul",ne,[o("li",null,[e[1]||(e[1]=r(" NCDNumber: ")),o("b",null,n(t(l).NcdID),1)]),o("li",null,[e[2]||(e[2]=r(" Birthday: ")),o("b",null,n(y()),1)]),o("li",null,[e[3]||(e[3]=r(" Gender: ")),o("b",null,n((a=(i=t(l))==null?void 0:i.personInformation)==null?void 0:a.gender),1)]),o("li",null,[e[4]||(e[4]=r(" Blood Pressure: ")),o("b",null,n(u.value.systolic)+"/"+n(u.value.diastolic),1)]),o("li",null,[e[5]||(e[5]=r(" Blood Glucose: ")),o("b",null,n((p=f.value)==null?void 0:p.value)+" "+n((v=f.value)==null?void 0:v.unit),1)]),o("li",null,[e[6]||(e[6]=r(" BMI: ")),o("b",null,n(I.value),1)]),o("li",null,[e[7]||(e[7]=r(" Pulse rate: ")),o("b",null,n(u.value.pulse),1)]),o("li",null,[e[8]||(e[8]=r(" Temperature: ")),o("b",null,n(u.value.temperature),1)])])):(g(),M("ul",se,[o("li",null,[e[9]||(e[9]=r(" Fullname: ")),o("b",null,n((w=(D=t(l))==null?void 0:D.personInformation)==null?void 0:w.given_name)+" "+n((N=(_=t(l))==null?void 0:_.personInformation)==null?void 0:N.middle_name)+" "+n((P=(C=t(l))==null?void 0:C.personInformation)==null?void 0:P.family_name),1)]),o("li",null,[e[10]||(e[10]=r(" NCDNumber: ")),o("b",null,n(t(l).NcdID),1)]),o("li",null,[e[11]||(e[11]=r(" MRN: ")),o("b",null,n(t(l).ID),1)]),o("li",null,[e[12]||(e[12]=r(" Birthday: ")),o("b",null,n(y()),1)]),o("li",null,[e[13]||(e[13]=r(" Gender: ")),o("b",null,n((k=(S=t(l))==null?void 0:S.personInformation)==null?void 0:k.gender),1)]),o("li",null,[e[14]||(e[14]=r(" Address: ")),o("b",null,n(j(t(l))),1)])]))]),o("div",{style:{"margin-top":"15px",cursor:"pointer"},onClick:e[0]||(e[0]=z=>G("openPopover",z))},[q(t(K),{icon:t(J)},null,8,["icon"])])]}),_:1})}}}),me=oe(re,[["__scopeId","data-v-b9e5efeb"]]);export{me as D};
