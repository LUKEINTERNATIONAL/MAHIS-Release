import{c7 as p,c4 as r,c6 as d,aE as i,cn as _,co as v,aD as b}from"./index-9k4A1QAA.js";import{d as f,r as s,O as g,f as h}from"./vendor-CFQIVeWk.js";import"./lodash-NJiRuGo9.js";import"./apexcharts-Br4kBeFq.js";const R=f({__name:"ActiveClientsWithAdverseOutcomes",setup(D){const o=s("-"),n=s([]),c=[p("patient_id")],l=[{path:"arv_number",label:"ARV Number"},{path:"filling_number",label:"Filling Number"},{path:"outcome",label:"Outcome"},{path:"outcome_date",label:"Outcome Date",formatter:r},{path:"dispensation_visit_date",label:"Last Dispensation Date",formatter:r}];async function u(a){await i.show();try{const t=new _;t.setStartDate(a.dateRange.startDate),t.setEndDate(a.dateRange.endDate),o.value=t.getDateIntervalPeriod();const m=await t.getCleaningToolReport(v.ActiveClientsWithAdverseOutcomes);n.value=m.map(e=>({arv_number:e.arv_number,filling_number:e.filling_number,outcome:e.outcome,outcome_date:e.outcome_date,dispensation_visit_date:e.dispensation_visit_date,patient_id:e.patient_id}))}catch(t){b("Unable to load report data"),console.error(t)}await i.hide()}return(a,t)=>(h(),g(d,{title:"Active Clients with Adverse Outcomes","report-type":"Clinic",columns:l,rows:n.value,period:o.value,"row-action-buttons":c,"use-date-range-filter":"","use-secure-export":"",onGenerate:u},null,8,["rows","period"]))}});export{R as default};
