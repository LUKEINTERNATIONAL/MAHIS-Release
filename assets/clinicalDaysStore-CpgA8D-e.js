import{R as D,c as u,al as h}from"./vendor-Ddb6Z0_s.js";import{s as i,J as d,H as b,a3 as g,u as c,b0 as n,S as m,b1 as f,b2 as p}from"./index-DuNDgd8X.js";const A=D("ClinicalDaysStore",{state:()=>({holidayDates:[],assignedAppointmentsDates:[],maximumNumberOfDaysForEachDay:0,areMondaysDisabled:!1,areTuesdaysDisabled:!1,areWednesdaysDisabled:!1,areThursdaysDisabled:!1,areFridaysDisabled:!1,areSaturdaysDisabled:!1,areSundaysDisabled:!1}),actions:{setHolidayDates(e){this.holidayDates=e},getHolidaydates(){return this.holidayDates},getHolidaydatesDataSize(){return this.holidayDates.length},generateDisabledDates(){const e=new Date(m.getSessionDate());e.setHours(0,0,0,0);const a=this.holidayDates.map(s=>new Date(s)),r=new Date(0);for(let s=r;s<e;s.setDate(s.getDate()+1))a.push(new Date(s));return a},getDays(e){const a=new Date("2024-01-01"),r=new Date("2030-12-31"),s=[],t=new Date(a);for(;t<=r;)t.getDay()===e&&s.push(new Date(t)),t.setDate(t.getDate()+1);return s},getAllSaturdays(){if(this.areSaturdaysDisabled==!1)return this.getDays(6);if(this.areSaturdaysDisabled==!0)return[]},getAllSundays(){if(this.areSundaysDisabled==!1)return this.getDays(0);if(this.areSundaysDisabled==!0)return[]},getAllMondays(){if(this.areMondaysDisabled==!1)return this.getDays(1);if(this.areMondaysDisabled==!0)return[]},getAllTuesdays(){if(this.areTuesdaysDisabled==!1)return this.getDays(2);if(this.areTuesdaysDisabled==!0)return[]},getAllWednesdays(){if(this.areWednesdaysDisabled==!1)return this.getDays(3);if(this.areWednesdaysDisabled==!0)return[]},getAllThursdays(){if(this.areThursdaysDisabled==!1)return this.getDays(4);if(this.areThursdaysDisabled==!0)return[]},getAllFridays(){if(this.areFridaysDisabled==!1)return this.getDays(5);if(this.areFridaysDisabled==!0)return[]},getDisabledDates(){return n(this.getAllMondays(),this.getAllTuesdays(),this.getAllWednesdays(),this.getAllThursdays(),this.getAllFridays(),this.getAllSaturdays(),this.getAllSundays(),this.generateDisabledDates())},getDisabledDates2(){return n(this.getAllMondays(),this.getAllTuesdays(),this.getAllWednesdays(),this.getAllThursdays(),this.getAllFridays(),this.getAllSaturdays(),this.getAllSundays())},setMaximumNumberOfDaysForEachDay(e){this.maximumNumberOfDaysForEachDay=e},getMaximumNumberOfDaysForEachDay(){return this.maximumNumberOfDaysForEachDay},setAreMondaysDisabled(e){this.areMondaysDisabled=e},getAreMondaysDisabled(){return this.areMondaysDisabled},setAreTuesdaysDisabled(e){this.areTuesdaysDisabled=e},getAreTuesdaysDisabled(){return this.areTuesdaysDisabled},setAreWednesdaysDisabled(e){this.areWednesdaysDisabled=e},getAreWednesdaysDisabled(){return this.areWednesdaysDisabled},setAreThursdaysDisabled(e){this.areThursdaysDisabled=e},getAreThursdaysDisabled(){return this.areThursdaysDisabled},setAreFridaysDisabled(e){this.areFridaysDisabled=e},getAreFridaysDisabled(){return this.areFridaysDisabled},setAreSaturdaysDisabled(e){this.areSaturdaysDisabled=e},getAreSaturdaysDisabled(){return this.areSaturdaysDisabled},setAreSundaysDisabled(e){this.areSundaysDisabled=e},getAreSundaysDisabled(){return this.areSundaysDisabled},setsssignedAppointmentsDates(e,a=!1){const r=g.getProgramID(),s=c().getPatient().patient_id;this.assignedAppointmentsDates.length=0,Array.isArray(this.assignedAppointmentsDates)?(this.assignedAppointmentsDates.forEach(t=>{t.markedNextApt=!1}),S(this.assignedAppointmentsDates,r,s,e)||this.assignedAppointmentsDates.push({programID:r,patientID:s,date:e,markedNextApt:a})):this.assignedAppointmentsDates=[]},getAssignedAppointmentsDates(){return this.assignedAppointmentsDates},getAssignedAppointments(){return Array.isArray(this.assignedAppointmentsDates)?_(this.assignedAppointmentsDates):[]},async setWeekDaysPropertiesObj(){const e=d(),a=i(),r=e.getfacilityLocation().code,s={facility_id:r,weekDays:{areMondaysDisabled:this.areMondaysDisabled,areTuesdaysDisabled:this.areTuesdaysDisabled,areWednesdaysDisabled:this.areWednesdaysDisabled,areThursdaysDisabled:this.areThursdaysDisabled,areFridaysDisabled:this.areFridaysDisabled,areSaturdaysDisabled:this.areSaturdaysDisabled,areSundaysDisabled:this.areSundaysDisabled}},t=JSON.stringify(s);await a.setGlobalProperty("week_days_properties_"+r,"".concat(t))},async setMaximumNumberOfDaysForEachDayObj(){const e=d(),a=i(),r=e.getfacilityLocation().code,s={facility_id:r,maximumNumberOfDaysForEachDay:this.maximumNumberOfDaysForEachDay},t=JSON.stringify(s);await a.setGlobalProperty("maximum_number_Of_c_for_each_day_"+r,"".concat(t))},async setHolidayDatesObj(){const a=d().getfacilityLocation().code,r=i(),s=this.holidayDates.map(y=>b.toStandardHisFormat(y)),o=JSON.stringify({facility_id:a,holidayDates:s});await r.setGlobalProperty("holiday_date_"+a,"".concat(o))},autoGeneratedDates(){const e=w(),a=new Set(this.holidayDates);return e.forEach(r=>{a.add(r.date)}),this.holidayDates=Array.from(a),this.holidayDates}},persist:!0});function S(e,a,r,s){return e.some(t=>t.programID===a&&t.patientID===r&&f(new Date(t.date),new Date(s)))}function _(e){const a=new Map;return e.forEach(s=>{const t=new Date(s.date).toISOString().split("T")[0];a.has(t)?a.set(t,a.get(t)+1):a.set(t,1)}),Array.from(a,([s,t])=>({date:s,count:t}))}function w(){return new p().generateFormattedHolidayDates()}const l=u(()=>h(i,["globalPropertyStore"]));function F(){try{const e=A(),a=JSON.parse(l.value.globalPropertyStore().holidayDatesObj),r=JSON.parse(l.value.globalPropertyStore().maximumNumberOfCForEachDayObj),s=JSON.parse(l.value.globalPropertyStore().weekDaysPropertiesObj);return e.setHolidayDates(a.holidayDates),e.setMaximumNumberOfDaysForEachDay(r.maximumNumberOfDaysForEachDay),e.setAreMondaysDisabled(s.weekDays.areMondaysDisabled),e.setAreTuesdaysDisabled(s.weekDays.areTuesdaysDisabled),e.setAreWednesdaysDisabled(s.weekDays.areWednesdaysDisabled),e.setAreThursdaysDisabled(s.weekDays.areThursdaysDisabled),e.setAreFridaysDisabled(s.weekDays.areFridaysDisabled),e.setAreSaturdaysDisabled(s.weekDays.areSaturdaysDisabled),e.setAreSundaysDisabled(s.weekDays.areSundaysDisabled),!0}catch(e){return!1}}export{F as s,A as u};
