import{aF as l,H as v,x as y}from"./index-C_OuTsLP.js";async function h(s,u=l.getSessionDate(),e=[]){const d=s.map(async r=>{if(r&&r.radioBtnContent&&r.radioBtnContent.header&&r.radioBtnContent.header.selectedValue){const o=await l.getConceptID(r.radioBtnContent.header.selectedValue,!0),i=await l.getConceptID(r.radioBtnContent.header.name,!0),n=y(s,r.radioBtnContent.header.name+" date","value")||u,t=e.map(a=>({concept_id:o,value_coded:a.drug_inventory_id,obs_datetime:n}));return e?{concept_id:i,value_coded:o,obs_datetime:n,child:t}:{concept_id:i,value_coded:o,obs_datetime:n}}else return null});return(await Promise.all(d)).filter(r=>r!==null)}async function P(s,u=l.getSessionDate(),e=[]){const d=s.map(async r=>{var o,i,n,t,a,c;if(r&&r.groupedRadioBtnContent&&r.groupedRadioBtnContent.groupedData&&((i=(o=r.groupedRadioBtnContent.groupedData[0])==null?void 0:o.header)!=null&&i.selectedValue)){const f=await l.getConceptID((t=(n=r.groupedRadioBtnContent.groupedData[0])==null?void 0:n.header)==null?void 0:t.selectedValue,!0),p=await l.getConceptID((c=(a=r.groupedRadioBtnContent.groupedData[0])==null?void 0:a.header)==null?void 0:c.name,!0),C=u||l.getSessionDate();return{concept_id:p,value_coded:f,obs_datetime:C}}else return null});return(await Promise.all(d)).filter(r=>r!==null)}async function _(s,u=v.sessionDate(),e=""){const d=s.map(async o=>{var i;return(i=o==null?void 0:o.data)!=null&&i.rowData?Promise.all(o.data.rowData[0].colData.map(async n=>{var a;let t=[];return n.isMultiSelect&&(n!=null&&n.value)?t=await Promise.all(n==null?void 0:n.value.map(async c=>await g(n,c.concept_id,u,e))):n.isSingleSelect?t=(a=n==null?void 0:n.value)==null?void 0:a.name:t=n==null?void 0:n.value,n.buildConceptIgnore||!t?null:typeof t=="object"?t:await g(n,t,u)})).then(n=>n.filter(Boolean)):[]});return(await Promise.all(d)).flat().flat()}async function D(s,u=v.sessionDate(),e=""){const d=s.map(async o=>{var i,n,t;return(n=(i=o==null?void 0:o.checkboxBtnContent)==null?void 0:i.inputFields)!=null&&n.length?Promise.all((t=o==null?void 0:o.checkboxBtnContent)==null?void 0:t.inputFields.map(async a=>{var f,p;let c=[];return a.isMultiSelect&&(a!=null&&a.value)?c=await g(a,(f=a==null?void 0:a.value)==null?void 0:f.name,u,e):a.isSingleSelect?c=(p=a==null?void 0:a.value)==null?void 0:p.name:c=a==null?void 0:a.value,a.buildConceptIgnore||!c?null:typeof c=="object"?c:await g(a,c,u)})).then(a=>a.filter(Boolean)):[]});return(await Promise.all(d)).flat().flat()}async function g(s,u,e,d=""){const r=await l.getConceptID(s.name,!0);if(s.valueType==="coded"){const o=await l.getConceptID(u,!0);return d?{concept_id:r,value_coded:o,obs_datetime:e,child:[{concept_id:r,value_text:d,obs_datetime:e}]}:{concept_id:r,value_coded:o,obs_datetime:e}}else return s.valueType==="text"?{concept_id:r,value_text:u,obs_datetime:e}:s.valueType==="number"?{concept_id:r,value_numeric:u,obs_datetime:e}:null}async function I(s,u=l.getSessionDate(),e=[]){return Array.isArray(s)?(await Promise.all(s.map(async r=>{var i,n;if(!((n=(i=r==null?void 0:r.checkboxBtnContent)==null?void 0:i.data)!=null&&n.length))return[];const o=r.checkboxBtnContent.data.map(async t=>{if(!(t!=null&&t.checked)||t!=null&&t.buildConceptIgnore)return null;try{const a=await l.getConceptID(t.value,!0),c=await l.getConceptID(r.checkboxBtnContent.header.name,!0);if(u=y(s,t.name+" date","value")||u,!a||!c)return null;const p={concept_id:c,value_coded:a,obs_datetime:u};if(e.length>0){const C=e.map(B=>({concept_id:a,value_coded:B.drug_inventory_id,obs_datetime:u}));return{...p,child:C}}return p}catch(a){return console.error("Error processing checkbox data:",a),null}});return(await Promise.all(o)).filter(Boolean)}))).flat().filter(Boolean):[]}export{_ as a,P as b,I as c,D as d,h as f};
