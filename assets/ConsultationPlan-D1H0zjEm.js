import{r as u,a as me,n as tt,d as at,au as st,cl as nt,b2 as d,w as g,y as te,f as Y,z as $,l as v,e as ot,m as ae,k as b,u as C,bM as it,d5 as rt,a9 as lt,dF as ct,i as O,bG as ut,v as x,af as mt}from"./vendor-BBnHTtmR.js";import{u as dt,aC as vt,aS as pt,a0 as gt,b as ft,aI as ht,M as yt,a1 as Dt,aT as wt,aU as Pt,aV as bt,aW as St,aX as Ct,aY as It,T as Tt,D as At,y as f,m as H,H as h,aJ as _,aZ as se,aw as ne,j as oe,k as ie,t as y,S as Ot,a7 as re,_ as xt}from"./index-53Jeodb6.js";import{D as _t}from"./DemographicBar-DIXLi_F8.js";import{C as Nt,I as Ft,O as kt,a as Rt,b as Et}from"./OPDOutcome-BaQS0CgE.js";import{N as Lt,T as le,a as Bt,d as Ht,b as Mt,s as Vt}from"./NextAppointment-7bCHb1l2.js";import{O as zt}from"./OPDPrintingModal-BUxXbLo5.js";import{l as G}from"./lodash-Dt8AsbQm.js";import{u as Wt}from"./usePatientProfile-DVep1ZVq.js";import{f as k,c as ce,a as ue}from"./formatServerData-8bR_ULMJ.js";import{D as qt}from"./diagnosis-Bl6f96hT.js";import"./apexcharts-DmuMXiXt.js";import"./BasicForm-DbOjOBd7.js";import"./DateInputField-IBJdGgd7.js";import"./patient_complaints_service-bKwpj5R5.js";import"./DashBox-Ca0K8opj.js";import"./useExposeFromStandardForm-gMyqG7XP.js";import"./BasicCard-wIQ3Q9mF.js";import"./lab_order-CWAB0aU6.js";import"./group_validation-XbkYdF_9.js";import"./LabTestsHistory-DIveu_k6.js";import"./userService-CA2f_DOi.js";import"./drug_prescription_service-JB9D9sgM.js";import"./drug_service-BhWD6soH.js";import"./Outcome-DSwElFEP.js";import"./ncd_appointment_service-CqWvWasq.js";import"./Registration-DM___1YF.js";import"./useLocation-Dafa9Anp.js";import"./vaccines_service-CM8z_PIJ.js";import"./sms_service-DyYQl3Eg.js";import"./EIRreportsStore-4YHAzOgo.js";import"./Export-I9zsxihd.js";const Ut=(J,p)=>{const N=u(""),D=async(r,m)=>{if(r%1===0){if(p!=null&&p.onTabChange)try{await p.onTabChange(r,m)}catch(l){console.error("Error in custom tab change handler:",l);return}N.value=r}},R=async(r,m)=>{var l;if(N.value===0&&console.log("First Tab"),(l=p==null?void 0:p.tabValidations)!=null&&l[r])try{if(!await p.tabValidations[r]())return console.log("Tab validation failed, preventing navigation"),!1}catch(w){return console.error("Error in tab validation:",w),!1}return console.log("All Tabs"),!0},E=r=>{const m=document.getElementsByClassName("form-wizard-vue");if(!m.length)return;const l=m[0].getElementsByClassName("fw-body-list");if(!l.length)return;const w=l[0].querySelector(".fw-custom-title");w&&w.remove();const T=document.createElement("li");T.className="fw-custom-title",T.textContent=r||J,T.style.cssText="\n            text-align: center;\n            font-weight: 700;\n            font-size: 18px;\n            flex-grow: 0.08;\n            padding: 10px 0;\n        ",l[0].insertBefore(T,l[0].firstChild)},S=()=>{tt(()=>{const r=document.querySelector(".fw-footer-left .fw-btn");if(console.log("ðŸš€ ~ changeBtnIconPosition ~ button:",r),!r)return;const m=r.querySelector("span"),l=r.querySelector("i");!m||!l||(r.removeChild(m),r.removeChild(l),r.appendChild(l),r.appendChild(m))})};return me(()=>{E()}),{currentTabIndex:N,onChangeCurrentTab:D,onTabBeforeChange:R,changeBtnIconPosition:S,addHeaderAboveList:E}},Yt={key:0,class:"spinner-overlay"},$t={class:"back_profile"},Gt=at({__name:"ConsultationPlan",setup(J){const{onTabBeforeChange:p,onChangeCurrentTab:N,currentTabIndex:D}=Ut("Consultation Plan",{onTabChange:async(e,t)=>{console.log("Tab changed from ".concat(t," to ").concat(e)),t===0&&R(t)==="Clinical Assessment"&&(console.log("Leaving Clinical Assessment tab - saving data..."),await We())},tabValidations:{0:async()=>{var e,t;if(R(0)==="Clinical Assessment"){const a=await re.getAll(i.value.patientID,"Presenting complaint");let s=[];if(a&&(s=a.filter(o=>h.toStandardHisFormat(h.sessionDate())===h.toStandardHisFormat(o.obs_datetime))),!(((t=(e=B.value[0])==null?void 0:e.selectedData)==null?void 0:t.length)>0||s.length>0))return y("Patient complaints are required before proceeding to the next step"),!1}return!0}}}),R=e=>{var t;return!c.value||e>=c.value.length||e<0?"":((t=c.value[e])==null?void 0:t.title)||""},{printVisitSummary:E}=Wt(),S=st(),r=nt(),m=u(!1),l=u(!1),w=u(!0),T=u(!1),M=u(!1),de=u(!1),ve=dt(),pe=vt(),ge=pt(),fe=gt(),he=ft(),j=ht(),X=yt(),ye=Dt(),De=wt(),we=Pt(),Pe=bt(),be=St(),Se=Ct(),Ce=It(),{patient:i}=d(ve),{investigations:Ie}=d(pe),{OPDdiagnosis:F}=d(ge),{selectedMedicalDrugsList:Te,nonPharmalogicalTherapyAndOtherNotes:Z,selectedMedicalAllergiesList:V}=d(fe),{OPDActivities:L}=d(he),{outcomes:Ae}=d(j),{currentSelectedNextAppointmentDate:Oe}=d(De),{presentingComplaints:B}=d(we),{pregnancy:xe}=d(Pe),{pastMedicalHistory:z}=d(be),{adult:_e,minor:Ne}=d(Se),{physicalExam:W}=d(Ce),{vitals:Fe}=d(ye),ke=u(null),Re=u(null),Ee=u(null),Le=u(null),Be=u(null),He=u(null),K=()=>L.value.map(e=>({title:e,icon:""})),c=u(K()),A=()=>{var a;if(!c.value||c.value.length===0)return null;const e=D.value>=0&&D.value<c.value.length?D.value:0;switch((a=c.value[e])==null?void 0:a.title){case"Clinical Assessment":return"ClinicalAssessment";case"Investigations":return"Investigations";case"Diagnosis":return"OPDDiagnosis";case"Treatment Plan":return"OPDTreatmentPlan";case"Next Appointment":return"NextAppointment";case"Outcome":return"Outcome";default:if(L.value.length>0)switch(L.value[0]){case"Clinical Assessment":return"ClinicalAssessment";case"Investigations":return"Investigations";case"Diagnosis":return"OPDDiagnosis";case"Treatment Plan":return"OPDTreatmentPlan";case"Next Appointment":return"NextAppointment";case"Outcome":return"Outcome"}return null}},Me=()=>{S.push("home")},Ve=async()=>{l.value=!0,f("Printing consultation summary... Please wait.");try{await E(),f("Consultation summary printed successfully!"),setTimeout(()=>{S.push("home")},3500)}catch(e){H("Failed to print consultation summary.")}finally{l.value=!1}},ze=()=>{f("Patient has finished consultation!"),S.push("home")},P=async()=>{var t,a;const e=h.sessionDate();_("vitals");for(let s=0;s<c.value.length;s++){const n=c.value[s];if(n.title==="Clinical Assessment"){const o=_("presentingComplaints");c.value[s].icon=q(e,o)?"check":""}else if(n.title==="Investigations"){const o=(a=(t=i.value)==null?void 0:t.labOrders)==null?void 0:a.saved,I=o==null?void 0:o.filter(ee=>h.toStandardHisFormat(e)===h.toStandardHisFormat(ee.order_date));c.value[s].icon=(I==null?void 0:I.length)>0?"check":""}else if(n.title==="Diagnosis"){const o=_("diagnosis");c.value[s].icon=q(e,o)?"check":""}else if(n.title==="Treatment Plan"){const o=_("treatment");c.value[s].icon=(o==null?void 0:o.length)>0?"check":""}else if(n.title==="Next Appointment"){const o=_("appointments");c.value[s].icon=q(e,o)?"check":""}else if(n.title==="Outcome"){const o=_("outcomes");c.value[s].icon=(o==null?void 0:o.length)>0?"check":""}}},q=(e,t)=>{if(!t)return!1;const a=new Date(e);return a.setHours(0,0,0,0),t.some(s=>{const n=new Date(s.obs_datetime||s.order_date);return n.setHours(0,0,0,0),n.getTime()===a.getTime()})},We=async()=>{var e,t;m.value=!0;try{const a=await re.getAll(i.value.patientID,"Presenting complaint");let s=[];if(a&&(s=a.filter(n=>h.toStandardHisFormat(h.sessionDate())===h.toStandardHisFormat(n.obs_datetime))),((t=(e=B.value[0])==null?void 0:e.selectedData)==null?void 0:t.length)>0||s.length>0)await Promise.all([qe(),Ue(),Ye(),$e(),je(),Ge()]),await ne(i.value),se();else throw y("Patient complaints are required"),new Error("Patient complaints are required")}catch(a){throw console.error("Error saving clinical assessment:",a),H("Failed to save clinical assessment"),a}finally{m.value=!1}},qe=async()=>{var e,t,a,s;try{const o=h.getAgeInYears(i.value.personInformation.birthdate)<18?await k(Ne.value):await k(_e.value);o.length>0&&((s=(a=(t=(e=i.value).levelOfConsciousness)!=null?t:e.levelOfConsciousness={}).unsaved)!=null||(a.unsaved=[]),i.value.levelOfConsciousness.unsaved.push(...o),f("Level of Consciousness saved successfully"))}catch(n){console.error("Failed to save consciousness assessment:",n),y("Failed to save consciousness assessment")}},Ue=async()=>{var e,t,a,s,n;try{const o=U(((e=B.value[0])==null?void 0:e.selectedData)||[]);o.length>0&&((n=(s=(a=(t=i.value).presentingComplaints)!=null?a:t.presentingComplaints={}).unsaved)!=null||(s.unsaved=[]),i.value.presentingComplaints.unsaved.push(...o),f("Patient complaints saved successfully"))}catch(o){console.error("Failed to save presenting complaints:",o),y("Failed to save presenting complaints")}},Ye=async()=>{var e,t,a,s;try{const n=await k(xe.value);n.length>0&&((s=(a=(t=(e=i.value).pregnancy)!=null?t:e.pregnancy={}).unsaved)!=null||(a.unsaved=[]),i.value.pregnancy.unsaved.push(...n),f("Pregnancy status saved successfully"))}catch(n){console.error("Failed to save pregnancy status:",n),y("Failed to save pregnancy status")}},$e=async()=>{var e,t,a,s;try{const n=await Ze();n.length>0&&((s=(a=(t=(e=i.value).pastMedicalHistory)!=null?t:e.pastMedicalHistory={}).unsaved)!=null||(a.unsaved=[]),i.value.pastMedicalHistory.unsaved.push(...n),f("Past medical history saved successfully"))}catch(n){console.error("Failed to save past medical history:",n),y("Failed to save past medical history")}},Ge=async()=>{var e,t,a,s;try{const n=await Ke();n.length>0&&((s=(a=(t=(e=i.value).physicalExam)!=null?t:e.physicalExam={}).unsaved)!=null||(a.unsaved=[]),i.value.physicalExam.unsaved.push(...n),f("Physical examination saved successfully"))}catch(n){console.error("Failed to save physical examination:",n),y("Failed to save physical examination")}},Je=async()=>{var e,t,a,s,n,o;try{if(((t=(e=F.value[0])==null?void 0:e.selectedData)==null?void 0:t.length)>0){const I=localStorage.getItem("userID");await new qt().onSubmit(i.value.patientID,I,U(F.value[0].selectedData));const et=U(F.value[0].selectedData);(o=(n=(s=(a=i.value).diagnosis)!=null?s:a.diagnosis={}).unsaved)!=null||(n.unsaved=[]),i.value.diagnosis.unsaved.push(...et)}F.value[0].selectedData=[]}catch(I){console.error("Failed to save diagnosis:",I),y("Failed to save diagnosis")}},je=async()=>{try{const e=localStorage.getItem("userID"),t=i.value.patientID;if(!G.isEmpty(V.value)){const a=Q();await new le().onSubmitAllergies(t,e,a),await Vt(a)}}catch(e){console.error("Failed to save allergies:",e),y("Failed to save allergies")}},Xe=async()=>{try{const e=localStorage.getItem("userID"),t=i.value.patientID,a=new le;if(!G.isEmpty(V.value)){const s=Q();await a.onSubmitAllergies(t,e,s)}if(!G.isEmpty(Z.value)){const s=[{concept_id:2688,obs_datetime:localStorage.getItem("sessionDate"),value_text:Z.value,location_id:X.facilityLocation.code}];await Bt(s)}await Ht(),await Mt().saveNonPharmaTherapyPatientData()}catch(e){console.error("Failed to save treatment plan:",e),y("Failed to save treatment plan")}},U=e=>e?e.map(t=>(t==null?void 0:t.data[0])||(t==null?void 0:t.data)):[],Ze=async()=>[...await ce(z.value),...await k(z.value),...await ue(z.value)],Ke=async()=>[...await ce(W.value),...await k(W.value),...await ue(W.value)],Q=()=>V.value.map(e=>({concept_id:985,obs_datetime:Ot.getSessionDate(),value_coded:e.concept_id,location_id:X.facilityLocation.code})),Qe=async()=>{try{await Je(),await Xe(),await j.saveOutcomPatientData(),await se(),await ne(i.value);const e=localStorage.getItem("locationID"),t=localStorage.getItem("userRoles");if(!e){H("Location ID could not be found. Please check your settings.");return}(t?JSON.parse(t):[]).some(n=>n.role==="Lab")?(await oe.movePatientToNextStage(i.value.patientID,"LAB","CONSULTATION",e,i.value.visitID||i.value.visit_id),await ie().refresh(e),await S.push("home"),f("Lab results submitted. Patient can return to consultation")):(await oe.movePatientToNextStage(i.value.patientID,"CONSULTATION","DISPENSATION",e,i.value.visitID||i.value.visit_id),await ie().refresh(e),await S.push("home"),f("Consultation patient saved successfully."))}catch(e){console.error("Error saving consultation data:",e),H("Failed to save consultation data")}};return me(async()=>{if(L.value.length===0){await S.push("home");return}c.value=K(),await P(),(D.value===void 0||D.value<0)&&(D.value=0)}),g(Fe,async()=>{await P()},{deep:!0}),g(i,async()=>{await P()},{deep:!0}),g(Ie,async()=>{await P()},{deep:!0}),g(F,async()=>{await P()},{deep:!0}),g(Te,async()=>{await P()},{deep:!0}),g(Ae,async()=>{await P()},{deep:!0}),g(Oe,async()=>{await P()}),g(B,async()=>{await P()},{deep:!0}),g(r,async()=>{w.value=!1,setTimeout(()=>{D.value=0,w.value=!0},0)},{deep:!0}),g(de,e=>{M.value=e,M.value&&setTimeout(()=>{M.value=!1},15e3)}),(e,t)=>(Y(),te(C(mt),null,{default:$(()=>[v(zt,{onYes:Ve,onNo:ze,isOpen:T.value,title:"Do you want to print the consultation summary?"},null,8,["isOpen"]),m.value?(Y(),ot("div",Yt,[v(C(it),{name:"bubbles"}),t[2]||(t[2]=b("div",{class:"loading-text"},"Please wait...",-1))])):ae("",!0),v(C(rt),{"is-open":l.value,message:"Printing consultation summary...",spinner:"circles"},null,8,["is-open"]),v(Tt),v(C(lt),{fullscreen:!0},{default:$(()=>[v(_t),w.value?(Y(),te(C(ct),{key:0,ref:"wizard","vertical-tabs":"","navigable-tabs":"","scrollable-tabs":"",startIndex:0,doneButton:{text:"Finish",icon:"check",hideText:!1,hideIcon:!1,disabled:!1},"custom-tabs":c.value,beforeChange:C(p),onChange:C(N),"onComplete:wizard":t[1]||(t[1]=a=>Qe())},{default:$(()=>[b("div",null,[b("div",$t,[v(At,{name:"Back to Waiting list",iconSlot:"start",fill:"clear",icon:C(ut),"font-weight":"600",onClick:t[0]||(t[0]=a=>Me())},null,8,["icon"])])]),O(b("div",null,[v(Nt,{ref_key:"clinicalAssessmentRef",ref:ke},null,512)],512),[[x,A()==="ClinicalAssessment"]]),O(b("div",null,[v(Ft,{ref_key:"investigationsRef",ref:Re},null,512)],512),[[x,A()==="Investigations"]]),O(b("div",null,[v(kt,{ref_key:"diagnosisRef",ref:Ee},null,512)],512),[[x,A()==="OPDDiagnosis"]]),O(b("div",null,[v(Rt,{ref_key:"treatmentPlanRef",ref:Le},null,512)],512),[[x,A()==="OPDTreatmentPlan"]]),O(b("div",null,[v(Lt,{ref_key:"nextAppointmentRef",ref:Be},null,512)],512),[[x,A()==="NextAppointment"]]),O(b("div",null,[v(Et,{ref_key:"outcomeRef",ref:He},null,512)],512),[[x,A()==="Outcome"]])]),_:1},8,["custom-tabs","beforeChange","onChange"])):ae("",!0)]),_:1})]),_:1}))}}),Ia=xt(Gt,[["__scopeId","data-v-2d18f977"]]);export{Ia as default};
