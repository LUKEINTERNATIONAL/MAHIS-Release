System.register(["./vendor-legacy-BZxCa0cX.js","./index-legacy-Ceg9NrRI.js","./DemographicBar-legacy-DM7dpiOK.js","./SaveProgressModal-legacy-HXE7uDvr.js","./Stepper-legacy-CEXlCzaY.js","./formatServerData-legacy-zJJN_UYS.js","./lodash-legacy-pOOc9Efu.js","./FeatusModal-legacy-Dh-8KdcD.js","./BasicFooter-legacy-BpnABrfQ.js","./lab_order-legacy--50EMpIc.js","./SetEncounter.vue_vue_type_script_lang-legacy-BB6XQcWF.js","./apexcharts-legacy-RFRzQ_eY.js","./OPDOutcome-legacy-GrDr39sk.js","./BasicForm-legacy-BK9BNWwv.js","./DateInputField-legacy-CBLnVWny.js","./patient_complaints_service-legacy-BxpPHoEe.js","./DashBox-legacy-D50awMvH.js","./useExposeFromStandardForm-legacy-MT9V6lbX.js","./NextAppointment-legacy-CDLDNBQS.js","./drug_prescription_service-legacy-DyYVh9zK.js","./drug_service-legacy-BKQvGdq6.js","./ncd_appointment_service-legacy-DA7aiLPU.js","./BasicCard-legacy-BMAM6MJv.js","./LabTestsHistory-legacy-CzrGb8LX.js","./userService-legacy-BqR6vQ1S.js","./group_validation-legacy-C87rQmR3.js","./Outcome-legacy-B0lrK4YS.js","./TreatmentPlan-legacy-BsN5RuIE.js","./previousDiagnosis-legacy-CrNaB4eA.js","./PastObstreticHistoryStore-legacy-DTSP5-0U.js","./UpcomingFeature-legacy-Cp09v3kP.js"],function(a,e){"use strict";var t,s,i,n,l,r,o,c,d,u,m,g,h,p,v,b,w,y,D,x,S,f,I,E,j,_,A,P,V,k,M,U,C,B,z,F,N,T,O,W,H,L,G,$,R,Y,Z,q,J,X,K,Q,aa;return{setters:[a=>{t=a.d,s=a.ar,i=a.b8,n=a.D,l=a.G,r=a.M,o=a.J,c=a.a_,d=a.ca,u=a.a$,m=a.aZ,g=a.b0,h=a.W,p=a.U,v=a.T,b=a.af,w=a.ba,y=a.S,D=a.a9,x=a.a2,S=a.bG,f=a.E,I=a.y,E=a.f,j=a.z,_=a.l},a=>{A=a.aO,P=a.z,V=a.T,k=a.h,M=a.S,U=a.t,C=a.y,B=a.H,z=a.m,F=a.aN,N=a.u,T=a.i,O=a._},a=>{W=a.D},a=>{H=a.S},a=>{L=a.S,G=a.V,$=a.m,R=a.n,Y=a.o},a=>{Z=a.a,q=a.f,J=a.c},null,a=>{X=a.u},a=>{K=a.B},a=>{Q=a._},a=>{aa=a._},null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],execute:function(){class e extends A{constructor(a,e){super(a,95,e)}}class ea extends A{constructor(a,e){super(a,116,e)}}class ta extends A{constructor(a,e){super(a,210,e)}}const sa=t({name:"PhysicalExam",mixins:[Q,aa],components:{BasicFooter:K,IonContent:D,IonHeader:y,IonMenuButton:w,IonPage:b,IonTitle:v,IonToolbar:p,Toolbar:V,ToolbarSearch:P,DemographicBar:W,IonButton:h,IonCard:g,IonCardContent:m,IonCardHeader:u,IonCardSubtitle:d,IonCardTitle:c,IonAccordion:o,IonAccordionGroup:r,IonItem:l,IonLabel:n,IonModal:i,Stepper:L},data:()=>({wizardData:[{title:"Vitals",class:"common_step",checked:!1,disabled:!1,number:1,last_step:""},{title:"Maternal exam",class:"common_step",checked:"",icon:!1,disabled:!1,number:2,last_step:""},{title:"Abdominal examination",class:"common_step",checked:"",icon:!1,disabled:!1,number:3,last_step:""},{title:"Presenting signs for IPV",class:"common_step",checked:"",icon:!1,disabled:!1,number:4,last_step:"last_step"}],StepperData:[{title:"Vitals",component:"",value:"1"},{title:"Maternal exam",component:"MaternalExam",value:"2"},{title:"Abdominal examination",component:"AbdominalExamination",value:"3"},{title:"Presenting signs or conditions for IPV ",component:"PresentingSigns",value:"4"}],isOpen:!1,iconsContent:T}),computed:{...s(N,["patient"]),...s(Y,["ANCVitals"]),...s(R,["respiratory","pallor","breastExam","vaginalInspection","cervicalExam","oedemaPresence"]),...s(X,["fetalAssessment","fetalDetails"]),...s($,["presentingSigns"])},mounted(){this.markWizard()},watch:{vitals:{handler(){this.markWizard()},deep:!0},DangerSigns:{handler(){this.markWizard()},deep:!0},investigations:{handler(){this.markWizard()},deep:!0},diagnosis:{handler(){this.markWizard()},deep:!0}},setup:()=>({chevronBackOutline:S,checkmark:x,hasValidationErrors:[]}),methods:{markWizard(){},getSaveFunction(){},deleteDisplayData:a=>a.map(a=>(null==a||delete a.display,null==a?void 0:a.data)),async saveData(){if(await this.validaterowData())return void z("Vitals form has errors");const a=X();await a.validate()?(this.saveVitals(),this.saveMaternalExam(),this.saveAbdominalExam(),this.savePresentingSigns(),await this.$router.push("contact"),await F()):z("Abdominal exam section has errors")},async buildVitals(){return[...await Z(this.ANCVitals),...await J(this.ANCVitals)]},async buildMaternalExam(){return[...await q(this.pallor),...await J(this.pallor),...await Z(this.pallor),...await q(this.respiratory),...await J(this.respiratory),...await Z(this.respiratory),...await J(this.breastExam),...await Z(this.breastExam),...await q(this.breastExam),...await J(this.vaginalInspection),...await Z(this.vaginalInspection),...await q(this.vaginalInspection),...await J(this.cervicalExam),...await Z(this.cervicalExam),...await q(this.cervicalExam),...await J(this.oedemaPresence),...await Z(this.oedemaPresence),...await q(this.oedemaPresence)]},async buildAbdominalExam(){return[...await Z(this.fetalAssessment),...await q(this.fetalAssessment),...await J(this.fetalAssessment),...await Z(this.fetalDetails),...await q(this.fetalDetails),...await J(this.fetalDetails)]},async buildPresentingSigns(){return[...await Z(this.presentingSigns),...await q(this.presentingSigns),...await J(this.presentingSigns)]},async saveVitals(){const a=M.getUserID(),e=new G(this.patient.patientID,a);await e.onFinish(this.ANCVitals)},async validaterowData(){var a;const e=M.getUserID(),t=new G(this.patient.patientID,e);B.getAgeInYears(null===(a=this.patient)||void 0===a||null===(a=a.personInformation)||void 0===a?void 0:a.birthdate),this.hasValidationErrors=[];let s=!1;return this.ANCVitals.forEach((a,e)=>{var i;null!=a&&null!==(i=a.data)&&void 0!==i&&i.rowData&&a.data.rowData.forEach((a,i)=>{a.colData.some((a,n)=>{const l=t.validator(a);return a.name,(null==l?void 0:l.length)>0?(s=!0,this.ANCVitals[e].data.rowData[i].colData[n].alertsErrorMassage=l.flat(1/0)[0]):this.ANCVitals[e].data.rowData[i].colData[n].alertsErrorMassage="",!1})})}),this.ANCVitals.validationStatus=!s,s},async saveMaternalExam(){if(this.pallor.length>=0||this.cervicalExam.length>=0||this.vaginalInspection.length>=0||this.breastExam.length>=0){const a=M.getUserID(),t=new e(this.patient.patientID,a);if(!(await t.createEncounter()))return U("Unable to create maternal exam encounter");if(!(await t.saveObservationList(await this.buildMaternalExam())))return U("Unable to create maternal exam details!");C("Maternal exam details have been created")}console.log(await this.buildMaternalExam())},async saveAbdominalExam(){if(this.fetalAssessment.length>=0||this.fetalDetails.length>=0){const a=M.getUserID(),e=new ea(this.patient.patientID,a);if(!(await e.createEncounter()))return U("Unable to create abdominal exam encounter");if(!(await e.saveObservationList(await this.buildAbdominalExam())))return U("Unable to create abdominal exam details!");C("Abdominal exam details have been created")}console.log(await this.buildAbdominalExam())},async savePresentingSigns(){if(this.presentingSigns.length>=0){const a=M.getUserID(),e=new ta(this.patient.patientID,a);if(!(await e.createEncounter()))return U("Unable to create presenting signs encounter");if(!(await e.saveObservationList(await this.buildPresentingSigns())))return U("Unable to create presenting signs details!");C("Presenting signs details have been created")}console.log(await this.buildPresentingSigns())},openModal(){k(H)}}});a("default",O(sa,[["render",function(a,e,t,s,i,n){const l=f("Toolbar"),r=f("DemographicBar"),o=f("Stepper"),c=f("ion-content"),d=f("BasicFooter"),u=f("ion-page");return E(),I(u,null,{default:j(()=>[_(l),_(c,{fullscreen:!0},{default:j(()=>[_(r),_(o,{stepperTitle:"Physical examination",wizardData:a.wizardData,onUpdateStatus:a.markWizard,StepperData:a.StepperData,backUrl:a.userRoleSettings.url,backBtn:a.userRoleSettings.btnName,getSaveFunction:a.getSaveFunction},null,8,["wizardData","onUpdateStatus","StepperData","backUrl","backBtn","getSaveFunction"])]),_:1}),_(d,{onFinishBtn:e[0]||(e[0]=e=>a.saveData())})]),_:1})}]]))}}});
