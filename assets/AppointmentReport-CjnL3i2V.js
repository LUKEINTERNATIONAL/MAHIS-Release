import{p as m,d as c,e as u,l as o,v as d,a as f}from"./index-CD20pX6K.js";import{g as b,R as h}from"./ReportTable-BFSN7Z3n.js";import{R as _}from"./report_service-B12If2MG.js";import{d as w,r as g,y as R,f as y}from"./vendor-BEKTmkXc.js";import"./lodash-Dt8AsbQm.js";import"./apexcharts-BW0LSm5R.js";import"./chartjs-Cd7EKH6q.js";import"./barcode-qrcode-reader-o0mSiBQi.js";const k=w({__name:"AppointmentReport",setup(v){const a=g([]),n=[b()],p=[{path:"arv_number",label:"ARV Number",preSort:m,initialSort:!0},{path:"given_name",label:"First name",exportable:!1},{path:"family_name",label:"Last name",exportable:!1},{path:"gender",label:"Gender",formatter:c},{path:"birthdate",label:"Date of Birth",formatter:u}];async function s(t,i){var r;await o.show();const e=new _;e.setOccupation(t.occupation);try{a.value=(r=await e.getReport("programs/".concat(e.programId,"/scheduled_appointments"),{date:d(t.date)}))!=null?r:[]}catch(l){f("Unable to load report data"),console.error(l)}await o.hide()}return(t,i)=>(y(),R(h,{title:"Clinic Appointments Report","report-type":"Clinic",columns:p,"row-action-buttons":n,rows:a.value,"use-date-filter":"","use-secure-export":"",onGenerate:s},null,8,["rows"]))}});export{k as default};
