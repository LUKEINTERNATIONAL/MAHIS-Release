import{bU as m,bS as d,bR as n,ay as i,c8 as _,c9 as b,ax as v}from"./index-CZvvd7oI.js";import{d as f,r as s,N as g,f as h}from"./vendor-B1apQUd8.js";import"./lodash-NJiRuGo9.js";import"./apexcharts-CA9696WM.js";const y=f({__name:"ActiveClientsWithAdverseOutcomes",setup(w){const o=s("-"),r=s([]),c=[m("patient_id")],l=[{path:"arv_number",label:"ARV Number"},{path:"filling_number",label:"Filling Number"},{path:"outcome",label:"Outcome"},{path:"outcome_date",label:"Outcome Date",formatter:n},{path:"dispensation_visit_date",label:"Last Dispensation Date",formatter:n}];async function p(a){await i.show();try{const t=new _;t.setStartDate(a.dateRange.startDate),t.setEndDate(a.dateRange.endDate),o.value=t.getDateIntervalPeriod();const u=await t.getCleaningToolReport(b.ActiveClientsWithAdverseOutcomes);r.value=u.map(e=>({arv_number:e.arv_number,filling_number:e.filling_number,outcome:e.outcome,outcome_date:e.outcome_date,dispensation_visit_date:e.dispensation_visit_date,patient_id:e.patient_id}))}catch(t){v("Unable to load report data"),console.error(t)}await i.hide()}return(a,t)=>(h(),g(d,{title:"Active Clients with Adverse Outcomes","report-type":"Clinic",columns:l,rows:r.value,period:o.value,"row-action-buttons":c,"use-date-range-filter":"","use-secure-export":"",onGenerate:p},null,8,["rows","period"]))}});export{y as default};
