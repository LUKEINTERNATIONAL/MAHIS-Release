import{cH as p,cI as u,cx as d,cw as R,cF as g,aA as r,az as f}from"./index-DuNDgd8X.js";import{R as b}from"./regimen_report_service-CFSDT6M3.js";import{R as h,b as w}from"./regimens-C9nA2WnN.js";import{a as n}from"./Arrays-CfBll-2n.js";import{d as _,r as i,c as F,y as v,f as D}from"./vendor-Ddb6Z0_s.js";import"./lodash-Dt8AsbQm.js";const N=_({__name:"RegimenFormulation",setup(y){const a=i("-"),o=i([]),s=[p("patient_id")],l=[{path:"arv_number",label:"ARV Number",preSort:u,initialSort:!0},{path:"gender",label:"Gender",formatter:d},{path:"birthdate",label:"Date of Birth",formatter:R},{path:"regimen",label:"Reg. name"},{path:"drugs",label:"Formulation"}],c=F(()=>[{id:"regimen",label:"Select Regimen",type:"select",options:n(h)},{id:"formulation",label:"Formulation",type:"select",options:n(w)}]);async function m(t){await r.show();try{const e=new b;e.setStartDate(t.dateRange.startDate),e.setEndDate(t.dateRange.endDate),e.setOccupation(t.occupation),a.value=e.getDateIntervalPeriod(),o.value=await e.getRegimenFormulationReport(t.regimen,t.formulation)}catch(e){f("Unable to load report data"),console.error(e)}await r.hide()}return(t,e)=>(D(),v(g,{title:"Regimen Formulation: Patient Level Clinic Report","report-type":"Clinic",columns:l,rows:o.value,period:a.value,"row-action-buttons":s,"custom-filters":c.value,"use-date-range-filter":"",onGenerate:m},null,8,["rows","period","custom-filters"]))}});export{N as default};
