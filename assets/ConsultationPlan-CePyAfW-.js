import{d as ee,ar as G,cw as Ce,U as Le,T as xe,as as Ne,ac as He,G as $e,S as Ve,a9 as ce,cz as lt,X as ct,a1 as Ee,a2 as We,E as T,e as F,f as I,k as y,l as r,z as S,F as ze,L as dt,B as ut,a0 as pt,a3 as mt,m as q,A as Q,r as _,c as K,a as de,n as gt,au as ht,cl as vt,b2 as N,w as H,y as Oe,u as U,dB as ft,i as E,bG as bt,v as W,af as yt}from"./vendor-Oa4k5SKv.js";import{D as ue,aw as St,H as B,C as oe,i as f,F as wt,ax as Y,h as _t,j as Dt,l as Re,g as Je,ay as A,az as re,aA as Tt,S as $,aB as Ct,aC as Ot,aD as Z,u as pe,_ as Ue,aE as Rt,B as kt,aF as It,x as M,aG as te,ar as w,as as Pt,e as Mt,t as qe,P as Ft,k as le,a8 as ke,aH as Ie,aI as Bt,a2 as At,o as Lt,aJ as xt,d as Nt,K as Ht,b as $t,T as Vt,y as Et,aK as X,aL as Wt,aM as zt,N as Pe}from"./index-Cx1mYdif.js";import{D as Jt}from"./DemographicBar-BaqpbZat.js";import{u as Ut,a as ie,D as qt,C as Gt,T as Kt,N as jt,M as Xt,s as Qt,b as Yt,c as Zt,d as ea}from"./NextAppointment-DqjzDsLD.js";import{D as Ge}from"./DashBox-DvE8TdsG.js";import{B as ta}from"./BasicForm-CUwwv2e1.js";import{S as aa,L as na,a as sa,u as Me,E as ia,_ as oa,b as ra}from"./lab_order-DtykWmg8.js";import{v as Fe}from"./group_validation-CrGO4hFy.js";import{S as la}from"./RiskAssessment-DyjjT_0y.js";import{l as Be}from"./lodash-Dt8AsbQm.js";import{a as Ae,b as ca,f as da}from"./formatServerData-B9yV_YHC.js";import{C as ua}from"./Registration-COAaZiJ9.js";import{u as pa}from"./usePatientProfile-BT5IKu3B.js";import"./apexcharts-B1bBG-op.js";import"./previousDiagnosis-B1FRtTLy.js";import"./drug_prescription_service-BeDEtzSB.js";import"./drug_service-Br2a4Ugg.js";import"./ncd_appointment_service-CRLKPnSq.js";import"./DateInputField-CR2Dybvt.js";import"./OutcomeModal.vue_vue_type_style_index_0_scoped_ffb9b64e_lang-BF6pdWpq.js";import"./useLocation-Dw91_7uD.js";import"./useExposeFromStandardForm-DyzqmNZh.js";import"./vaccines_service-ClXJVATU.js";import"./sms_service-B6lRvD5U.js";import"./EIRreportsStore-CLgfbiO8.js";import"./Export-DOUELUlF.js";import"./Outcome-Cpl08ILd.js";const ma=ee({name:"Menu",components:{CheckInConfirmationModal:St,IonContent:ce,IonHeader:Ve,IonItem:$e,IonList:He,IonMenu:Ne,IonTitle:xe,IonToolbar:Le,DynamicButton:ue,DashBox:Ge,LabModal:sa,LabViewResultsModal:na,SendToLabConfirmationModal:aa,DataTable:Ce},computed:{...G(pe,["patient"]),...G(Me,["labResults"]),...G(Z,["investigations"]),...G(Re,["patientsWaitingForVitals","patientsWaitingForConsultation","patientsWaitingForLab","patientsWaitingForDispensation"]),hasEnterResults(){return this.listOrders.some(t=>t.btn&&t.btn.includes("enter_results"))}},props:{propOrders:{default:[]}},data(){return{tableData:[],options:{responsive:!0,select:!1,layout:{topStart:"buttons",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,buttons:[{text:" <b>+ Add other tests </b>",className:"add-test text-white",action:async()=>{await this.openEnterResultModal()}}]},header:["Lab Test","Specimen","Accession Number","Order Date","Result","Action"],iconsContent:f,valueNumericArray:[],obsDatetime:[],graphIcon:Ot(["#006401"]),listIcon:Ct(["#636363"]),displayGraph:!0,sendToLabModalOpen:!1,orders:[],userRoles:[],height:[],BMI:[],iconBg:{},activeWeight:[],activeHeight:[],activeBMI:[],listOrders:[],listResults:[],hasPatientsWaitingForLab:!1,labResultsContent:"",listHeaderOrders:"",service:"",openModal:!1,openResultsModal:!1,series:[{name:"",data:[]}]}},setup(){return{checkmark:We,pulseOutline:Ee}},async mounted(){await this.updateInvestigationWizard(),await this.setListData(),this.$nextTick(()=>{const t=this.$refs.dataTable.dt;t.columns.adjust().draw(),t.on("click",".result-btn",n=>{const e=n.target.getAttribute("data-id");this.openResultsForm(JSON.parse(e))}),t.on("click",".view-btn",n=>{const e=n.target.getAttribute("data-id");this.viewLabOrder(JSON.parse(e))}),t.on("click",".delete-btn",n=>{const e=n.target.getAttribute("data-id");this.voidLabOrder(JSON.parse(e),n)}),t.on("click",".order-btn",n=>{const e=n.target.getAttribute("data-id");this.saveTest(JSON.parse(e))})}),this.orders=this.propOrders,this.service=new Tt(this.patient.patientID),this.userRoles=await $.getUserRoles()},watch:{$route:{async handler(){await this.setListData()},deep:!0},patient:{async handler(){await this.setListData()},deep:!0}},methods:{async closeModal(){this.openModal=!1,await this.setListData()},async saveTest(t){const n=[{concept_id:await A.getConceptID(t.name,!0),name:t.name,specimen:t.specimen,reason:"Routine",specimenConcept:await A.getConceptID(t.specimen,!0)}];let s=(await re.buildLabOrders("",n))[0];s.order_date=s.date,s.specimen.name=await A.getConceptName(s.specimen.concept_id),s.tests[0].name=await A.getConceptName(s.tests[0].concept_id),this.patient.labOrders.unsaved.push(s),await Y(this.patient)},async openEnterResultModal(){await Je(ia,{class:"lab-results-modal"},!0,{title:"name"}),await this.setListData()},toggleSendToLabModal(){this.sendToLabModalOpen=!this.sendToLabModalOpen},async fetchPatientLabStageData(){const t=await _t(),n=t?t.code:null;if(n){const e=await Dt.getPatientList("LAB",n);await Re().refresh(n),this.patient.patientID&&(this.hasPatientsWaitingForLab=e.some(s=>s.patient_id===this.patient.patientID))}},async updateInvestigationWizard(){var n,e,s,a,c;if(!((n=this.patient)!=null&&n.labOrders)||(this.orders=[...(s=(e=this.patient)==null?void 0:e.labOrders)==null?void 0:s.saved,...(c=(a=this.patient)==null?void 0:a.labOrders)==null?void 0:c.unsaved],!this.orders))return;const t=await this.orders.filter(i=>B.toStandardHisFormat(B.sessionDate())===B.toStandardHisFormat(i.order_date));t.length>0?this.investigations[0].selectedData=t:this.investigations[0].selectedData=""},dismiss(){ct.dismiss()},async voidLabOrder(t,n){var s,a,c;if(await wt("Do you want to delete ".concat(t.tests[0].name," ?"),n)){const i=JSON.parse(JSON.stringify(this.patient));i.labOrders.saved.some(g=>{var u,h;return g.order_date===t.order_date&&((u=g==null?void 0:g.tests[0])==null?void 0:u.name)==((h=t==null?void 0:t.tests[0])==null?void 0:h.name)})?(i.labOrders.saved=this.removeTestByNameAndDate(i.labOrders.saved,t.tests[0].name,t.order_date),(c=(a=(s=i.labOrders)!=null?s:i.labOrders={}).voided)!=null||(a.voided=[]),i.labOrders.voided.push({orderId:t.id,reason:"Mistake entry"})):i.labOrders.unsaved=this.removeTestByNameAndDate(i.labOrders.unsaved,t.tests[0].name,t.date),await Y(i)}await this.setListData()},removeTestByNameAndDate(t,n,e){return t.filter(s=>(s.order_date===e&&(s.tests=s.tests.filter(a=>a.name!==n)),s.tests.length>0))},async openResultsForm(t){const n=await oe("testResultIndicators",{whereClause:{test_type_id:t.concept_id}}),e=[t,{validationStatus:"",data:{rowData:[{colData:[]}]}}];n.forEach(a=>{let c={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:""};if(a.name=="RBS"&&(c={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),a.name=="FBS"&&(c={inputHeader:a.name,value:"",colSize:3,id:a.concept_id,name:a.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),a.name=="MRDT"||a.name=="Tuberculosis program"||a.name=="Vdrl"||a.name=="Hepatitis B"||a.name=="Lam"||a.name=="CrAg"||a.name=="CD4 count"||a.name=="Leukocytes"||a.name=="Protein"||a.name=="Nitrite"||a.name=="Urine Ketones"||a.name=="HIV test"){let i=[];(a.name=="MRDT"||a.name=="Vdrl"||a.name=="Hepatitis B"||a.name=="CrAg"||a.name=="Lam")&&(i=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),a.name=="Tuberculosis program"&&(i=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),a.name=="CD4 count"&&(i=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(a.name=="Leukocytes"||a.name=="Protein"||a.name=="Nitrite"||a.name=="Ketones"||a.name=="Urine Ketones")&&(i=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),a.name=="HIV test"&&(i=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),c={inputHeader:a.name,icon:f.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:i,id:a.concept_id,idName:"district_id"}}e[1].data.rowData[0].colData.push(c)}),Me().setLabResults(e),this.openModal=!0,this.orders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async viewLabOrder(t){this.labResultsContent=t,this.openResultsModal=!0},async setListData(){if(!this.patient.labOrders)return;this.orders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const t=this.generateListItems(this.orders,"order"),n=[["FBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"FBS",specimen:"Blood"}),"'>Order Test</button> ")],["HbA1c","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"HbA1c",specimen:"Blood"}),"'>Order Test</button> ")],["RBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"RBS",specimen:"Blood"}),"'>Order Test</button> ")]],e=n.filter(c=>!t.some(i=>i[0]===c[0])),s=t.filter(c=>n.some(i=>i[0]===c[0])),a=t.filter(c=>!s.some(i=>i[0]===c[0]));this.tableData=[...s,...e,...a],await this.updateInvestigationWizard(),Ce.use(lt)},generateListItems(t,n){return t.length>0?t.flatMap(e=>e.tests.flatMap(s=>{var g,u,h,C;const a='<button class="btn btn-outline-success btn-sm result-btn" data-id=\''.concat(JSON.stringify(s),"'>Enter Result</button> "),c='<button class="btn btn-outline-secondary btn-sm attach-btn" data-id=\''.concat(JSON.stringify(s),"'>").concat(this.iconsContent.attach2,"</button>"),i='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(s),"'>").concat(this.iconsContent.view2,"</button> ");let d=a+c;((g=s==null?void 0:s.result)==null?void 0:g.length)==1?d=(s==null?void 0:s.result)!=null?((u=s==null?void 0:s.result[0])==null?void 0:u.value_modifier)+((h=s==null?void 0:s.result[0])==null?void 0:h.value):null:((C=s==null?void 0:s.result)==null?void 0:C.length)>1&&(s==null||s.result,d=i);let p="";return e!=null&&e.accession_number?p='<button class="btn btn-outline-secondary btn-sm" data-id=\''.concat(JSON.stringify(e),"'>").concat(this.iconsContent.print2,"</button>"):d="",[[s==null?void 0:s.name,e==null?void 0:e.specimen.name,(e==null?void 0:e.accession_number)||"",B.toStandardHisFormat(e==null?void 0:e.order_date),d,p+'\n                                <button class="btn btn-outline-danger btn-sm delete-btn" data-id=\''.concat(JSON.stringify(e),"'>").concat(this.iconsContent.delete2,"</button>\n                                ")]]})):[]}}}),ga={class:"container"},ha={class:"table-responsive"};function va(t,n,e,s,a,c){const i=T("DataTable"),d=T("LabViewResultsModal"),p=T("LabModal");return I(),F("div",ga,[y("div",ha,[r(i,{ref:"dataTable",options:t.options,data:t.tableData,class:"display nowrap",width:"100%"},{default:S(()=>[y("thead",null,[y("tr",null,[(I(!0),F(ze,null,dt(t.header,g=>(I(),F("th",{key:g},ut(g),1))),128))])])]),_:1},8,["options","data"])]),r(d,{popoverOpen:t.openResultsModal,content:t.labResultsContent,onCloseModal:n[0]||(n[0]=g=>t.openResultsModal=!1)},null,8,["popoverOpen","content"]),r(p,{popoverOpen:t.openModal,onSaved:t.closeModal,onCloseModal:n[1]||(n[1]=g=>t.openModal=!1)},null,8,["popoverOpen","onSaved"])])}const fa=Ue(ma,[["render",va],["__scopeId","data-v-4f86a889"]]),ba=ee({name:"Menu",mixins:[oa],components:{IonContent:ce,IonHeader:Ve,IonItem:$e,IonList:He,IonMenu:Ne,IonTitle:xe,IonToolbar:Le,IonInput:mt,IonPopover:pt,DashBox:Ge,SelectionPopover:It,BasicInputField:kt,BasicForm:ta,List:Rt,DynamicButton:ue,labOrderResults:fa},data(){return{segmentContent:"Lab Investigations",iconsContent:f,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:We,pulseOutline:Ee}},computed:{...G(Z,["investigations"]),...G(pe,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var t;(t=this.patient)!=null&&t.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(t){this.segmentContent=t},async getTests(){let t;$.getUseIndexDBStatus()&&$.getModsStatus()?t=await oe("testTypes"):t=await re.getTestTypes(),M(this.investigations,"test","multiSelectData",t)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var n;if(!((n=this.patient)!=null&&n.labOrders))return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const t=await this.labOrders.filter(e=>B.toStandardHisFormat(B.sessionDate())===B.toStandardHisFormat(e.order_date));t.length>0?this.investigations[0].selectedData=t:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),Z().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return Fe(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(M(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(M(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){Fe(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(t,n){for(let e of n)for(let s of e.tests)if(s.name===t)return!0;return!1},async saveTest(){await new ra().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await A.getConceptID(this.inputFields[1].value.name,!0)}]),M(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(t){if(t.inputHeader=="Test"&&this.checkTest(),M(this.investigations,"specimen","alertsErrorMassage",""),t.inputHeader=="Test"&&t.value){let n;$.getUseIndexDBStatus()&&$.getModsStatus()?n=await oe("specimens"):n=await re.getSpecimens("",1e3),this.specimen=await A.getConceptSet(t.value.name,"",{names:n.map(e=>e.name)}),this.specimen.length==1?(M(this.investigations,"specimen","value",this.specimen[0]),M(this.investigations,"specimen","disabled",!0)):(M(this.investigations,"specimen","value",""),M(this.investigations,"specimen","disabled",!1)),M(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(t){return await this.labOrders.filter(n=>n.name.toLowerCase().includes(t.toLowerCase()))},async filterSpecimen(t){var n;return(n=this.specimen[0])!=null&&n.name&&t?await this.specimen.filter(e=>e==null?void 0:e.name.toLowerCase().includes(t.toLowerCase())):[]},setTest(t){this.selectedText=t.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=t.name:this.investigations[0].data.rowData[0].colData[1].value=t.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),ya={class:"background"},Sa={key:0},wa={key:1},_a={key:2},Da={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},Ta={key:3},Ca={key:4};function Oa(t,n,e,s,a,c){const i=T("ion-label"),d=T("ion-segment-button"),p=T("ion-segment"),g=T("VisitsHistory"),u=T("labOrderResults");return I(),F("div",ya,[r(p,{value:t.segmentContent,style:{"margin-top":"5px"}},{default:S(()=>[r(d,{value:"Lab Investigations",onClick:n[0]||(n[0]=h=>t.setSegmentContent("Lab Investigations"))},{default:S(()=>[r(i,null,{default:S(()=>n[3]||(n[3]=[Q("Lab Investigations")])),_:1,__:[3]})]),_:1}),r(d,{value:"Radiology Investigation",onClick:n[1]||(n[1]=h=>t.setSegmentContent("Radiology Investigation"))},{default:S(()=>[r(i,null,{default:S(()=>n[4]||(n[4]=[Q("Radiology Investigation")])),_:1,__:[4]})]),_:1}),r(d,{value:"Other Investigation",onClick:n[2]||(n[2]=h=>t.setSegmentContent("Other Investigation"))},{default:S(()=>[r(i,null,{default:S(()=>n[5]||(n[5]=[Q("Other Investigation")])),_:1,__:[5]})]),_:1})]),_:1},8,["value"]),t.segmentContent=="Radiology Investigation"?(I(),F("div",Sa,[r(g)])):q("",!0),t.segmentContent=="Other Investigation"?(I(),F("div",wa)):q("",!0),t.segmentContent=="Lab Investigations"?(I(),F("div",_a,[y("div",Da,[y("span",null,[r(u,{propOrders:t.labOrders},null,8,["propOrders"])])])])):q("",!0),t.segmentContent=="Radiology Investigation"?(I(),F("div",Ta)):q("",!0),t.segmentContent=="Other Investigation"?(I(),F("div",Ca)):q("",!0)])}const Ra=Ue(ba,[["render",Oa],["__scopeId","data-v-db5a3e37"]]),ka=()=>{const t=te(),n=_(""),e=async()=>{n.value=await t.checkHeight()},s=K(()=>[{componentType:"Heading",name:"Height and weight",grid:{s:"3"}},{componentType:"inputField",name:"height",header:"Height",unit:"cm",type:"number",icon:f.height,value:n.value||"",grid:{s:"4.5"},validation:a=>w.vitalsHeight(a),disabled:a=>a["Check height not done"]||n.value},{componentType:"inputField",name:"weight",header:"Weight",unit:"kg",icon:f.weight,type:"number",grid:{s:"4.5"},validation:a=>w.vitalsWeight(a),disabled:a=>a["Check weight not done"]},{grid:{s:"3"}},{componentType:"Alert",condition:async a=>w.vitalsWeight(a.weight)==null&&w.vitalsHeight(a.height)==null?await t.setBMI(a.height,a.weight):!1,grid:{s:"9"}},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check height not done",type:"single",label:"Height not done",value:"",grid:{s:"4.5"},disabled:a=>n.value},{componentType:"checkboxField",name:"Check weight not done",type:"single",label:"Weight not done",grid:{s:"4.5"}},{grid:{s:"3"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"height",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:f.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:a=>!a||a.length===0?"Please select at least one option":null,condition:a=>a["Check height not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Weight",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:f.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:a=>!a||a.length===0?"Please select at least one option":null,condition:a=>a["Check weight not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}]);return{height:n,loadHeight:e,heightWeightFormSection:s}},Ia=()=>{const t=te();return{bloodPressureFormSection:K(()=>[{componentType:"Heading",name:"Blood pressure",grid:{s:"3"}},{componentType:"inputField",name:"Systolic",header:"Systolic Pressure",unit:"mmHg",type:"number",icon:f.systolicPressure,grid:{s:"4.5"},validation:e=>w.vitalsSystolic(e),disabled:e=>e["Check blood pressure not done"]},{componentType:"inputField",name:"Diastolic",header:"Diastolic pressure",unit:"mmHg",icon:f.diastolicPressure,type:"number",grid:{s:"4.5"},validation:e=>w.vitalsDiastolic(e),disabled:e=>e["Check blood pressure not done"]},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>w.vitalsSystolic(e.Systolic)==null&&w.vitalsDiastolic(e.Diastolic)==null?await t.updateBP(e.Systolic,e.Diastolic):!1},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check blood pressure not done",type:"single",label:"Blood pressure not done",value:"",grid:{s:"4.5"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Blood Pressure",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:f.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check blood pressure not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}])}},Pa=()=>{const t=te();return{temperaturePulseRateForm:K(()=>[{componentType:"Heading",name:"Temperature and rates",grid:{s:"3"}},{componentType:"inputField",name:"Temperature",header:"Temperature",unit:"°C",type:"number",icon:f.temprature,grid:{s:"4.5"},validation:e=>w.vitalsTemperature(e),disabled:e=>e["Check temperature not done"]},{componentType:"inputField",name:"Pulse",header:"Pulse rate",unit:"BMP",icon:f.pulse,type:"number",grid:{s:"4.5"},validation:e=>w.vitalsPulseRate(e),disabled:e=>e["Check pulse rate not done"]},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(w.vitalsTemperature(e.Temperature)==null){const s=t.getTemperatureStatus(e.Temperature);return await t.updateRate("temp",e.Temperature,"°C",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(w.vitalsPulseRate(e.Pulse)==null){const s=t.getPulseRateStatus(e.Pulse);return await t.updateRate("pulse",e.Pulse,"BMP",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check temperature not done",type:"single",label:"Temperature not done",grid:{s:"4.5"}},{componentType:"checkboxField",name:"Check pulse rate not done",type:"single",label:"Pulse not done",grid:{s:"4.5"}},{grid:{s:"3"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Temperature",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:f.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check temperature not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Pulse",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:f.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check pulse rate not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}])}},Ma=()=>{const t=te();return{respiratoryRateOxygenForm:K(()=>[{grid:{s:"3"}},{componentType:"inputField",name:"Respiratory rate",header:"Respiratory rate",unit:"BMP",icon:f.respiratory,type:"number",grid:{s:"4.5"},validation:e=>w.vitalsRespiratoryRate(e),disabled:e=>e["Check respiratory rate not done"]},{componentType:"inputField",name:"SAO2",header:"Oxygen saturation",unit:"%",icon:f.oxgenStaturation,type:"number",grid:{s:"4.5"},validation:e=>w.vitalsOxygenSaturation(e),disabled:e=>e["Check oxygen saturation not done"]},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(w.vitalsRespiratoryRate(e["Respiratory rate"])==null){const s=t.getRespiratoryRateStatus(e["Respiratory rate"]);return await t.updateRate("respiratory",e["Respiratory rate"],"BMP",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"Alert",grid:{s:"9"},condition:async e=>{if(w.vitalsOxygenSaturation(e.SAO2)==null){const s=t.getOxygenSaturationStatus(e.SAO2);return await t.updateRate("oxygen",e.SAO2,"%",s,4)}else return!1}},{grid:{s:"3"}},{componentType:"checkboxField",name:"Check respiratory rate not done",type:"single",label:"Respiratory rate not done",grid:{s:"4.5"}},{componentType:"checkboxField",name:"Check oxygen saturation not done",type:"single",label:"Oxygen saturation not done",value:"",grid:{s:"4.5"}},{grid:{s:"3"}},{componentType:"multiSelectInputField",header:"Specify Reason",name:"Respiratory rate",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:f.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check respiratory rate not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0},{componentType:"multiSelectInputField",header:"Specify Reason",name:"SAO2",isMultiple:!1,trackBy:"id",grid:{s:"4.5"},icon:f.search,options:[{id:1,name:"Patient uncooperative"},{id:2,name:"Machine not working"},{id:3,name:"Machine not available"}],validation:e=>!e||e.length===0?"Please select at least one option":null,condition:e=>e["Check oxygen saturation not done"],taggable:!1,hideSelected:!1,closeOnSelect:!0}])}},Fa={class:"ion-padding",slot:"content"},Ba=ee({__name:"Vitals",setup(t,{expose:n}){const e=ka(),s=Ia(),a=Pa(),c=Ma(),i=_(null),d=async()=>{if(!i.value){console.error("Form reference is not available");return}const u=i.value.getFormValues(),{newVitals:h,vitalsReasons:C}=await p(u);if(!h.length&&!C.length||i.value.validateForm()){qe("Vitals not saved");return}const P=new Ft().getObj();P.vitals.unsaved.push(...h,...C),await Y(P),i.value.resetForm(),le("Vitals saved successful")},p=async u=>{const h=[],C=[];for(const[P,O]of Object.entries(u))typeof O=="string"&&O||typeof O=="number"?h.push(await ke.buildValueNumber(P,parseInt(String(O)))):O!=null&&O.name&&C.push(await ke.buildValueText(P,O.name));return{newVitals:h,vitalsReasons:C}};de(async()=>{await e.loadHeight()});const g=K(()=>[...e.heightWeightFormSection.value,{grid:{s:"3"}},{grid:{s:"9"},componentType:"Dashes"},...s.bloodPressureFormSection.value,{grid:{s:"3"}},{grid:{s:"9"},componentType:"Dashes"},...a.temperaturePulseRateForm.value,...c.respiratoryRateOxygenForm.value]);return n({validateForm:()=>{var u;return(u=i.value)==null?void 0:u.validateForm()},onSubmit:d}),(u,h)=>{const C=T("ion-label"),P=T("ion-item"),O=T("ion-accordion"),z=T("ion-accordion-group"),ae=T("ion-row");return I(),F(ze,null,[r(Pt,{formData:g.value,ref_key:"formRef",ref:i},null,8,["formData"]),r(ae,null,{default:S(()=>[r(z,{ref:"accordionGroup",class:"previousView"},{default:S(()=>[r(O,{value:"first","toggle-icon-slot":"start",style:{"border-radius":"10px","background-color":"#fff"}},{default:S(()=>[r(P,{slot:"header",color:"light"},{default:S(()=>[r(C,{class:"previousLabel"},{default:S(()=>h[0]||(h[0]=[Q("Previous measurements")])),_:1,__:[0]})]),_:1}),y("div",Fa,[r(Mt)])]),_:1})]),_:1},512)]),_:1})],64)}}}),Aa=t=>{const n=_(""),e=(i,d)=>{i%1===0&&(n.value=i)},s=()=>{n.value===0&&console.log("First Tab"),console.log("All Tabs")},a=i=>{const d=document.getElementsByClassName("form-wizard-vue");if(!d.length)return;const p=d[0].getElementsByClassName("fw-body-list");if(!p.length)return;const g=p[0].querySelector(".fw-custom-title");g&&g.remove();const u=document.createElement("li");u.className="fw-custom-title",u.textContent=i||t,u.style.cssText="\n            text-align: center;\n            font-weight: 700;\n            font-size: 18px;\n            flex-grow: 0.08;\n            padding: 10px 0;\n        ",p[0].insertBefore(u,p[0].firstChild)},c=()=>{gt(()=>{const i=document.querySelector(".fw-footer-left .fw-btn");if(console.log("🚀 ~ changeBtnIconPosition ~ button:",i),!i)return;const d=i.querySelector("span"),p=i.querySelector("i");!d||!p||(i.removeChild(d),i.removeChild(p),i.appendChild(p),i.appendChild(d))})};return de(()=>{a()}),{currentTabIndex:n,onChangeCurrentTab:e,onTabBeforeChange:s,changeBtnIconPosition:c,addHeaderAboveList:a}},La={style:{width:"88vw",margin:"0 auto","margin-top":"10px"}},xa={class:"back_profile"},pn=ee({__name:"ConsultationPlan",setup(t,{expose:n}){const{onTabBeforeChange:e,onChangeCurrentTab:s,currentTabIndex:a}=Aa("Consultation Plan"),{printVisitSummary:c}=pa(),i=ht(),d=vt();_([]),_([]),_(!1);const p=_(!0),g=Ie(),u=pe(),h=Z(),C=Bt(),P=At(),O=Ut(),z=Lt();xt();const ae=Nt(),Ke=ie(),je=Ht(),{patient:R}=N(u),{vitals:Xe}=N(g),{investigations:Qe}=N(h),{diagnosis:Ye}=N(C),{substance:me}=N(ae),{selectedNCDMedicationList:ge}=N(O),{FootScreening:Ze,visualScreening:et,cvScreening:tt}=N(Ke),{sessionDate:he}=N(je),{apiStatus:Na}=N($t()),at=()=>{i.push("patientProfile")},ne=()=>z.NCDActivities.map(o=>({title:o,icon:""})),b=_(ne()),ve=_(null),fe=_(null),be=_(null),ye=_(null),Se=_(null),we=_(null),_e=_(null),V=()=>{var m;if(!b.value||b.value.length===0)return console.log("Tabs not yet initialized"),null;const o=a.value>=0&&a.value<b.value.length?a.value:0;switch((m=b.value[o])==null?void 0:m.title){case"Vital Signs":return"Vitals";case"Risk Assessment":return"RiskAssessment";case"Investigations":return"Investigations";case"Diagnosis":return"DiagnosisComponent";case"Complications Screening":return"ComplicationsScreening";case"Treatment Plan":return"TreatmentPlan";case"Next Appointment":return"NextAppointment";default:if(z.NCDActivities.length>0)switch(z.NCDActivities[0]){case"Vital Signs":return"Vitals";case"Risk Assessment":return"RiskAssessment";case"Investigations":return"Investigations";case"Diagnosis":return"DiagnosisComponent";case"Complications Screening":return"ComplicationsScreening";case"Treatment Plan":return"TreatmentPlan";case"Next Appointment":return"NextAppointment"}return null}},se=()=>{p.value=!1,setTimeout(()=>{a.value=0,p.value=!0},0)},De=()=>{const o=Ie();o.setVitals(o.getInitialVitals(R.value.ID))},L=async()=>{var m,D;const o=Et(he.value,"sessionDate","value")||B.sessionDate(),l=X("vitals");for(let v=0;v<b.value.length;v++){const x=b.value[v];if(x.title==="Vital Signs")b.value[v].icon=j(o,l)?"check":"";else if(x.title==="Risk Assessment"){const k=X("substanceAbuse");b.value[v].icon=j(o,k)?"check":""}else if(x.title==="Investigations"){const k=(D=(m=R==null?void 0:R.value)==null?void 0:m.labOrders)==null?void 0:D.saved,J=k==null?void 0:k.filter(rt=>B.toStandardHisFormat(o)===B.toStandardHisFormat(rt.order_date));b.value[v].icon=(J==null?void 0:J.length)>0?"check":""}else if(x.title==="Diagnosis"){const k=X("diagnosis");b.value[v].icon=j(o,k)?"check":""}else if(x.title==="Complications Screening"){const k=X("screening");b.value[v].icon=j(o,k)?"check":""}else x.title==="Treatment Plan"&&(ge.value.length>0?b.value[v].icon=Xt()?"check":"":b.value[v].icon="")}},j=(o,l)=>{const m=new Date(o);return m.setHours(0,0,0,0),l.some(D=>{const v=new Date(D.obs_datetime);return v.setHours(0,0,0,0),v.getTime()===m.getTime()})},nt=async()=>{var v,x,k,J;const o=[],l=await Ae(et.value),m=await ca(Ze.value),D=await Ae(tt.value);l.length>0&&o.push({concept_id:await A.getConceptID("Visual acuity",!0),value_text:"visual acuity test",obs_datetime:A.getSessionDate(),child:l}),m.length>0&&o.push({concept_id:await A.getConceptID("Foot check",!0),value_text:"foot screening",obs_datetime:A.getSessionDate(),child:m}),D.length>0&&o.push(...D),o.length>0&&((J=(k=(x=(v=R.value).screening)!=null?x:v.screening={}).unsaved)!=null||(k.unsaved=[]),R.value.screening.unsaved.push(...o),le("Complications saved successfully"))},st=async()=>{var l,m,D,v;(v=(D=(m=(l=R.value).substanceAbuse)!=null?m:l.substanceAbuse={}).unsaved)!=null||(D.unsaved=[]);const o=await da(me.value);o.length>0?(R.value.substanceAbuse.unsaved.push(...o),le("Substance abuse saved successfully")):qe("Substance abuse not saved")},it=async()=>{$.getUserID(),R.value.patientID;const o=zt();if(!Be.isEmpty(o.selectedMedicalAllergiesList)){const l=Pe(),m=o.selectedMedicalAllergiesList.map(D=>({concept_id:985,obs_datetime:$.getSessionDate(),value_coded:D.concept_id,location_id:l.facilityLocation.code}));Qt(m),o.clearSelectedMedicalAllergiesList()}if(!Be.isEmpty(P.nonPharmalogicalTherapyAndOtherNotes)){const l=Pe(),m=[{concept_id:2688,obs_datetime:$.getSessionDate(),value_text:P.nonPharmalogicalTherapyAndOtherNotes,location_id:l.facilityLocation.code}];await Yt(m)}await Zt(),await ea().saveNonPharmaTherapyPatientData()},Te=async()=>{const o=[{ref:ve,name:"Vitals"},{ref:fe,name:"Risk Assessment"},{ref:be,name:"Investigations"},{ref:ye,name:"Diagnosis"},{ref:Se,name:"Complications Screening"},{ref:we,name:"Treatment Plan"},{ref:_e,name:"Next Appointment"}];for(const l of o)if(l.ref.value&&typeof l.ref.value.onSubmit=="function")try{await l.ref.value.onSubmit()}catch(m){console.error("Error calling ".concat(l.name," onSubmit:"),m)}else console.log("".concat(l.name," component ref not available or no onSubmit method"));await it(),await st(),await nt(),await Wt(),await Y(R.value),await ot(),i.push("patientProfile")},ot=async()=>{await Je(ua,{class:"small-confirm-modal "})!=="dismiss"&&await c()};return de(async()=>{if(z.NCDActivities.length===0){i.push("patientProfile");return}ie().resetScreening(),b.value=ne(),await L(),(a.value===void 0||a.value<0)&&(a.value=0,console.log("Setting initial tab index to 0"))}),H(Xe,async()=>{await L()},{deep:!0}),H(R,async()=>{ie().resetScreening(),await L()},{deep:!0}),H(he,async()=>{await L()},{deep:!0}),H(Qe,async()=>{await L()},{deep:!0}),H(Ye,async()=>{await L()},{deep:!0}),H(me,async()=>{await L()},{deep:!0}),H(ge,async()=>{await L()},{deep:!0}),H(d,async o=>{se(),De(),b.value=ne()},{deep:!0}),H(R,async(o,l)=>{o.ID!=l.ID&&(se(),De())},{deep:!0}),n({saveData:Te,markWizard:L,refreshWizard:se}),(o,l)=>(I(),Oe(U(yt),null,{default:S(()=>[r(Vt),r(U(ce),{fullscreen:!0},{default:S(()=>[r(Jt),y("div",La,[p.value?(I(),Oe(U(ft),{key:0,ref:"wizard","vertical-tabs":"","navigable-tabs":"","scrollable-tabs":"",startIndex:0,doneButton:{text:"Finish",icon:"check",hideText:!1,hideIcon:!1,disabled:!1},"custom-tabs":b.value,beforeChange:U(e),onChange:U(s),"onComplete:wizard":l[1]||(l[1]=m=>Te())},{default:S(()=>[y("div",null,[y("div",xa,[r(ue,{name:"Back to profile",iconSlot:"start",fill:"clear",icon:U(bt),"font-weight":"600",onClick:l[0]||(l[0]=m=>at())},null,8,["icon"])])]),E(y("div",null,[r(Ba,{ref_key:"vitalsRef",ref:ve},null,512)],512),[[W,V()=="Vitals"]]),E(y("div",null,[r(la,{ref_key:"riskAssessmentRef",ref:fe},null,512)],512),[[W,V()=="RiskAssessment"]]),E(y("div",null,[r(Ra,{ref_key:"investigationsRef",ref:be},null,512)],512),[[W,V()=="Investigations"]]),E(y("div",null,[r(qt,{ref_key:"diagnosisRef",ref:ye},null,512)],512),[[W,V()=="DiagnosisComponent"]]),E(y("div",null,[r(Gt,{ref_key:"complicationsRef",ref:Se},null,512)],512),[[W,V()=="ComplicationsScreening"]]),E(y("div",null,[r(Kt,{ref_key:"treatmentPlanRef",ref:we},null,512)],512),[[W,V()=="TreatmentPlan"]]),E(y("div",null,[r(jt,{ref_key:"nextAppointmentRef",ref:_e},null,512)],512),[[W,V()=="NextAppointment"]])]),_:1},8,["custom-tabs","beforeChange","onChange"])):q("",!0)])]),_:1})]),_:1}))}});export{pn as default};
