import{d as u,p as v,e as i,l as d,a as R}from"./index-BCcyz-uj.js";import{g as h,R as f}from"./ReportTable-BkMMfyR7.js";import{R as D,L as _}from"./report_service-BAC2IhjH.js";import{A as L}from"./age_groups-BkW1n_F5.js";import{l as w}from"./lodash-Dt8AsbQm.js";import{d as y,r as n,c as p,y as S,f as A}from"./vendor-BEKTmkXc.js";import"./apexcharts-BW0LSm5R.js";import"./chartjs-BUeEi5jn.js";import"./barcode-qrcode-reader-o0mSiBQi.js";class G extends D{constructor(){super(),this.programId=_}buildLabPatientLevelData(a){return a.flatMap(e=>e.measures.map(t=>({...e,test_name:t.name,result:"".concat(t.modifier," ").concat(t.value)})))}buildLabResultRowData(a,e,t){const r=a.filter(s=>s.gender===t&&s.age_group===e).map(({patient_id:s})=>s);return{ageGroup:e,gender:t,viral_load:r}}buildLabDisaggregatedData(a){const e=[],t=[];return L.forEach(r=>{e.push(this.buildLabResultRowData(a,r,"M")),t.push(this.buildLabResultRowData(a,r,"F"))}),[...t,...e]}async getLabResultReport(){const a=await this.getReport("lab_test_results");if(!a)return{};const e=this.buildLabPatientLevelData(a),t=this.buildLabDisaggregatedData(e);return{patientLevelData:e,disaggregatedData:t}}}const U=y({__name:"LabResultsReport",setup(c){const a=n("-"),e=n(""),t=[h("patient_id")],r=n({}),s=p(()=>w.isEmpty(r.value)?[]:e.value==="disaggregated"?r.value.disaggregatedData:r.value.patientLevelData),m=p(()=>e.value==="disaggregated"?[{path:"ageGroup",label:"Age Group"},{path:"gender",label:"Gender",formatter:u},{path:"viral_load",label:"HIV viral load",drillable:!0}]:[{path:"arv_number",label:"ARV Number",preSort:v,initialSort:!0},{path:"gender",label:"Gender",formatter:u},{path:"birthdate",label:"Birthdate",formatter:i},{path:"order_date",label:"Ordered",formatter:i},{path:"test",label:"Specimen"},{path:"test_name",label:"Test"},{path:"result",label:"Result"},{path:"result_date",label:"Released",formatter:i}]),b=p(()=>[{id:"type",label:"Select report type",required:!1,type:"select",options:[{label:"Disaggregated",value:"disaggregated"},{label:"Patient level",value:"patient_level"}],onUpdate:o=>{e.value=o.value}}]);async function g(o){await d.show();try{const l=new G;l.setStartDate(o.dateRange.startDate),l.setEndDate(o.dateRange.endDate),l.setOccupation(o.occupation),a.value=l.getDateIntervalPeriod(),r.value=await l.getLabResultReport()}catch(l){R("Unable to load report data"),console.error(l)}await d.hide()}return(o,l)=>(A(),S(f,{"report-type":"Clinic",title:"Lab Test Result(s) Report",columns:m.value,rows:s.value,period:a.value,"row-action-buttons":t,"custom-filters":b.value,"use-date-range-filter":"","use-secure-export":"",onGenerate:g},null,8,["columns","rows","period","custom-filters"]))}});export{U as default};
