var Rt=Object.defineProperty;var Ft=(e,t,n)=>t in e?Rt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var X=(e,t,n)=>Ft(e,typeof t!="symbol"?t+"":t,n);import{d as J,af as oe,M as ot,ag as Ee,ae as it,aZ as Me,dx as rt,dC as lt,ab as Pe,a1 as he,E as fe,G as $e,a8 as ge,I as Oe,be as Je,N as Ce,a_ as dt,R as ze,H as v,O as te,f as M,J as l,l as o,k as D,K as x,Q as R,e as A,F as de,P as ke,aT as G,cn as ct,r as k,c as ie,w as Ie,a as we,u as L,L as Ae,a7 as ut,j as Ht,ak as Ut,n as Vt,b4 as Qe,cE as qt,D as Te,m as Z,_ as Jt,a2 as pt,$ as zt,a0 as Wt,aa as Gt,p as pe,aR as Kt,aQ as Yt,ar as jt,aO as Qt,bo as Xt,bj as Zt,a5 as en,aI as tn}from"./vendor-Bg3Z5m3L.js";import{M as ve,aN as nn,S as O,q as ce,H as w,aI as Be,K as re,u as z,_ as K,aw as Xe,k as ee,O as me,aJ as j,ax as an,t as ne,aC as Ue,v as sn,bb as on,bc as rn,bm as ln,s as Ve,a_ as dn,W as mt,U as Ze,n as ht,ba as cn,B as ft,bl as un,N as Y,aQ as gt,af as Fe,bn as pn,aS as vt,P as _t,ae as mn,aK as hn,bo as fn,bp as gn,aq as vn,aE as xe,a0 as _n,aX as ae,A as Le,bq as yn,d as Dn,au as He,D as bn,av as Sn,y as et}from"./index-CuK-0HSm.js";import{D as Cn}from"./DashBox-_GvrCatW.js";import{B as W}from"./BasicForm-lr85st0y.js";import{u as qe,P as yt,L as In}from"./lab_order-CAc-DrlU.js";import{v as tt}from"./group_validation-BN-a6o_Z.js";import{l as Se}from"./lodash-NJiRuGo9.js";import{g as Mn,a as Dt,D as se}from"./drug_prescription_service-CAPQL9p_.js";import{A as On}from"./ncd_appointment_service-ysZkLltZ.js";import{D as kn}from"./DateInputField-BzhpFJv3.js";import{D as bt}from"./drug_service-DFf6DwlP.js";const wn=J({components:{IonButtons:dt,IonButton:Ce,IonModal:Je,IonHeader:Oe,IonContent:ge,IonToolbar:$e,IonTitle:fe,IonItem:he,IonList:Pe,IonAvatar:lt,IonImg:rt,IonLabel:Me,IonPage:it,IonMenu:Ee,BasicForm:W,IonFooter:ot,DynamicButton:ve},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{type:Object,default:{}},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},computed:{...oe(z,["patient"]),...oe(qe,["labResults"])},mounted(){},methods:{dismiss(){ze.dismiss()},async saveResults(){const e=await this.buildResults();this.patient.labOrders.results=[{encounter_id:"",date:w.sessionDate(),measures:e,test_id:this.labResults[0].id}];let t=!1;for(let n=0;n<this.patient.labOrders.unsaved.length;n++)if(this.patient.labOrders.unsaved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.unsaved[n].tests&&this.patient.labOrders.unsaved[n].tests.length>0){this.patient.labOrders.unsaved[n].tests[0].result=e,t=!0;break}if(!t){for(let n=0;n<this.patient.labOrders.saved.length;n++)if(this.patient.labOrders.saved[n].tests[0].id===this.labResults[0].id&&this.patient.labOrders.saved[n].tests&&this.patient.labOrders.saved[n].tests.length>0){this.patient.labOrders.saved[n].tests[0].result=e;break}}await Be(this.patient),re("Saved successfully"),this.$emit("saved")},async buildResults(){let e=[];return await Promise.all(this.labResults[1].data.rowData[0].colData.map(async t=>{var a;let n;O.getUseIndexDBStatus()||O.getModsStatus()?n=await ce("testResultIndicators",{whereClause:{test_type_id:t.id}}):n=await yt.getTestIndicatorsWithID(t.id),e.push({indicator:{name:(a=n[0])==null?void 0:a.name,concept_id:t.id},value:t.value.name||t.value||"not done",value_modifier:"",value_type:"text"})})),e},async nav(e,t){const n=qe();t=="not_save"?(await nn(),n.setLabResults(!1)):n.setLabResults(!0),this.dismiss(),this.$router.push(e)}}}),Nn={class:"modal_wrapper"},Ln={class:"center text_12"};function An(e,t,n,a,s,u){const r=v("ion-title"),d=v("ion-button"),p=v("ion-buttons"),h=v("ion-toolbar"),_=v("ion-header"),g=v("basic-form"),b=v("ion-row"),H=v("ion-content"),C=v("DynamicButton"),f=v("ion-footer"),E=v("ion-modal");return M(),te(E,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[2]||(t[2]=B=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:l(()=>[o(_,null,{default:l(()=>[o(h,null,{default:l(()=>[o(r,null,{default:l(()=>[D("b",null,"Enter lab results for ("+x(e.labResults[0].name)+") test",1)]),_:1}),o(p,{slot:"end"},{default:l(()=>[o(d,{onClick:t[0]||(t[0]=B=>e.$emit("closeModal"))},{default:l(()=>[...t[3]||(t[3]=[R("Close",-1)])]),_:1})]),_:1})]),_:1})]),_:1}),o(H,{class:"ion-padding"},{default:l(()=>[D("div",Nn,[D("div",Ln,[o(b,null,{default:l(()=>[o(g,{contentData:e.labResults},null,8,["contentData"])]),_:1})])])]),_:1}),o(f,{translucent:!0},{default:l(()=>[o(h,null,{default:l(()=>[o(C,{onClick:t[1]||(t[1]=B=>e.saveResults()),name:"Save",fill:"clear",iconSlot:"icon-only",style:{float:"right"}})]),_:1})]),_:1})]),_:1},8,["is-open","keyboard-close"])}const Bn=K(wn,[["render",An],["__scopeId","data-v-c688c775"]]),En=J({components:{IonButtons:dt,IonButton:Ce,IonModal:Je,IonHeader:Oe,IonContent:ge,IonToolbar:$e,IonTitle:fe,IonItem:he,IonList:Pe,IonAvatar:lt,IonImg:rt,IonLabel:Me,IonPage:it,IonMenu:Ee,BasicForm:W,IonFooter:ot,DynamicButton:ve},data(){return{popoverStatus:null}},props:{keyboardClose:{type:Boolean,default:!1},keepContentsMounted:{type:Boolean,default:!1},content:{default:[]},popoverOpen:{type:Boolean,default:!1},event:{type:Event,default:""},title:{type:String,default:""}},methods:{dismiss(){ze.dismiss()},nav(e,t){this.dismiss(),this.$router.push(e)}}}),Pn={class:"modal_wrapper"},$n={class:"center text_12"};function Tn(e,t,n,a,s,u){const r=v("ion-title"),d=v("ion-button"),p=v("ion-buttons"),h=v("ion-toolbar"),_=v("ion-header"),g=v("ion-col"),b=v("ion-row"),H=v("ion-content"),C=v("ion-modal");return M(),te(C,{"is-open":e.popoverOpen,"show-backdrop":!0,onDidDismiss:t[1]||(t[1]=f=>e.$emit("closePopoover",!1)),"keyboard-close":e.keyboardClose},{default:l(()=>[o(_,null,{default:l(()=>[o(h,null,{default:l(()=>[o(r,null,{default:l(()=>[D("b",null,"Lab results for ("+x(e.content.name)+") test",1)]),_:1}),o(p,{slot:"end"},{default:l(()=>[o(d,{onClick:t[0]||(t[0]=f=>e.$emit("closeModal"))},{default:l(()=>[...t[2]||(t[2]=[R("Close",-1)])]),_:1})]),_:1})]),_:1})]),_:1}),o(H,{class:"ion-padding"},{default:l(()=>[D("div",Pn,[D("div",$n,[o(b,null,{default:l(()=>[(M(!0),A(de,null,ke(e.content.result,(f,E)=>(M(),te(g,{size:"4",key:E},{default:l(()=>[o(b,null,{default:l(()=>[o(g,{size:"8"},{default:l(()=>[R(x(f.indicator.name),1)]),_:2},1024),o(g,{class:"bold",size:"0.5"},{default:l(()=>[...t[3]||(t[3]=[R(":",-1)])]),_:1}),o(g,{class:"bold",size:"2"},{default:l(()=>[R(x(f.value),1)]),_:2},1024)]),_:2},1024)]),_:2},1024))),128))]),_:1})])])]),_:1})]),_:1},8,["is-open","keyboard-close"])}const xn=K(En,[["render",Tn],["__scopeId","data-v-327a3d6c"]]),Rn=J({__name:"AddLabTestModal",setup(e){const t=z(),{patient:n}=G(t);ct();const a=ee,s=k(""),u=k(""),r=k(""),d=k(""),p=k(null),h=ie(()=>[{componentType:"multiSelectInputField",name:"test",header:"Test",options:d.value,grid:{s:"6"},icon:ee.search,validation:Xe.required,onChange:C=>{s.value=C.name}},{componentType:"multiSelectInputField",name:"specimen",header:"Specimen",grid:{s:"6"},icon:ee.search,validation:Xe.required,value:r.value.length==1?r.value[0]:"",options:r.value.length>1?r.value:[]}]);Ie(s,async C=>{if(C)try{r.value=await _(C)}catch(f){r.value=[]}else r.value=[]});const _=async C=>{let f;return O.getUseIndexDBStatus()||O.getModsStatus()?f=await ce("specimens"):f=await me.getSpecimens("",1e3),await j.getConceptSet(C,"",{names:f.map(B=>B.name)})};Ie(n,async()=>{u.value=[...n.value.labOrders.saved,...n.value.labOrders.unsaved]},{deep:!0});const g=()=>{ze.dismiss()},b=async()=>O.getUseIndexDBStatus()||O.getModsStatus()?await ce("testTypes"):await me.getTestTypes(),H=async()=>{var S,I,P,q,U,F;if(p.value.validateForm()){ne("Test not saved");return}if(!p.value){console.error("Form reference is not available");return}const C=p.value.getFormValues(),f=[{concept_id:C.test.concept_id,name:C.test.name,specimen:C.specimen.name,reason:"Routine",specimenConcept:await j.getConceptID(C.specimen.name,!0)}];let B=(await me.buildLabOrders("",f))[0];B.order_date=B.date,B.specimen.name=C.specimen.name,B.tests[0].name=C.test.name;const c=JSON.parse(JSON.stringify(n.value));(P=(I=(S=c.labOrders)!=null?S:c.labOrders={}).unsaved)!=null||(I.unsaved=[]),(F=(U=(q=c.labOrders)!=null?q:c.labOrders={}).saved)!=null||(U.saved=[]),c.labOrders.unsaved.push(B),await Be(c),u.value=[...c.labOrders.saved,...c.labOrders.unsaved],g()};return we(async()=>{d.value=await b()}),(C,f)=>{const E=v("ion-icon"),B=v("ion-col"),c=v("ion-row"),S=v("ion-footer");return M(),A(de,null,[o(L(Oe),{style:{display:"flex","justify-content":"space-between"}},{default:l(()=>[o(L(fe),{class:"modalTitle"},{default:l(()=>[...f[2]||(f[2]=[R("Add Lab Test",-1)])]),_:1}),o(E,{onClick:f[0]||(f[0]=I=>g()),style:{"padding-top":"10px","padding-right":"10px"},icon:L(a).cancel},null,8,["icon"])]),_:1}),o(L(ge),{fullscreen:!0,class:"ion-padding",style:{"--background":"#fff"}},{default:l(()=>[o(an,{formData:h.value,ref_key:"formRef",ref:p},null,8,["formData"])]),_:1}),o(S,{collapse:"fade",class:"ion-no-border"},{default:l(()=>[o(c,null,{default:l(()=>[o(B,null,{default:l(()=>[o(ve,{onClick:f[1]||(f[1]=I=>H()),name:"Save",fill:"solid",style:{float:"right",margin:"2%",width:"130px"}})]),_:1})]),_:1})]),_:1})],64)}}}),Fn=K(Rn,[["__scopeId","data-v-3e17251e"]]),Hn=J({name:"CheckInConfirmationModal",components:{IonModal:Je,IonTitle:fe,IonButton:Ce,IonContent:ge,IonIcon:Ae,DynamicButton:ve},props:{isOpen:{type:Boolean,required:!0,default:!1},closeModalFunc:{type:Function,required:!0},onYes:{type:Function,required:!0},onNo:{type:Function,required:!0},title:{type:String,required:!0}},methods:{closeCircleOutline(){return ut},closeModal(){this.closeModalFunc()}}}),Un={class:"modal-header"},Vn={class:"modal-body"},qn={class:"modal-footer"};function Jn(e,t,n,a,s,u){const r=v("ion-title"),d=v("ion-icon"),p=v("ion-button"),h=v("DynamicButton"),_=v("ion-content"),g=v("ion-modal");return M(),te(g,{"is-open":e.isOpen,"show-backdrop":!0,onDidDismiss:e.closeModal},{default:l(()=>[o(_,{class:"modal-wrapper"},{default:l(()=>[D("div",Un,[o(r,{class:"modal-title"},{default:l(()=>[R(x(e.title),1)]),_:1}),o(p,{fill:"clear",class:"close-btn",onClick:e.closeModal},{default:l(()=>[o(d,{icon:e.closeCircleOutline()},null,8,["icon"])]),_:1},8,["onClick"])]),D("div",Vn,[Ht(e.$slots,"default",{},()=>[t[0]||(t[0]=R(" Sending the patient to the lab will pause this consultation. You'll return to the waiting list while waiting for lab results this patient. ",-1))],!0)]),D("div",qn,[o(p,{fill:"outline",color:"danger",class:"action-btn cancel-btn",onClick:e.onNo},{default:l(()=>[...t[1]||(t[1]=[R(" Cancel ",-1)])]),_:1},8,["onClick"]),o(h,{name:"Confirm",color:"success",class:"action-btn confirm-btn",fill:"solid",onClick:e.onYes},null,8,["onClick"])])]),_:3})]),_:3},8,["is-open","onDidDismiss"])}const zn=K(Hn,[["render",Jn],["__scopeId","data-v-d754e58e"]]),Wn={class:"container"},Gn={class:"table-responsive"},Kn=J({__name:"LabOrdersList",props:{propOrders:{default:()=>[]}},setup(e){const t=e,n=Ut(),a=ct(),s=z(),u=qe(),r=Ue(),d=sn(),{patient:p}=G(s),{labResults:h}=G(u),{investigations:_}=G(r),{patientsWaitingForVitals:g,patientsWaitingForConsultation:b,patientsWaitingForLab:H,patientsWaitingForDispensation:C}=G(d),f=k(),E=k([]),B=k(["Lab Test","Specimen","Accession Number","Order Date","Result","Action"]);k(!0);const c=k(!1),S=k(!1),I=k([]),P=k([]),q=k([]);k([]),k(!1);const U=k(""),F=k(!1),_e=k(!1),Mt=k(""),Ne=ee;on(["#006401"]),rn(["#636363"]);const We=k({responsive:!0,select:!1,layout:{topStart:"buttons",topEnd:"search",bottomStart:"info",bottomEnd:"paging"},ordering:!1,buttons:[{text:" <b>+ Add other tests </b>",className:"add-test text-white",action:async()=>{await At()}},{text:" <b>Send to Lab </b>",className:"send-lab text-white",attr:{id:"send-to-lab-btn"},action:async()=>{await Bt()}}]});ie(()=>q.value.some(m=>m.btn&&m.btn.includes("enter_results")));const Ot=async()=>{F.value=!1,await ue()},kt=()=>{const m=document.getElementById("send-to-lab-btn");m&&(m.style.display="none")},wt=()=>{const m=document.getElementById("send-to-lab-btn");m&&(m.style.display="inline")},Nt=()=>{Ze.getProgramID()==14&&!Ze.isLabTechnician()&&c.value?wt():kt()},Lt=async m=>{const N=[{concept_id:await j.getConceptID(m.name,!0),name:m.name,specimen:m.specimen,reason:"Routine",specimenConcept:await j.getConceptID(m.specimen,!0)}];let i=(await me.buildLabOrders("",N))[0];i.order_date=i.date,i.specimen.name=await j.getConceptName(i.specimen.concept_id),i.tests[0].name=await j.getConceptName(i.tests[0].concept_id),p.value.labOrders.unsaved.push(i),await Be(p.value)},At=async()=>{await ht(Fn,{class:"lab-results-modal"},!0,{title:"name"}),await ue()},Bt=async()=>{S.value=!0},Et=async()=>{try{const m=String(localStorage.getItem("locationID"));if(!m){Ve("Location not found");return}await dn.addPatientToStage(p.value,"LAB"),await d.refresh(m),S.value=!1,await n.push("home"),re("The patient successfully sent to the lab. You may now attend to other patients.")}catch(m){console.error("Error sending to lab:",m),Ve("Failed to send patient to lab")}finally{S.value=!1}},Ge=()=>{S.value=!1},Ke=async()=>{var N,y,i,V,$;if(!((N=p.value)!=null&&N.labOrders)||(I.value=[...(i=(y=p.value)==null?void 0:y.labOrders)==null?void 0:i.saved,...($=(V=p.value)==null?void 0:V.labOrders)==null?void 0:$.unsaved],!I.value))return;const m=await I.value.filter(T=>w.toStandardHisFormat(w.sessionDate())===w.toStandardHisFormat(T.order_date));m.length>0?_.value[0].selectedData=m:_.value[0].selectedData=""},Pt=async(m,N)=>{var i,V,$;if(await mt("Do you want to delete ".concat(m.tests[0].name," ?"),N)){const T=JSON.parse(JSON.stringify(p.value));T.labOrders.saved.some(le=>{var De,be;return le.order_date===m.order_date&&((De=le==null?void 0:le.tests[0])==null?void 0:De.name)==((be=m==null?void 0:m.tests[0])==null?void 0:be.name)})?(T.labOrders.saved=Ye(T.labOrders.saved,m.tests[0].name,m.order_date),($=(V=(i=T.labOrders)!=null?i:T.labOrders={}).voided)!=null||(V.voided=[]),T.labOrders.voided.push({orderId:m.id,reason:"Mistake entry"})):T.labOrders.unsaved=Ye(T.labOrders.unsaved,m.tests[0].name,m.date),await Be(T)}await ue()},Ye=(m,N,y)=>m.filter(i=>(i.order_date===y&&(i.tests=i.tests.filter(V=>V.name!==N)),i.tests.length>0)),$t=async m=>{let N;O.getUseIndexDBStatus()||O.getModsStatus()?N=await ce("testResultIndicators",{whereClause:{test_type_id:m.concept_id}}):N=await yt.getTestIndicatorsWithID(m.concept_id);const y=[m,{validationStatus:"",data:{rowData:[{colData:[]}]}}];N.forEach(i=>{let V={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:""};if(i.name=="RBS"&&(V={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),i.name=="FBS"&&(V={inputHeader:i.name,value:"",colSize:3,id:i.concept_id,name:i.name,required:!0,eventType:"input",alertsErrorMassage:"",unit:"mg/dL"}),i.name=="MRDT"||i.name=="Tuberculosis program"||i.name=="Vdrl"||i.name=="Hepatitis B"||i.name=="Lam"||i.name=="CrAg"||i.name=="CD4 count"||i.name=="Leukocytes"||i.name=="Protein"||i.name=="Nitrite"||i.name=="Urine Ketones"||i.name=="HIV test"){let $=[];(i.name=="MRDT"||i.name=="Vdrl"||i.name=="Hepatitis B"||i.name=="CrAg"||i.name=="Lam")&&($=[{id:"1",name:"Positive"},{id:"2",name:"Negative"},{id:"3",name:"Invalid"}]),i.name=="Tuberculosis program"&&($=[{id:"1",name:"Scanty"},{id:"2",name:"Negative"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"}]),i.name=="CD4 count"&&($=[{id:"1",name:"below reference line"},{id:"2",name:"above reference line"}]),(i.name=="Leukocytes"||i.name=="Protein"||i.name=="Nitrite"||i.name=="Ketones"||i.name=="Urine Ketones")&&($=[{id:"2",name:"Negative"},{id:"1",name:"Trace"},{id:"3",name:"1+"},{id:"4",name:"2+"},{id:"5",name:"3+"},{id:"6",name:"4+"}]),i.name=="HIV test"&&($=[{id:"2",name:"Positive"},{id:"1",name:"Negative"},{id:"3",name:"Invalid"}]),V={inputHeader:i.name,icon:ee.search,value:"",name:"units",eventType:"input",alertsErrorMassage:"",isSingleSelect:!0,trackBy:"id",multiSelectData:$,id:i.concept_id,idName:"district_id"}}y[1].data.rowData[0].colData.push(V)}),u.setLabResults(y),F.value=!0,I.value=[...p.value.labOrders.saved,...p.value.labOrders.unsaved]},Tt=async m=>{U.value=m,_e.value=!0},ue=async()=>{if(!p.value.labOrders)return;I.value=[...p.value.labOrders.saved,...p.value.labOrders.unsaved];const m=xt(I.value),N=O.getProgramID()==32?[["FBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"FBS",specimen:"Blood"}),"'>Order Test</button> ")],["HbA1c","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"HbA1c",specimen:"Blood"}),"'>Order Test</button> ")],["RBS","Blood","","","",'<button class="btn btn-outline-success btn-sm order-btn" data-id=\''.concat(JSON.stringify({name:"RBS",specimen:"Blood"}),"'>Order Test</button> ")]]:[],y=N.filter($=>!m.some(T=>T[0]===$[0])),i=m.filter($=>N.some(T=>T[0]===$[0])),V=m.filter($=>!i.some(T=>T[0]===$[0]));E.value=[...i,...y,...V],Nt(),await Ke(),Qe.use(qt)},xt=(m,N)=>(c.value=!1,m.length>0?m.flatMap(y=>y.tests.flatMap(i=>{var le,De,be,je;const V='<button class="btn btn-outline-success btn-sm result-btn" data-id=\''.concat(JSON.stringify(i),"'>Enter Result</button> "),$='<button class="btn btn-outline-secondary btn-sm attach-btn" data-id=\''.concat(JSON.stringify(i),"'>").concat(Ne.attach2,"</button>"),T='<button class="btn btn-outline-secondary btn-sm view-btn" data-id=\''.concat(JSON.stringify(i),"'>").concat(Ne.view2,"</button> ");let ye=V+$;((le=i==null?void 0:i.result)==null?void 0:le.length)==1?ye=(i==null?void 0:i.result)!=null?((De=i==null?void 0:i.result[0])==null?void 0:De.value_modifier)+((be=i==null?void 0:i.result[0])==null?void 0:be.value):null:((je=i==null?void 0:i.result)==null?void 0:je.length)>1?(i==null||i.result,ye=T):y!=null&&y.accession_number&&(c.value=!0);let Re="";return y!=null&&y.accession_number?Re='<button class="btn btn-outline-secondary btn-sm" data-id=\''.concat(JSON.stringify(y),"'>").concat(Ne.print2,"</button>"):ye="",[[i==null?void 0:i.name,y==null?void 0:y.specimen.name,(y==null?void 0:y.accession_number)||"",w.toStandardHisFormat(y==null?void 0:y.order_date),ye,Re+'\n                        <button class="btn btn-outline-danger btn-sm delete-btn" data-id=\''.concat(JSON.stringify(y),"'>").concat(Ne.delete2,"</button>\n                        ")]]})):[]);return we(async()=>{O.getProgramID()==14&&We.value.buttons.push(),await Ke(),await ue(),Vt(()=>{const m=f.value.dt;m.columns.adjust().draw(),m.on("click",".result-btn",N=>{const y=N.target.getAttribute("data-id");$t(JSON.parse(y))}),m.on("click",".view-btn",N=>{const y=N.target.getAttribute("data-id");Tt(JSON.parse(y))}),m.on("click",".delete-btn",N=>{const y=N.target.getAttribute("data-id");Pt(JSON.parse(y),N)}),m.on("click",".order-btn",N=>{const y=N.target.getAttribute("data-id");Lt(JSON.parse(y))})}),I.value=t.propOrders,Mt.value=new ln(p.value.patientID),P.value=await O.getUserRoles()}),Ie(()=>a,async()=>{await ue()},{deep:!0}),Ie(()=>p.value,async()=>{await ue()},{deep:!0}),(m,N)=>(M(),A("div",Wn,[D("div",Gn,[o(L(Qe),{ref_key:"dataTable",ref:f,options:We.value,data:E.value,class:"display nowrap modern-table",width:"100%"},{default:l(()=>[D("thead",null,[D("tr",null,[(M(!0),A(de,null,ke(B.value,y=>(M(),A("th",{key:y},x(y),1))),128))])])]),_:1},8,["options","data"])]),o(xn,{popoverOpen:_e.value,content:U.value,onCloseModal:N[0]||(N[0]=y=>_e.value=!1)},null,8,["popoverOpen","content"]),o(Bn,{popoverOpen:F.value,onSaved:Ot,onCloseModal:N[1]||(N[1]=y=>F.value=!1)},null,8,["popoverOpen"]),o(zn,{isOpen:S.value,title:"Send Patient to Lab",closeModalFunc:Ge,onYes:Et,onNo:Ge},null,8,["isOpen"])]))}}),Yn=K(Kn,[["__scopeId","data-v-d6d881a9"]]),jn=J({data:()=>({userRole:"",ready:!1,userRoleSettings:{}}),watch:{$route:{async handler(e){this.userRole=O.getUserRoles();const t=O.getProgramID(),n=O.getProgramName();this.userRole=="Lab"&&t==14&&(this.userRoleSettings={url:"home",btnName:"Back to home",stepperTitle:"Laboratory"}),t==14&&this.userRole!="Lab"&&(this.userRoleSettings={url:"home",btnName:"Go to waiting list",stepperTitle:"Consultation Plan"}),t==12&&(this.userRoleSettings={url:"contact",btnName:"Back"}),n=="LABOUR AND DELIVERY PROGRAM"&&(this.userRoleSettings={url:"labour/labourHome",btnName:"Back to home"}),n=="PNC PROGRAM"&&(this.userRoleSettings={url:"pnc/home",btnName:"Back to home"})},immediate:!0,deep:!0}}}),nt=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Skull",value:"Skull",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mastoid",value:"Mastoid",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"ParaSinuses",value:"ParaSinuses",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Optic Foramen",value:"PVD",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Orbits",value:"Orbits",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Nasal Bone",value:"Nasal Bone",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Mandible",value:"Mandible",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TMJs",value:"TMJs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Zygomatic",value:"Zygomatic",checked:!1}]}}],Qn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Neck",value:"Neck",checked:!1}]}}],Xn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Chest",value:"Chest",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Heart",value:"Heart",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sternum",value:"Sternum",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ribs",value:"Ribs",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SCJ",value:"SCJ",checked:!1}]}}],Zn=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Abdomen",value:"Abdomen",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"IVP",value:"IVP",checked:!1}]}}],ea=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Clavicle",value:"Clavicle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Shoulder",value:"Shoulder",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Scapula",value:"Scapula",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Humerus",value:"Humerus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Elbow",value:"Elbow",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Forearm",value:"Forearm",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Wrist",value:"Wrist",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hand",value:"Hand",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Phalanges",value:"Phalanges",checked:!1}]}}],ta=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"CSpine",value:"CSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"TSpine",value:"TSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"LSpine",value:"LSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"SSpine",value:"SSpine",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Coccyx",value:"Coccyx",checked:!1}]}}],na=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Pelvis",value:"Pelvis",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Sacroillac Joints",value:"Sacroillac Joints",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Hip",value:"Hip",checked:!1}]}}],aa=[{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Femur",value:"Femur",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Knee",value:"Knee",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Patella",value:"Patella",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Leg",value:"Leg",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Ankle",value:"Ankle",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Calcaneus",value:"Calcaneus",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Foot",value:"Foot",checked:!1}]}},{checkboxBtnContent:{header:{name:"Medical history"},data:[{name:"Toe",value:"Toe",checked:!1}]}}],sa=Te("RadiologyStore",{state:()=>({head:[...nt],neck:[...Qn],chest:[...Xn],abdomen:[...Zn],upper_extremity:[...ea],spine:[...ta],pelvis:[...na],lower_extremity:[...aa]}),actions:{setOPDDiagnosis(e){this.head=e},getInitial(){return[...Se.cloneDeep(nt)]}}}),oa=["innerHTML"],ia={class:"scrollable-container"},ra={key:0,class:"form-section"},la={key:1,class:"form-section"},da={key:2,class:"form-section"},ca={key:3,class:"form-section"},ua={key:4,class:"form-section"},pa={key:5,class:"form-section"},ma={key:6,class:"form-section"},ha={key:7,class:"form-section"},fa=J({__name:"RadiologyInvestigation",setup(e){const t=sa(),{head:n,neck:a,chest:s,abdomen:u,upper_extremity:r,spine:d,pelvis:p,lower_extremity:h}=G(t),_=k(ee),g=k([]),b=(C,f,E)=>{document.querySelectorAll("#".concat(C," path")).forEach(c=>{c.classList.toggle("white-fill")}),document.querySelectorAll("#".concat(f," line")).forEach(c=>{c.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(f," rect")).forEach(c=>{c.classList.toggle("bright-green-fill"),c.classList.toggle("dark-green-stroke")}),document.querySelectorAll("#".concat(f," path")).forEach(c=>{c.classList.toggle("dark-green-fill")}),document.querySelectorAll("#".concat(f," circle")).forEach(c=>{c.classList.toggle("bright-green-fill")});const B=g.value.findIndex(c=>c.id===E);B>=0?g.value.splice(B,1):g.value.unshift({id:E,active:!0})},H=()=>{const C=document.getElementById("SPINE");C.style.display==="none"||C.style.display==""?C.style.display="block":C.style.display="none",b("SPINE","SPINE_LABEL-2","spine")};return we(()=>{const C=document.getElementById("HEAD");C&&C.addEventListener("click",()=>{b("HEAD","LABEL-6","head")});const f=document.getElementById("NECK");f&&f.addEventListener("click",()=>{b("NECK","LABEL-5","neck")});const E=document.getElementById("CHEST");E&&E.addEventListener("click",()=>{b("CHEST","LABEL-4","chest")});const B=document.getElementById("ABDOMEN_LABEL");B&&B.addEventListener("click",()=>{const F=document.getElementById("ABDOMEN-2");F.style.display==="none"||F.style.display==""?F.style.display="block":F.style.display="none",b("ABDOMEN","ABDOMEN_LABEL-2","abdomen")});const c=document.getElementById("UPPER_EXTRMITY");c&&c.addEventListener("click",()=>{b("UPPER_EXTRMITY","LABEL-3","upper_extremity")});const S=document.getElementById("SPINE"),I=document.getElementById("SPINE_LABEL"),P=document.getElementById("LOWER_SPINE_INACTIVE");S&&S.addEventListener("click",()=>{H()}),I&&I.addEventListener("click",()=>{H()}),P&&P.addEventListener("click",()=>{H()});const q=document.getElementById("PELVIS");q&&q.addEventListener("click",()=>{b("PELVIS","LABEL-2","pelvis")});const U=document.getElementById("LOWER_EXTREMITY");U&&U.addEventListener("click",()=>{b("LOWER_EXTREMITY","LABEL","lower_extremity")})}),(C,f)=>{const E=v("ion-col"),B=v("ion-row");return M(),te(B,null,{default:l(()=>[o(E,{size:"7"},{default:l(()=>[D("div",{innerHTML:_.value.full_body_sk},null,8,oa)]),_:1}),o(E,{size:"5",class:"form-column"},{default:l(()=>[D("div",ia,[(M(!0),A(de,null,ke(g.value,c=>(M(),A(de,null,[c.id==="head"?(M(),A("div",ra,[f[0]||(f[0]=D("h6",null,"Body Part: Head",-1)),o(W,{contentData:L(n)},null,8,["contentData"])])):c.id==="neck"?(M(),A("div",la,[f[1]||(f[1]=D("h6",null,"Body Part: Neck",-1)),o(W,{contentData:L(a)},null,8,["contentData"])])):c.id==="chest"?(M(),A("div",da,[f[2]||(f[2]=D("h6",null,"Body Part: Chest",-1)),o(W,{contentData:L(s)},null,8,["contentData"])])):c.id==="abdomen"?(M(),A("div",ca,[f[3]||(f[3]=D("h6",null,"Body Part: Abdomen",-1)),o(W,{contentData:L(u)},null,8,["contentData"])])):c.id==="upper_extremity"?(M(),A("div",ua,[f[4]||(f[4]=D("h6",null,"Body Part: Upper Extremity",-1)),o(W,{contentData:L(r)},null,8,["contentData"])])):c.id==="spine"?(M(),A("div",pa,[f[5]||(f[5]=D("h6",null,"Body Part: Spine",-1)),o(W,{contentData:L(d)},null,8,["contentData"])])):c.id==="pelvis"?(M(),A("div",ma,[f[6]||(f[6]=D("h6",null,"Body Part: Pelvis",-1)),o(W,{contentData:L(p)},null,8,["contentData"])])):c.id==="lower_extremity"?(M(),A("div",ha,[f[7]||(f[7]=D("h6",null,"Body Part: Lower Extremity",-1)),o(W,{contentData:L(h)},null,8,["contentData"])])):Z("",!0)],64))),256))])]),_:1})]),_:1})}}}),ga=K(fa,[["__scopeId","data-v-4e8419f9"]]),va=J({name:"Menu",mixins:[jn],components:{IonContent:ge,IonHeader:Oe,IonItem:he,IonList:Pe,IonMenu:Ee,IonTitle:fe,IonToolbar:$e,IonInput:pt,IonPopover:Jt,DashBox:Cn,SelectionPopover:un,BasicInputField:ft,BasicForm:W,List:cn,DynamicButton:ve,LabOrdersList:Yn,RadiologyInvestigation:ga},data(){return{segmentContent:"Lab Investigations",iconsContent:ee,no_item:!1,search_item:!1,display_item:!1,addItemButton:!0,selectedText:"",testResult:"",test:"",labOrders:"",filteredSpecimen:"",testData:[],popoverOpen:!1,labOrderStatus:!1,event:"",specimen:"",radiologyOrdersStatus:!1,otherOrdersStatus:!1}},setup(){return{checkmark:Wt,pulseOutline:zt}},computed:{...oe(Ue,["investigations"]),...oe(z,["patient"]),inputFields(){return this.investigations[0].data.rowData[0].colData}},watch:{investigations:{handler(){this.setDashedBox()},deep:!0},patient:{async handler(){var e;(e=this.patient)!=null&&e.labOrders&&(this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved])},deep:!0},$route:{async handler(){await this.getTests()},deep:!0}},async mounted(){await this.getTests(),this.updateInvestigationsStores(),this.setDashedBox(),this.updateInvestigationWizard()},methods:{setSegmentContent(e){this.segmentContent=e},async getTests(){let e;O.getUseIndexDBStatus()&&O.getModsStatus()?e=await ce("testTypes"):e=await me.getTestTypes(),Y(this.investigations,"test","multiSelectData",e)},toggleLabOrderStatus(){this.labOrderStatus=!this.labOrderStatus},async updateInvestigationWizard(){var t;if(!((t=this.patient)!=null&&t.labOrders))return;this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved];const e=await this.labOrders.filter(n=>w.toStandardHisFormat(w.sessionDate())===w.toStandardHisFormat(n.order_date));e.length>0?this.investigations[0].selectedData=e:this.investigations[0].selectedData=""},async updateInvestigationsStores(){await this.updateInvestigationWizard(),Ue().setInvestigations(this.investigations)},displayInputFields(){this.testResult="",this.selectedText="",this.no_item=!1,this.addItemButton=!1,this.search_item=!0},async validateRowData(){return tt(this.investigations)},async checkTest(){return await this.isNameInData(this.inputFields[0].value.name,await this.investigations[0].selectedData)?(Y(this.investigations,"test","alertsErrorMassage","Lab order already selected"),!1):(Y(this.investigations,"test","alertsErrorMassage",""),!0)},async addNewRow(){tt(this.investigations)&&await this.checkTest()&&(await this.saveTest(),this.investigations[0].data.rowData[0].colData[0].value="",this.investigations[0].data.rowData[0].colData[1].value="",this.search_item=!1,this.display_item=!0,this.addItemButton=!0),this.updateInvestigationWizard()},isNameInData(e,t){for(let n of t)for(let a of n.tests)if(a.name===e)return!0;return!1},async saveTest(){await new In().postActivities(this.patient.patientID,[{concept_id:this.inputFields[0].value.concept_id,name:this.inputFields[0].value.name,specimen:this.inputFields[1].value.name,reason:"Routine",specimenConcept:await j.getConceptID(this.inputFields[1].value.name,!0)}]),Y(this.investigations,"specimen","disabled",!0),this.labOrders=[...this.patient.labOrders.saved,...this.patient.labOrders.unsaved]},async handleInputData(e){if(e.inputHeader=="Test"&&this.checkTest(),Y(this.investigations,"specimen","alertsErrorMassage",""),e.inputHeader=="Test"&&e.value){let t;O.getUseIndexDBStatus()&&O.getModsStatus()?t=await ce("specimens"):t=await me.getSpecimens("",1e3),this.specimen=await j.getConceptSet(e.value.name,"",{names:t.map(n=>n.name)}),this.specimen.length==1?(Y(this.investigations,"specimen","value",this.specimen[0]),Y(this.investigations,"specimen","disabled",!0)):(Y(this.investigations,"specimen","value",""),Y(this.investigations,"specimen","disabled",!1)),Y(this.investigations,"specimen","multiSelectData",this.specimen)}},async filterTest(e){return await this.labOrders.filter(t=>t.name.toLowerCase().includes(e.toLowerCase()))},async filterSpecimen(e){var t;return(t=this.specimen[0])!=null&&t.name&&e?await this.specimen.filter(n=>n==null?void 0:n.name.toLowerCase().includes(e.toLowerCase())):[]},setTest(e){this.selectedText=e.name,this.inputFields[1].inputHeader=="Test"?this.investigations[0].data.rowData[0].colData[0].value=e.name:this.investigations[0].data.rowData[0].colData[1].value=e.name,this.updateInvestigationsStores()},setDashedBox(){(this.inputFields[1].value||this.inputFields[0].value)&&(this.addItemButton=!1,this.search_item=!0,this.no_item=!1),this.investigations[0].selectedData.length>0?(this.display_item=!0,this.no_item=!1):this.search_item||(this.no_item=!0)}}}),_a={class:"background"},ya={key:0},Da={key:1},ba={key:2},Sa={class:"",slot:"content",style:{"margin-bottom":"125px","margin-top":"2px"}},Ca={key:3},Ia={class:"ion-padding",slot:"content"},Ma={key:4};function Oa(e,t,n,a,s,u){const r=v("ion-label"),d=v("ion-segment-button"),p=v("ion-segment"),h=v("VisitsHistory"),_=v("LabOrdersList"),g=v("RadiologyInvestigation");return M(),A("div",_a,[o(p,{value:e.segmentContent,style:{"margin-top":"5px"}},{default:l(()=>[o(d,{value:"Lab Investigations",onClick:t[0]||(t[0]=b=>e.setSegmentContent("Lab Investigations"))},{default:l(()=>[o(r,null,{default:l(()=>[...t[3]||(t[3]=[R("Lab Investigations",-1)])]),_:1})]),_:1}),o(d,{value:"Radiology Investigation",onClick:t[1]||(t[1]=b=>e.setSegmentContent("Radiology Investigation"))},{default:l(()=>[o(r,null,{default:l(()=>[...t[4]||(t[4]=[R("Radiology Investigation",-1)])]),_:1})]),_:1}),o(d,{value:"Other Investigation",onClick:t[2]||(t[2]=b=>e.setSegmentContent("Other Investigation"))},{default:l(()=>[o(r,null,{default:l(()=>[...t[5]||(t[5]=[R("Other Investigation",-1)])]),_:1})]),_:1})]),_:1},8,["value"]),e.segmentContent=="Radiology Investigation"?(M(),A("div",ya,[o(h)])):Z("",!0),e.segmentContent=="Other Investigation"?(M(),A("div",Da)):Z("",!0),e.segmentContent=="Lab Investigations"?(M(),A("div",ba,[D("div",Sa,[D("span",null,[o(_,{propOrders:e.labOrders},null,8,["propOrders"])])])])):Z("",!0),e.segmentContent=="Radiology Investigation"?(M(),A("div",Ca,[D("div",Ia,[o(g)])])):Z("",!0),e.segmentContent=="Other Investigation"?(M(),A("div",Ma)):Z("",!0)])}const ks=K(va,[["render",Oa],["__scopeId","data-v-c2f65a77"]]),St=(e,t,n,a={})=>({drug_id:e,name:t,category:n,...a}),ka=Te("OtherNCDMedicationsStore",{state:()=>({otherNCDMedications:[],selectedOtherNCDMedicationList:[]}),actions:{setSelectedNCDMedicationList(e){this.selectedOtherNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedOtherNCDMedicationList},addSearchedDrug(e){const t=St(e.drug_id,e.name,"Other",e);if(t.units=e.units,!this.otherNCDMedications.some(a=>a.drug_id===t.drug_id)){this.otherNCDMedications.unshift(t);const a={dosage:{morning:null,afternoon:null,evening:null},duration:null,...t};this.setSelectedNCDMedicationList(a)}},clearOtherNCDMedications(){this.otherNCDMedications=[],this.selectedOtherNCDMedicationList=[]}},persist:!0}),Q=Te("NCDmedicationsStore",{state:()=>({medications:[],filteredMedications:[],selectedNCDMedicationList:[],frequency_selections:k({}),currentPatientID:""}),actions:{setMedications(e){this.medications=e,this.filteredMedications=e},setFilteredMedications(e){this.filteredMedications=e},initMedications(){},setSelectedNCDMedicationList(e){this.selectedNCDMedicationList.push(e)},getSelectedNCDMedicationList(){return this.selectedNCDMedicationList},clearMedicationDataStores(){this.medications=[],this.filteredMedications=[],this.selectedNCDMedicationList=[],this.frequency_selections=[]},setCurrentPatientID(e){this.currentPatientID=e}},persist:!0});function ws(){try{const e=Q(),t=ka();e.medications=[...t.otherNCDMedications,...e.medications],e.medications=e.medications.reduce((n,a)=>(n.some(s=>s.drug_id===a.drug_id)||n.push(a),n),[]),e.selectedNCDMedicationList=[...t.selectedOtherNCDMedicationList,...e.selectedNCDMedicationList],e.filteredMedications=e.medications,re("Medication added successfully")}catch(e){}}const wa={name:"DiabetesMedication",ids:[337,336,280,410,729,263,812,265,264,240,266,726,728,223]},at={name:"AntiHypertensivesMedication",ids:[]},Na={ids:[274,168,648,289,286,164,287,288,672,257,1233,671]},La={ids:[559,1236,1234,558,1235,1211,276,277,278,279]},Aa={ids:[556,653,557,652,943,1238,1240,1237,942,1239,946,1503,944,1504,945,1505]},Ba={ids:[116,85,117,1232,936,1364,937,1365,1366]};async function Ct(e){const t=Q(),n=e.ids.map(async a=>{try{const s=await bt.getOfflineDrugById(a);if(s){const u=t.medications.findIndex(d=>d.drug_id===s.drug_id),r=St(s.drug_id,s.name,e.name,s);u!==-1?t.medications[u]=r:t.medications.push(r)}}catch(s){console.error("Error fetching drug ID ".concat(a,":"),s)}});return t.filteredMedications=t.medications,Promise.all(n)}async function Ns(e){try{const t=await bt.getOfflineDrugById(e);return{drug_id:e,dosage:{morning:null,afternoon:null,evening:null},duration:null,...t}}catch(t){Ve("Error fetching drug details. Please try again."),console.error("Error fetching drug details:",t)}}function Ls(){return Ct(wa)}function As(){return at.ids=[...Na.ids,...La.ids,...Aa.ids,...Ba.ids],Ct(at)}function Ea(){Q().clearMedicationDataStores()}function Pa(e){Q().setCurrentPatientID(e)}function Bs(e){Q().currentPatientID!=e&&(Ea(),Pa(e))}function Es(){return Q().selectedNCDMedicationList.some(t=>{const{morning:n,afternoon:a,evening:s}=t.dosage,u=typeof n=="string"?Number(n):n,r=typeof a=="string"?Number(a):a,d=typeof s=="string"?Number(s):s;return typeof u=="number"&&u>0||typeof r=="number"&&r>0||typeof d=="number"&&d>0})}class $a extends gt{constructor(t,n){super(t,105,n)}}class Ta extends gt{constructor(t,n){super(t,25,n)}static async get_____(t="",n=1,a=10){}}async function Ps(e){var t,n,a;try{const s=z(),{patient:u}=G(s),r=JSON.parse(JSON.stringify(u.value));return(a=(n=(t=r.allergies)!=null?t:r.allergies={}).unsaved)!=null||(n.unsaved=[]),r.allergies.unsaved.push(...e),re("Allergies appended to patient record successfully"),r}catch(s){ne("Unable to save Allegies!")}}class $s{async onSubmitNotes(t,n,a){const s=new $a(t,n);await s.createEncounter(),await s.saveObservationList(a)}async onSubmitAllergies(t,n,a){try{const s=new Ta(t,n);await s.createEncounter(),await s.saveObservationList(a),re("Allergies saved successfully")}catch(s){console.error("Error saving allergies:",s),ne("Failed to save allergies")}}}class Ts{constructor(){X(this,"programID");X(this,"providerID");X(this,"patientID");X(this,"date");X(this,"demographics");X(this,"previousDrugPrescriptions",[]);X(this,"previousClinicalNotes");X(this,"previousDrugAllergies");const t=z();this.demographics=t.patient,this.patientID=this.demographics.patientID,this.date=Fe.getSessionDate(),this.providerID=O.getUserID(),this.programID=Fe.getProgramID(),this.previousClinicalNotes={},this.previousDrugAllergies={}}async getPatientEncounters(){const t=await this.getPatientVisitDates(),n=t.map(async s=>{const u=s.value,r=await pn.getEncounters(this.patientID,{date:u});await Promise.all(r.map(async d=>{var p;if(d.type.name=="NOTES"){const{observations:h}=d;Se.isEmpty(h)||h.forEach(_=>{if(_.concept_id=="2688"){const g=w.toStandardHisDisplayFormat(_.obs_datetime);Se.isEmpty(this.previousClinicalNotes.hasOwnProperty(g))&&(this.previousClinicalNotes[g]=[]),this.previousClinicalNotes[g].push({date:g,notes:_.value_text})}})}if(d.type.name=="TREATMENT"){const{observations:h}=d;if(!Se.isEmpty(h))for(const _ in h){let g="<UNKNOWN CONCEPT>";const b=h[_];try{(p=b==null?void 0:b.concept)!=null&&p.concept_names?g=b.concept.concept_names[0].name:g=await j.getConceptName(b.concept_id)}catch(f){console.error(b,f)}const H=await Fe.resolvePrimaryValue(b),C=w.toStandardHisDisplayFormat(b.date_created);g=="Allergic"&&(this.previousDrugAllergies.hasOwnProperty(C)||(this.previousDrugAllergies[C]=[]),this.previousDrugAllergies[C].push({date:C,value:H}))}}}))});await Promise.all(n);const a=t.map(async s=>{const u=await vt.getOrderByPatient(this.patientID,{start_date:s.value});if(!Se.isEmpty(u)){const r=u.map(d=>({drugName:d.drug.name,value:w.toStandardHisTimeFormat(d.order.start_date),dose:d.dose,frequency:Mn(d.frequency),prescription:w.toStandardHisFormat(d.order.auto_expire_date),duration:xa(d.order.instructions),other:d}));this.previousDrugPrescriptions.push({prescriptionDate:w.toStandardHisDisplayFormat(s.value),previousPrescriptions:r})}});return await Promise.all(a),{previousDrugPrescriptions:this.previousDrugPrescriptions,previousClinicalNotes:this.previousClinicalNotes,previousDrugAllergies:this.previousDrugAllergies}}async getPatientVisitDates(){return(await _t.getPatientVisits(this.patientID,!1)).map(t=>({label:w.toStandardHisDisplayFormat(t),value:t,other:{isActive:t===mn.getSessionDate()}}))}}function xa(e){const t=/(\d+)\s+days/i,n=e.match(t);return n&&n.length>1?parseInt(n[1]):null}async function xs(){const e=z(),{patient:t}=G(e),n=t.value,a=[8809,903,6410,6409];let s;O.getModsStatus()||O.getUseIndexDBStatus()?s=await ce("diagnosis",{likeClause:"",currentPage:1,itemsPerPage:2e3}).then(g=>g.records):s=await O.getJson("diagnosis",{id:7409,page_size:2e3});const u=s.filter(g=>a.includes(g.concept_id));u.push({concept_id:8809,concept_name_id:926,concept_name_type:"FULLY_SPECIFIED",creator:1,date_created:"2004-06-25T00:00:00.000+02:00",date_voided:null,id:72,locale:"en",locale_preferred:0,name:"Hypertension",uuid:"b99faa1e-8d80-11d8-abbb-0024217bb78e",void_reason:null,voided:0,voided_by:null});const r=n.diagnosis.saved.map(g=>g.value_coded),d=n.diagnosis.unsaved.map(g=>g.value_coded),p=[...r,...d];return u.filter(g=>p.includes(g.concept_id)).map(g=>g.name)}const Ra=J({created(){},components:{IonItem:he,IonCol:Gt,IonLabel:Me,IonIcon:Ae},data(){return{iconsContent:ee,localMedicalDrugsList:[...this.$props._selectedMedicalDrugsList]}},props:{_selectedMedicalDrugsList:{type:Array,default:[]},show_actions_buttons:{type:Boolean,default:!0},highLightBackground:{type:String,default:"item-native"}},watch:{},methods:{highlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#006401"),this.highlightActionBtns(e)},undoHighlightItem(e){const t=document.getElementById(e+"_lbl");t&&(t.style.color="#636363"),this.undohighlightActionBtns(e)},highlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="inline-block"},undohighlightActionBtns(e){const t=document.getElementsByClassName(e+"_spanlbl");for(let n=0;n<t.length;n++)t[n].style.display="none"},asignLblID(e){return e+"_lbl"},asignSpanLblID(e){return e+"_spanlbl"},async removeItemAtIndex(e,t){await mt("Do you want to delete it?",t)&&this.$emit("remove-item",e)},editItemAtIndex(e){this.$emit("edit-item",e)},highLightBnd(e){if(e){if(e.highlightbackground!==void 0&&e.highlightbackground==!0)return this.$props.highLightBackground}else return!1}}}),Fa=["onMousemove","onMouseout"],Ha={class:"route-label"};function Ua(e,t,n,a,s,u){const r=v("ion-label"),d=v("ion-col"),p=v("ion-row"),h=v("ion-icon");return M(!0),A(de,null,ke(e.localMedicalDrugsList,(_,g)=>(M(),A("div",{id:"df",class:"medication-item",key:g,onMousemove:b=>e.highlightItem(g),onMouseout:b=>e.undoHighlightItem(g)},[o(p,{class:"medication-header"},{default:l(()=>[o(d,{class:pe(["ion-text-wrap",e.highLightBnd(_)])},{default:l(()=>[o(r,{id:e.asignLblID(g),class:"medication-name"},{default:l(()=>[R(x(_.drugName),1)]),_:2},1032,["id"])]),_:2},1032,["class"])]),_:2},1024),o(p,{class:"medication-details"},{default:l(()=>[o(d,{size:"10",class:pe(["ion-text-wrap details-col",e.highLightBnd(_)])},{default:l(()=>[o(r,{class:"details-text"},{default:l(()=>[R(x(_.dose)+" / "+x(_.frequency)+" / daily / "+x(_.duration)+" / until "+x(_.prescription)+" ",1),D("span",Ha,x(_.route_name),1)]),_:2},1024)]),_:2},1032,["class"]),e.show_actions_buttons?(M(),te(d,{key:0,class:pe([e.highLightBnd(_),"actions-col"]),size:"2"},{default:l(()=>[o(r,{class:pe(["action-button",e.asignSpanLblID(g)]),onClick:b=>e.editItemAtIndex(g)},{default:l(()=>[o(h,{icon:e.iconsContent.edit},null,8,["icon"])]),_:2},1032,["class","onClick"]),o(r,{class:pe(["action-button",e.asignSpanLblID(g)]),onClick:b=>e.removeItemAtIndex(g,b)},{default:l(()=>[o(h,{icon:e.iconsContent.delete},null,8,["icon"])]),_:2},1032,["class","onClick"])]),_:2},1032,["class"])):Z("",!0)]),_:2},1024)],40,Fa))),128)}const Rs=K(Ra,[["render",Ua],["__scopeId","data-v-01c693a3"]]),Va={key:0,class:"custom-allergy-container"},qa={class:"button-group"},Ja=J({watch:{},name:"AllergiesComponent"}),za=J({...Ja,setup(e){const t=hn(),n=z(),a=ie(()=>t.selectedMedicalAllergiesList),s=ie(()=>n.patient),u=ie(()=>t.medicalAllergiesList),r=k(f(8,"item-")),d=k(""),p=k(!1),h=[{multi_Selection:!0,show_list_label:!0,unqueId:r.value,name_of_list:"Add/Remove allergies",placeHolder:"Search for an allergy",items:[],listUpdatedFN:b,listFilteredFN:()=>{},searchTextFN:H,use_internal_filter:!0,show_error:k(!1),error_message:"please select a User",disabled:k(!1)}],_=k(!1);we(async()=>{g()});const g=()=>{t.current_patient.ID!=s.value.ID&&(t.clearSelectedMedicalAllergiesList(),t.setCurrentPatient(s.value))};function b(c){c.forEach(S=>{S.selected==!0&&S.name==="Other"&&(p.value=S.name==="Other"),S.selected==!1&&S.name==="Other"&&B()}),t.setSelectedMedicalAllergiesList(c),C()}async function H(c){const S=c,I=await j.getConceptSet("OPD Medication",S);I.map(F=>({label:F.name,value:F.name,other:F}));const P=fn(S),U=gn(P,I).sort((F,_e)=>F.name.localeCompare(_e.name));t.setMedicalAllergiesList(U),C()}function C(){const c=u.value;a.value.forEach(I=>{let P=!1;c.forEach((q,U)=>{q.concept_id==I.concept_id&&I.selected===!0&&(c[U]=I,P=!0)}),!P&&I.selected===!0&&c.push(I)});const S=c.filter((I,P,q)=>P===q.findIndex(U=>(U==null?void 0:U.concept_id)===(I==null?void 0:I.concept_id)));t.setMedicalAllergiesList(S)}function f(c=8,S=""){const I="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";let P=S;for(let q=0;q<c;q++)P+=I.charAt(Math.floor(Math.random()*I.length));return P+="-".concat(Date.now()),P}async function E(c){try{const S=c.trim();if(S){const I={name:S,selected:!0,concept_id:f(8,"12"),concept_name_id:f(8,"34")};t.setMedicalAllergiesList([...u.value,I]),t.setSelectedMedicalAllergiesList(I),p.value=!1,_.value=!0,d.value="";const P=t.findSelectedAllergyByName("Other");t.unselectOther(P)}}catch(S){console.error(S)}}const B=()=>{p.value=!1,d.value="",_.value=!1;const c=t.findSelectedAllergyByName("Other");c&&t.unselectOther(c)};return(c,S)=>(M(),te(L(Kt),null,{default:l(()=>[o(L(Yt),null,{default:l(()=>[o(L(Me),{class:"header-container"},{default:l(()=>[o(L(Ae),{icon:L(jt),class:"allergy-icon"},null,8,["icon"]),S[3]||(S[3]=D("span",{style:{"font-size":"16px","font-weight":"600"}}," Allergies (Medication, Healthcare items, Environment and Food) ",-1))]),_:1})]),_:1}),o(L(Qt),null,{default:l(()=>[o(vn,{multiSelection:h[0].multi_Selection,show_label:h[0].show_list_label,uniqueId:h[0].unqueId,name_of_list:h[0].name_of_list,choose_place_holder:h[0].placeHolder,"items_-list":u.value,use_internal_filter:h[0].use_internal_filter,disabled:h[0].disabled.value,onItemListUpDated:h[0].listUpdatedFN,onItemListFiltered:h[0].listFilteredFN,onItemSearchText:h[0].searchTextFN},null,8,["multiSelection","show_label","uniqueId","name_of_list","choose_place_holder","items_-list","use_internal_filter","disabled","onItemListUpDated","onItemListFiltered","onItemSearchText"]),p.value?(M(),A("div",Va,[o(L(pt),{modelValue:d.value,"onUpdate:modelValue":S[0]||(S[0]=I=>d.value=I),placeholder:"Please specify the allergy",fill:"outline",class:"custom-input"},null,8,["modelValue"]),D("div",qa,[o(L(Ce),{onClick:S[1]||(S[1]=I=>E(d.value)),class:"addCustomAllergyBtn"},{default:l(()=>[...S[4]||(S[4]=[R(" Add Allergy ",-1)])]),_:1}),o(L(Ce),{onClick:S[2]||(S[2]=I=>B()),fill:"clear",class:"cancelBtn"},{default:l(()=>[o(L(Ae),{icon:L(ut),slot:"icon-only"},null,8,["icon"])]),_:1})])])):Z("",!0)]),_:1})]),_:1}))}}),Fs=K(za,[["__scopeId","data-v-4de36202"]]);async function Hs(){var e,t,n;try{const a=z(),{patient:s}=G(a),u=Ga(),r=JSON.parse(JSON.stringify(s.value));if(u.length>0){(n=(t=(e=r.MedicationOrder)!=null?e:r.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const d=r.MedicationOrder.unsaved.findIndex(h=>h.NCD_Drug_Orders);if(d>=0)r.MedicationOrder.unsaved[d].NCD_Drug_Orders=[...r.MedicationOrder.unsaved[d].NCD_Drug_Orders,...u];else{const h={NCD_Drug_Orders:u};r.MedicationOrder.unsaved.push(h)}return Q().clearMedicationDataStores(),re("Drug order(s) has been created"),r}else ne("Unable to create drug orders!")}catch(a){ne("Unable to create drug orders!")}}function st(){try{const e=new Date(O.getSessionDate()),n=xe().selectedMedicalDrugsList;let a=0;if(n.forEach(h=>{const _=parseInt(h.duration,10);!isNaN(_)&&_>a&&(a=_)}),a<=0)return{date:null,formattedDate:null};const s=new Date(e);s.setDate(e.getDate()+a);const u=String(s.getDate()).padStart(2,"0"),r=String(s.getMonth()+1).padStart(2,"0"),d=s.getFullYear(),p="".concat(u,"/").concat(r,"/").concat(d);return{date:s,formattedDate:p}}catch(e){return console.error("Error calculating OPD medication run out date:",e),{date:null,formattedDate:null}}}function Wa(){try{const e=new Date(O.getSessionDate()),n=Q().selectedNCDMedicationList;let a=0;if(n.forEach(h=>{const _=parseInt(h.duration,10);!isNaN(_)&&_>a&&(a=_)}),a<=0)return{date:null,formattedDate:null};const s=new Date(e);s.setDate(e.getDate()+a);const u=String(s.getDate()).padStart(2,"0"),r=String(s.getMonth()+1).padStart(2,"0"),d=s.getFullYear(),p="".concat(u,"/").concat(r,"/").concat(d);return{date:s,formattedDate:p}}catch(e){return console.error("Error calculating medication run out date:",e),{date:null,formattedDate:null}}}const Ga=()=>{const e=Q();return e.selectedNCDMedicationList.map(t=>{t.frequency=e.frequency_selections[t.drug_id]||"",t.totalDosage=Object.values(t.dosage).reduce((s,u)=>s+Number(u),0);const n=Dt.getSessionDate(),a=ja(t.drug_id);return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.totalDosage=="Unknown"?0:t.totalDosage*(a==null?void 0:a.value)||0,start_date:n,auto_expire_date:It(n,t.duration),units:t.units,instructions:"".concat(t.name," ").concat(t.totalDosage," ").concat(t.units," ").concat((a==null?void 0:a.code)||""," for ").concat(t.duration," days"),dose:Ka(t),frequency:(a==null?void 0:a.code)||""}})},Ka=e=>e.dose_strength!=null&&e.dose_strength?Math.trunc(e.dose_strength):1;async function Us(){var e,t,n;try{const a=z(),{patient:s}=G(a),u=Ya(),r=JSON.parse(JSON.stringify(s.value));if(u.length>0){(n=(t=(e=r.MedicationOrder)!=null?e:r.MedicationOrder={}).unsaved)!=null||(t.unsaved=[]);const d=r.MedicationOrder.unsaved.findIndex(h=>h.NCD_Drug_Orders);if(d>=0)r.MedicationOrder.unsaved[d].NCD_Drug_Orders=[...r.MedicationOrder.unsaved[d].NCD_Drug_Orders,...u];else{const h={NCD_Drug_Orders:u};r.MedicationOrder.unsaved.push(h)}return xe().clearSelectedMedicalDrugsList(),re("Drug order(s) has been created"),r}else ne("Unable to create drug orders!")}catch(a){ne("Unable to create drug orders!")}}const Ya=()=>xe().selectedMedicalDrugsList.map(t=>{const n=Dt.getSessionDate(),a=se.find(s=>s.label===t.frequency)||{};return{drug_inventory_id:t.drug_id,equivalent_daily_dose:t.dose=="Unknown"?0:t.dose*(a==null?void 0:a.value)||0,start_date:n,auto_expire_date:It(n,t.duration),units:t.units,instructions:"".concat(t.drugName,": ").concat(t.dose," ").concat(t.units," ").concat((a==null?void 0:a.code)||""," for ").concat(t.duration," days"),dose:t.dose,frequency:(a==null?void 0:a.code)||""}}),ja=e=>{const n=Q().selectedNCDMedicationList.find(s=>s.drug_id===e);if(!n||!n.dosage)return null;switch(["morning","afternoon","evening"].reduce((s,u)=>s+(n.dosage[u]?1:0),0)){case 1:return n.dosage.morning?se.find(s=>s.code==="QAM"):n.dosage.afternoon?se.find(s=>s.code==="QNOON"):n.dosage.evening?se.find(s=>s.code==="QPM"):se.find(s=>s.code==="OD");case 2:return se.find(s=>s.code==="BD");case 3:return se.find(s=>s.code==="TDS");default:return se.find(s=>s.code==="Unknown")}},It=(e,t)=>{const n=new Date(e);return n.setDate(n.getDate()+parseInt(t)),w.toStandardHisFormat(n)},Qa=()=>xe().nonPharmalogicalTherapyAndOtherNotes,Xa=Te("nonPharmaTherapyStore",{state:()=>({items:[{id:"wound-dressing",label:"Wound dressing",checked:!1},{id:"patient-education",label:"Patient education",checked:!1},{id:"counseling",label:"Counseling",checked:!1},{id:"minor-surgery",label:"Minor Surgery",checked:!1}],current_patient:{}}),actions:{async saveNonPharmaTherapyPatientData(){const e=_n(),t=[];this.items.forEach(a=>{a.checked==!0&&t.push({concept_id:11023,value_text:a.label,obs_datetime:w.toStandardHisFormat(O.getSessionDate()),location_id:e.facilityLocation.code})});const n=Qa();n&&t.push({concept_id:2592,obs_datetime:O.getSessionDate(),value_text:n,location_id:e.facilityLocation.code});try{if(t.length>0)return this.clearSelectednonPharmaTherapyStore(),re("Non Pharma Therapy staged successfully!"),await Za(t)}catch(a){ne("Unable to update Non Pharma Therapy!")}},clearSelectednonPharmaTherapyStore(){this.items.forEach(e=>{e.checked=!1})},setCurrentPatient(e){this.current_patient=e}},persist:!0});async function Za(e){var t,n,a;try{const s=z(),{patient:u}=G(s),r=JSON.parse(JSON.stringify(u.value));return(a=(n=(t=r.notes)!=null?t:r.notes={}).unsaved)!=null||(n.unsaved=[]),r.notes.unsaved.push(...e),r}catch(s){ne("Unable to create non pharmalogical notes!")}}const es={class:"checklist-container"},ts=J({watch:{},name:"xxxComponent"}),ns=J({...ts,setup(e){const t=z(),n=ie(()=>t.patient),a=Xa(),s=a.items;we(async()=>{u()});const u=()=>{a.current_patient.ID!=n.value.ID&&(a.clearSelectednonPharmaTherapyStore(),a.setCurrentPatient(n.value))};return Ie(()=>n.value,async r=>{}),(r,d)=>(M(),A("div",es,[(M(!0),A(de,null,ke(L(s),p=>(M(),te(L(he),{key:p.id,class:"no-border"},{default:l(()=>[o(L(Xt),{id:p.id,modelValue:p.checked,"onUpdate:modelValue":h=>p.checked=h,slot:"start"},null,8,["id","modelValue","onUpdate:modelValue"]),o(L(Me),{style:{"font-size":"16px","font-weight":"600"}},{default:l(()=>[R(x(p.label),1)]),_:2},1024)]),_:2},1024))),128))]))}}),Vs=K(ns,[["__scopeId","data-v-371e920f"]]),as=J({components:{IonContent:ge,IonHeader:Oe,IonItem:he,IonList:Pe,IonMenu:Ee,IonTitle:fe,IonToolbar:$e,BasicInputField:ft,IonDatetime:en,IonBadge:Zt,DateInputField:kn,DynamicButton:ve},setup(){const e=He(),t=k(0),n=ie(()=>e.getDisabledDates()),a=ie(()=>e.getAssignedAppointments()),s=k();return{disabledDates:n,datesCounts:a,appointment_count:t,calendarOutline:tn,inputPRDate:s}},data(){return ae(),et(),{iconsContent:ee,date:new Date(O.getSessionDate()),tomorrow:new Date(O.getSessionDate()).getDate()+1,appointment:"",drugRunoutDate:"",nextAppointmentDate:"",minDate:new Date(O.getSessionDate())}},computed:{...oe(ae,["nextAppointment","appointmentCountsCache","currentSelectedNextAppointmentDate"]),...oe(He,["maximumNumberOfDaysForEachDay","assignedAppointmentsDates"]),...oe(z,["patient"]),...oe(et,["activeProgram"]),calendarDate(){const e=ae();return e.currentSelectedNextAppointmentDate?w.toStandardHisDisplayFormat(e.currentSelectedNextAppointmentDate):""},runOutDate(){var e;return((e=this.activeProgram)==null?void 0:e.program_id)===14?st():Wa()}},watch:{calendarDate:{handler(){this.updateNextAppointment()},deep:!0},"$service.sessionDate":{handler(){this.updateMinDate()},immediate:!0},"patient.ID":{async handler(e,t){e!==t&&(this.cleanCurrentNextAppointmentDate(),this.checkIfSamePatientInContext())}}},async mounted(){this.checkIfSamePatientInContext(),await this.getAppointmentMents(this.runOutDate.date),await bn().loadGlobalProperty(),this.validateAppointmentCountsCache(),await this.preloadAppointmentCounts(),Sn();const e=O.getUserID(),t=new _t;this.appointment=new Le(t.getID(),e),this.nextAppointmentDate=this.appointment.date,this.supposedRunOutDate(),window.addEventListener("storage",this.handleStorageChange),st()},beforeUnmount(){window.removeEventListener("storage",this.handleStorageChange)},methods:{handleStorageChange(e){e.key==="sessionDate"&&this.updateMinDate()},updateMinDate(){this.date=new Date(O.getSessionDate()),this.minDate=new Date(O.getSessionDate())},updateNextAppointment(){ae().setNextAppointment(this.calendarDate)},async handleDateUpdate(e){e&&(He().setsssignedAppointmentsDates(e,!0),this.calendarDate=w.toStandardHisDisplayFormat(e),await this.save(),await this.getAppointmentMents(e),await this.updateAppointmentCache(e),ae().setCurrentSelectedNextAppointmentDate(e,this.patient.ID))},async getAppointmentMents(e){if(Dn().apiStatus)try{const n=await Le.getDailyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(e));this.appointment_count=n.length}catch(n){}},getCounter(e){const t=w.toStandardHisFormat(e);return this.appointmentCountsCache[t]||""},async save(){if(this.assignedAppointmentsDates.length>0)try{const t=await new On().createOfflineAppointment()}catch(e){}},async openCornfirmModal(e){this.calendarDate=w.toStandardHisDisplayFormat(e),await this.getAppointmentMents(e),ht(yn,{class:"otherVitalsModal"},!0,{message:"Are you sure you want to add this Appointment?"},{cancel:s=>{},confirm:async s=>{s.detail==!0&&await this.handleDateUpdate(e)}})},async handleInput(e){this.inputPRDate=w.toStandardHisDisplayFormat(e),await this.openCornfirmModal(e)},async supposedRunOutDate(){await vt.getLastDrugsReceived(this.patient.patientID)},async preloadAppointmentCounts(){try{const e=new Date(O.getSessionDate());e.setDate(1);const t=new Date(O.getSessionDate());t.setMonth(t.getMonth()+2),t.setDate(0);try{const n=await Le.getDailyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(t)),a=this.filterUniqueAppointments(n),s={};a.forEach(u=>{const r=new Date(u.appointment_date),d=w.toStandardHisFormat(r);s[d]||(s[d]=0),s[d]++}),Object.keys(s).forEach(u=>{this.appointmentCountsCache[u]=s[u]})}catch(n){console.error("Error fetching appointments for date range:",n)}}catch(e){console.error("Error in preload process:",e)}},filterUniqueAppointments(e){const t=new Map;return e.forEach(n=>{const a="".concat(n.given_name,"_").concat(n.family_name,"_").concat(n.birthdate,"_").concat(n.appointment_date);t.has(a)||t.set(a,n)}),Array.from(t.values())},async updateAppointmentCache(e){try{const t=w.toStandardHisFormat(e),n=await Le.getDailyAppointments(w.toStandardHisFormat(e),w.toStandardHisFormat(e));this.appointmentCountsCache[t]=n.length}catch(t){console.error("Error updating appointment cache:",t)}},validateAppointmentCountsCache(){ae().checkCurrentLocationIfInContext()},isRunOutDate(e){return!this.runOutDate||!this.runOutDate.date?!1:w.toStandardHisFormat(e)===w.toStandardHisFormat(this.runOutDate.date)},cleanCurrentNextAppointmentDate(){ae().cleanCurrentSelectedNextAppointmentDate()},checkIfSamePatientInContext(){const e=ae();e.current_patient.ID!=this.patient.ID&&(this.cleanCurrentNextAppointmentDate(),e.setCurrentPatient(this.patient))}}}),ss={class:"card_content"},os={class:"count-badge"},is={class:"dates_title"},rs={class:"sub_data"},ls={class:"dates_title"},ds={class:"sub_data"},cs={class:"dates_title"},us={class:"sub_data"},ps={class:"dates_title"},ms={class:"sub_data"};function hs(e,t,n,a,s,u){const r=v("VueDatePicker"),d=v("ion-col"),p=v("DynamicButton"),h=v("ion-item"),_=v("ion-row"),g=v("DateInputField");return M(),A("div",ss,[o(_,null,{default:l(()=>[o(d,{"size-sm":"12","size-md":"12","size-lg":"12","size-xl":"8"},{default:l(()=>[o(r,{class:"calender",onDateUpdate:e.openCornfirmModal,inline:"","auto-apply":"","enable-time-picker":!1,"disabled-dates":e.disabledDates,"min-date":e.minDate,modelValue:e.runOutDate.date,"onUpdate:modelValue":t[0]||(t[0]=b=>e.runOutDate.date=b)},{day:l(({day:b,date:H})=>[(M(),A("p",{key:0,class:pe({"run-out-date":e.isRunOutDate(H)}),style:{"font-weight":"600","font-size":"20px"}},[D("span",null,[R(x(b),1),D("sup",os,x(e.getCounter(H)),1)])],2))]),_:1},8,["onDateUpdate","disabled-dates","min-date","modelValue"])]),_:1}),o(d,null,{default:l(()=>[o(h,null,{default:l(()=>[D("div",is,[t[3]||(t[3]=D("div",null,[R("Suggested Next Appointment Date "),D("span",{style:{"font-size":"16px"}},"(Medication run out date)")],-1)),D("div",rs,[R(x(e.runOutDate.formattedDate||"No run out date available")+" ",1),e.runOutDate.formattedDate?(M(),te(p,{key:0,onClick:t[1]||(t[1]=b=>e.handleDateUpdate(e.runOutDate.date)),name:"Set Next Appt.",fill:"solid",iconSlot:"icon-only",style:{float:"right"}})):Z("",!0)])])]),_:1}),o(h,null,{default:l(()=>[D("div",ls,[t[4]||(t[4]=D("div",null,"User set appointment date",-1)),D("div",ds,x(e.calendarDate),1)])]),_:1}),o(h,null,{default:l(()=>[D("div",cs,[t[5]||(t[5]=D("div",null,"Appointments",-1)),D("div",us,x(e.appointment_count),1)])]),_:1}),o(h,null,{default:l(()=>[D("div",ps,[t[6]||(t[6]=D("div",null,"Appointment limit (per/day)",-1)),D("div",ms,x(e.appointment_count)+"/"+x(e.maximumNumberOfDaysForEachDay),1)])]),_:1})]),_:1})]),_:1}),o(_,null,{default:l(()=>[o(d,{size:"4"},{default:l(()=>[o(g,{inputHeader:"Preferred Next Appointment Date",bold:"600",fontSize:"17px",placeholderFontSize:"17px",placeholderFontWeight:"600",unit:"",icon:e.calendarOutline,placeholder:"press to select date",iconRight:"",inputWidth:"100%",inputValue:e.inputPRDate,eventType:"",minDate:e.minDate,maxDate:"",disabled:!1,"onUpdate:rawDateValue":t[2]||(t[2]=b=>e.handleInput(b))},null,8,["icon","inputValue","minDate"])]),_:1})]),_:1})])}const qs=K(as,[["render",hs],["__scopeId","data-v-6a0cef53"]]);export{Fs as A,Rs as D,ks as I,Es as M,qs as N,Ts as P,$s as T,jn as _,Xa as a,Us as b,Hs as c,Bs as d,Pa as e,As as f,xs as g,Ls as h,Ea as i,ka as j,Ns as k,ws as l,Vs as m,Ps as s,Q as u};
